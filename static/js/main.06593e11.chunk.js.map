{"version":3,"sources":["Routes/AutoMLRoutes.module.scss","Components/Header/AutoMLHeader/AutoMLHeader.module.scss","Components/SideBar/AutoMLSideBar/AutoMLSideBar.module.scss","Components/BreadCrumbs/AutoMLBreadcrumbs/AutoMLBreadcrumbs.js","Components/Header/AutoMLHeader/AutoMLHeader.js","Components/SideBar/AutoMLSideBar/AutoMLSideBar.js","Pages/AutoML/CreateNewModel/CreateNewModel.js","Pages/AutoML/CreateNewProject/CreateNewProject.js","Components/Button/AutoMLNewModelButton/AutoMLNewModelButton.js","Components/List/AutoMLProjectsModelsList/AutoMLProjectsModelsList.js","Components/Icons/AutoML/edit.svg","Components/Icons/AutoML/save.svg","Components/Images/AutoML/Models/classification_model.svg","Components/Icons/AutoML/fileicon.svg","Components/Images/AutoML/Models/forecasting_model.svg","Components/Images/AutoML/Models/timeseries_model.svg","Components/Images/AutoML/Models/regression_model.svg","Components/Drawers/AutoMLModelsDrawer/AutoMLModelsDrawer.js","Components/Icons/AutoML/info.svg","Components/Icons/AutoML/delete.svg","Components/Tables/AutoMLExistingModels/AutoMLExistingModelsTable.js","Pages/AutoML/ExistingModels/ExistingModels.js","Components/Button/AutoMLNewProjectButton/AutoMLNewProjectButton.js","Components/Icons/AutoML/download.svg","Components/Icons/AutoML/share.svg","Components/Tables/AutoMLExistingProjects/AutoMLExistingProjectsTable.js","Components/Drawers/AutoMLProjectsDrawer/AutoMLProjectsDrawer.js","Components/Images/AutoML/shareAvatar.svg","Components/Icons/AutoML/closeicon.svg","Components/Modals/AutoMLProjectShareModal/AutoMLProjectShareModal.js","Components/Tabs/AutoMLProjectsTypeTabs.js","Pages/AutoML/NewProject/NewProject.js","Components/Icons/AutoML/selectedTick.svg","Components/Tables/AutoMLExistingDatasets/AutoMLExistingDatasetsTable.js","Components/Containers/CompaniesGroup/CompaniesGroup.js","Components/Dropdowns/AutoMLSelectDatasetsDropdown/AutoMLSelectDatasetsDropdown.js","Components/Tabs/AutoMLSelectDatasetsTabs/AutoMLSelectDatasetsTabs.js","Pages/AutoML/SelectDatasets/SelectDatasets.js","Components/Icons/AutoML/deleteDatasetIcon.svg","Components/List/SelectedDataList.js","Components/Tables/AutoMLSelectedDataPopupTables/AutoMLSelectedDatasetsPreviewRowsTable.js","Components/Icons/AutoML/eyeicon.svg","Components/Tables/AutoMLSelectedDatasets/AutoMLSelectedDatasetsTable.js","Components/Tables/AutoMLSelectedDatasetsMetaTable/AutoMLSelectedDatasetsMetaTable.js","Pages/AutoML/SelectedDatasets/SelectedDatasets.js","Components/Images/AutoML/leftarrow.svg","Components/Images/AutoML/rightarrow.svg","Components/Containers/ColumnsGroup/ColumnsGroup.js","Components/Icons/AutoML/DatasetProcessing/uparrow.svg","Components/Icons/AutoML/DatasetProcessing/downarrow.svg","Components/Icons/AutoML/DatasetProcessing/circle.svg","Components/Icons/AutoML/DatasetProcessing/eye.svg","Components/List/AutoMLDatasetProcessingList/AutoMLDatasetProcessingList.js","Pages/AutoML/DatasetProcessing/DatasetProcessing.js","Components/Icons/AutoML/SaveDatabucket/databucket.svg","Components/Cards/AutoMLExistingDatabucketCard/AutoMLExistingDatabucketCard.js","Components/Icons/AutoML/SaveDatabucket/fileicon.svg","Components/Modals/AutoMLSaveDatasetModal/AutoMLSaveDatasetModal.js","Components/ReactFlow/LinkColumnsReactFlow/LinkColumnsReactFlow.js","Pages/AutoML/LinkColumns/LinkColumns.js","Components/Tabs/AutoMLCustomisedDatasetTabs/AutoMLCustomisedDatasetTabs.js","Components/Icons/AutoML/targeticon.svg","Components/Dropdowns/AutoMLCustomisedDatasetDropdown/AutoMLCustomisedDatasetDropdown.js","Components/Tables/AutoMLCustomisedDatasetsMetaTable/AutoMLCustomisedDatasetsMetaTable.js","Components/Icons/AutoML/targetblue.svg","Components/Tables/AutoMLCustomisedDatasetsPreviewTable/AutoMLCustomisedDatasetsPreviewTable.js","Pages/AutoML/CustomisedDataset/CustomisedDataset.js","Routes/AutoMLRoutes.js","App.js","reportWebVitals.js","index.js","Pages/AutoML/DatasetProcessing/DatasetProcessing.module.scss","Pages/AutoML/SelectDatasets/SelectDatasets.module.scss","Pages/AutoML/SelectedDatasets/SelectedDatasets.module.scss","Pages/AutoML/CreateNewModel/CreateNewModel.module.scss","Components/Tables/AutoMLExistingModels/AutoMLExistingModelsTable.module.scss","Components/Tables/AutoMLExistingProjects/AutoMLExistingProjectsTable.module.scss","Pages/AutoML/CreateNewProject/CreateNewProject.module.scss","Components/Tables/AutoMLExistingDatasets/AutoMLExistingDatasetsTable.module.scss","Components/Tables/AutoMLSelectedDatasets/AutoMLSelectedDatasetsTable.module.scss"],"names":["module","exports","AutoMLBreadcrumbs","paths","useLocation","pathname","split","style","marginLeft","marginTop","textAlign","map","item","index","Item","href","AutoMLHeader","Header","Layout","className","styles","Container","header","AutoMLSideBar","Sider","width","sidebar","position","height","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","icon","SettingOutlined","CreateNewModel","props","project_id","useParams","useState","m_name","setm_name","m_desc","setm_desc","m_name_error","setm_name_error","enable","setenable","validate","e","a","document","getElementById","borderColor","target","value","format","test","boxShadow","name","length","fontWeight","fontSize","title","backgroundColor","border","htmlFor","label","placeholder","id","input_name","maxLength","minLength","onChange","display","color","fontFamily","span","input_desc","autoSize","minRows","maxRows","showCount","btn_cancel","onClick","history","push","state","detail","type","btn_create","page_name","disabled","CreateNewProject","p_name","setp_name","p_desc","setp_desc","p_name_error","setp_name_error","marginBottom","AutoMLNewModelButton","borderRadius","createModel","PlusOutlined","paddingTop","AutoMLProjectsModelsList","flexDirection","paddingLeft","paddingBottom","marginRight","data","background","padding","last_updated","AutoMLModelsDrawer","TextArea","Input","description","setdescription","editable","seteditable","placement","closable","onClose","visible","drawervisible","flexGrow","lineHeight","textDecoration","cursor","src","saveIcon","editIcon","alt","overflowY","fontStyle","ClassificationImage","fileIcon","margin","letterSpacing","AutoMLExistingModelTable","useHistory","key","accuracy","status","rma","datatable","trs","getElementsByTagName","x","tds","y","list","children","i","selected","rowclick","onMouseOver","getElementsByClassName","Hoverover","onMouseLeave","Hovercancel","titlebold","subtitle","author","overflow","textOverflow","paddingRight","desc","justifyContent","showinfo","infoIcon","deleteIcon","ExistingModels","selected_model","setselected_model","loading","setdrawervisible","active","row","console","log","AutoMLNewProjectButton","createProject","AutoMLExistingProjectsTable","no_of_models","opacity","showModal","downloadIcon","shareIcon","AutoMLProjectsDrawer","AutoMLProjectShareModal","wrapClassName","isModalVisible","onOk","handleOk","onCancel","handleCancel","footer","bodyStyle","closeIcon","ShareAvatar","AntTabs","withStyles","root","borderBottom","indicator","Tabs","AntTab","theme","textTransform","minWidth","typography","fontWeightRegular","spacing","join","disableRipple","useStyles","makeStyles","demo1","palette","paper","demo2","AutoMLProjectsTypeTabs","classes","React","setValue","event","newValue","setTab","aria-label","scrollButtons","NewProject","TabPane","modalvisible","setmodalvisible","tab","settab","val","flex","handleOK","AutoMLExistingDatasetsTable","rows","cols","firstChild","cssText","borderLeft","borderTop","onLoad","RenderRow","selectedTick","CheckableTag","Tag","CompaniesGroup","selectedTags","tag","checked","this","nextSelectedTags","filter","t","setState","indexOf","handleChange","Component","AutoMLSelectDatasetsDropdown","Option","Select","showSearch","optionFilterProp","onFocus","onBlur","onSearch","size","filterOption","input","option","toLowerCase","AutoMLSelectDatasetsTabs","variant","SelectDatasets","model_id","setselectedrow","setSector","justify","container","column1","titleBold","importbutton","sector","continuebutton","column2","minHeight","picker","dateinput","addcartbutton","SelectedDataList","DeleteIcon","AutoMLSelectedDatasetsPreviewRowsTable","element","AutoMLSelectedDatasetsTable","previewDataset","eyeIcon","AutoMLSelectedDatasetsMetaTable","SelectedDatasets","showpopup","setshowpopup","linkcolbutton","info","float","centered","overflowX","ColumnsGroup","AutoMLDatasetProcessingList","elements","clear","all","moveup","upArrow","downArrow","movedown","itemclicked","preview","eye","getlist","DatasetProcessing","dummy","setdummy","meta","setmeta","array_move","arr","old_index","new_index","k","undefined","splice","temp","AutoMLExistingDatabucketCard","highlight","dataBucket","AutoMLSaveDatasetModal","setselected","databuckets","datasets","top","destroyOnClose","for","LinkColumnsReactFlow","initialElements","showresultanttable","setshowresultanttable","rendernew","initialheight","initialwidth","onMoveUp","connectable","selectable","obj","setElements","changed","processed","onMoveDown","row_id","nodesDraggable","reactFlowInstance","project","fitView","includeHiddenNodes","snapToGrid","onConnect","params","found","forEach","isEdge","source_row","source","source_col","target_row","target_col","edge","stroke","strokeWidth","addEdge","onConnectStart","nodeId","handleType","onConnectStop","onElementClick","showInteractive","left","gap","includes","links","sourcetable","targettable","parseInt","sourcearr","targetarr","isNode","custom","mergeElements","showresulttable","generateTable","LinkColumns","showresultantmodal","setshowresultantmodal","saveDataset","setsaveDataset","data_type","customtable","d","AutoMLCustomisedDatasetTabs","AutoMLCustomisedDatasetDropdown","AutoMLCustomisedDatasetsMetaTable","defaultChecked","nullable","missing_values","invalid_values","distinct_values","correlation","AutoMLCustomisedDatasetsPreviewTable","targetBlue","CustomisedDataset","settarget","dataset","previewrows","targetIcon","AutoMLRoutes","content","exact","path","component","leftArrow","rightArrow","App","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.06593e11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"AutoMLRoutes_content__3K_-F\",\"leftArrow\":\"AutoMLRoutes_leftArrow__3vd6t\",\"rightArrow\":\"AutoMLRoutes_rightArrow__ZZe3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"AutoMLHeader_Container__3U4hw\",\"header\":\"AutoMLHeader_header__226bv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"AutoMLSideBar_sidebar__3GcR7\"};","import { Breadcrumb } from \"antd\";\r\nimport React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function AutoMLBreadcrumbs() {\r\n  let location = useLocation();\r\n  let paths = location.pathname.split(\"/\");\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb\r\n        style={{ marginLeft: \"8em\", marginTop: \"10px\", textAlign: \"left\" }}\r\n      >\r\n        {paths\r\n          ? paths.map((item, index) => (\r\n              <Breadcrumb.Item href=\"#\" key={index}>\r\n                {item}\r\n              </Breadcrumb.Item>\r\n            ))\r\n          : null}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./AutoMLHeader.module.scss\";\r\nimport { Layout } from \"antd\";\r\n\r\nexport default function AutoMLHeader() {\r\n  const { Header } = Layout;\r\n\r\n  return (\r\n    <div className={styles.Container}>\r\n      <Header className={styles.header}>\r\n        <div className=\"logo\" />\r\n        <h2>\r\n          Beyond<span> Data</span>\r\n        </h2>\r\n      </Header>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./AutoMLSideBar.module.scss\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { SettingOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function AutoMLSideBar() {\r\n  const { Sider } = Layout;\r\n\r\n  return (\r\n    <Sider\r\n      width={71}\r\n      className={styles.sidebar}\r\n      style={{ position: \"absolute\", height: `100vh` }}\r\n    >\r\n      <Menu\r\n        mode=\"inline\"\r\n        defaultSelectedKeys={[\"1\"]}\r\n        defaultOpenKeys={[\"sub1\"]}\r\n        style={{ height: \"100%\", borderRight: 0 }}\r\n      >\r\n        <Menu.Item key=\"1\" icon={<SettingOutlined />}></Menu.Item>\r\n        <Menu.Item key=\"8\" icon={<SettingOutlined />}></Menu.Item>\r\n        <Menu.Item key=\"12\" icon={<SettingOutlined />}></Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState } from \"react\";\r\nimport { Button, Input } from \"antd\";\r\nimport styles from \"./CreateNewModel.module.scss\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function CreateNewModel(props) {\r\n  let { project_id } = useParams();\r\n  const [m_name, setm_name] = useState(\"\");\r\n  const [m_desc, setm_desc] = useState(\"\");\r\n  const [m_name_error, setm_name_error] = useState(null);\r\n  const [enable, setenable] = useState(false);\r\n\r\n  const checkvals = () => {\r\n    props.history.push({\r\n      pathname: `/automl/projects/${project_id}/models/${m_name}/select_datasets/`,\r\n      state: {\r\n        detail: \"I am from New Models page\",\r\n        page_name: \"automl_select_datasets\",\r\n      },\r\n    });\r\n  };\r\n  const validate = async (e) => {\r\n    setenable(true);\r\n    setm_name_error(null);\r\n    document.getElementById(\"project_name\").style.borderColor = \"#40a9ff\";\r\n    await setm_name(e.target.value);\r\n    var format = /[!@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]+/;\r\n    if (format.test(e.target.value) || format.test(e.target.value)) {\r\n      // let textfield = document.getElementById(\"project_name\");\r\n      // textfield.style.backgroundColor = \"red\";\r\n      setenable(false);\r\n      setm_name_error(\"Model Name contains special characters\");\r\n      document.getElementById(\"project_name\").style.borderColor = \"#EC547A\";\r\n      document.getElementById(\"project_name\").style.boxShadow = \"none\";\r\n    } else {\r\n      setenable(true);\r\n      document.getElementById(\"project_name\").style.borderColor = \"#40a9ff\";\r\n    }\r\n    let name = \"\";\r\n    if (e.target.value.length === 0) {\r\n      name = e.target.value;\r\n    } else {\r\n      name = e.target.value;\r\n    }\r\n    if (e.target.value.length < 3) {\r\n      setenable(false);\r\n      setm_name_error(\"Model Name should be 3 Characters Minimum\");\r\n      document.getElementById(\"project_name\").style.borderColor = \"#EC547A\";\r\n      document.getElementById(\"project_name\").style.boxShadow = \"none\";\r\n    }\r\n    if (name[0] === \" \" || name[0] === \"_\" || name[0] === \"-\") {\r\n      setenable(false);\r\n      setm_name_error(\r\n        \"Model Name first character cannot be a special character\"\r\n      );\r\n      document.getElementById(\"project_name\").style.borderColor = \"#EC547A\";\r\n      document.getElementById(\"project_name\").style.boxShadow = \"none\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"left\" }}>\r\n      <h3\r\n        style={{ fontWeight: \"700\", fontSize: \"18px\" }}\r\n        className={styles.title}\r\n      >\r\n        New Model\r\n      </h3>\r\n      <hr\r\n        style={{ backgroundColor: \"#E1EEFF\", border: \"none\", height: \"1px\" }}\r\n      />\r\n      <label htmlFor=\"project_name\" className={styles.label}>\r\n        Model Name ({m_name.length}/ 30 Characters)\r\n      </label>\r\n      <Input\r\n        placeholder=\"Enter Model Name\"\r\n        id=\"project_name\"\r\n        className={styles.input_name}\r\n        value={m_name}\r\n        maxLength={30}\r\n        minLength={5}\r\n        onChange={(e) => validate(e)}\r\n      />\r\n      <p\r\n        style={\r\n          m_name_error === null\r\n            ? { display: \"none\" }\r\n            : { color: \"#EC547A\", fontSize: \"14px\", fontFamily: \"Lato\" }\r\n        }\r\n      >\r\n        *{m_name_error}\r\n      </p>\r\n      <label htmlFor=\"project_description\" className={styles.label}>\r\n        Model Description <span className={styles.span}>(optional)</span>\r\n      </label>\r\n      <TextArea\r\n        id=\"project_description\"\r\n        className={styles.input_desc}\r\n        placeholder=\"write something about model...\"\r\n        autoSize={{ minRows: 7, maxRows: 10 }}\r\n        showCount\r\n        maxLength=\"300\"\r\n        value={m_desc}\r\n        onChange={(e) => setm_desc(e.target.value)}\r\n      ></TextArea>\r\n      <div style={{}}>\r\n        <a\r\n          className={styles.btn_cancel}\r\n          onClick={() => {\r\n            props.history.push({\r\n              pathname: `/automl/projects/${project_id}/models`,\r\n              state: { detail: \"I am from Create New Project page\" },\r\n            });\r\n          }}\r\n        >\r\n          Cancel\r\n        </a>\r\n        <Button\r\n          type=\"primary\"\r\n          className={styles.btn_create}\r\n          onClick={() => checkvals()}\r\n          disabled={enable === false ? true : false}\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-useless-escape */\r\nimport React, { useState } from \"react\";\r\nimport { Button, Input } from \"antd\";\r\nimport styles from \"./CreateNewProject.module.scss\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport \"./styles.css\";\r\n\r\nexport default function CreateNewProject(props) {\r\n  const [p_name, setp_name] = useState(\"\");\r\n  const [p_desc, setp_desc] = useState(\"\");\r\n  const [p_name_error, setp_name_error] = useState(null);\r\n  const [enable, setenable] = useState(false);\r\n\r\n  const createProject = () => {\r\n    //Api call here to save project\r\n  };\r\n\r\n  const validate = async (e) => {\r\n    setenable(true);\r\n    setp_name_error(null);\r\n    document.getElementById(\"project_name\").style.borderColor = \"#40a9ff\";\r\n    await setp_name(e.target.value);\r\n    var format = /[!@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]+/;\r\n    if (format.test(e.target.value) || format.test(e.target.value)) {\r\n      // let textfield = document.getElementById(\"project_name\");\r\n      // textfield.style.backgroundColor = \"red\";\r\n      setenable(false);\r\n      setp_name_error(\"Project Name contains special characters\");\r\n      document.getElementById(\"project_name\").style.borderColor = \"#EC547A\";\r\n      document.getElementById(\"project_name\").style.boxShadow = \"none\";\r\n    } else {\r\n      setenable(true);\r\n      document.getElementById(\"project_name\").style.borderColor = \"#40a9ff\";\r\n    }\r\n    let name = \"\";\r\n    if (e.target.value.length === 0) {\r\n      name = e.target.value;\r\n    } else {\r\n      name = e.target.value;\r\n    }\r\n    if (e.target.value.length < 3) {\r\n      setenable(false);\r\n      setp_name_error(\"Project Name should be 3 Characters Minimum\");\r\n      document.getElementById(\"project_name\").style.borderColor = \"#EC547A\";\r\n      document.getElementById(\"project_name\").style.boxShadow = \"none\";\r\n    }\r\n    if (name[0] === \" \" || name[0] === \"_\" || name[0] === \"-\") {\r\n      setenable(false);\r\n      setp_name_error(\r\n        \"Project Name first character cannot be a special character\"\r\n      );\r\n      document.getElementById(\"project_name\").style.borderColor = \"#EC547A\";\r\n      document.getElementById(\"project_name\").style.boxShadow = \"none\";\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ textAlign: \"left\" }} className=\"CreateNewProject\">\r\n      <h3 style={{ fontWeight: \"700\", fontSize: \"18px\" }}>New Project</h3>\r\n      <hr\r\n        style={{\r\n          backgroundColor: \"#E1EEFF\",\r\n          border: \"none\",\r\n          height: \"1px\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      />\r\n      <label htmlFor=\"project_name\" className={styles.label}>\r\n        Project Name ({p_name.length}/ 30 Characters)\r\n      </label>\r\n      <Input\r\n        placeholder=\"Enter Project Name\"\r\n        id=\"project_name\"\r\n        className={styles.input_name}\r\n        value={p_name}\r\n        maxLength={30}\r\n        onChange={(e) => validate(e)}\r\n      />\r\n      <p\r\n        style={\r\n          p_name_error === null\r\n            ? { display: \"none\" }\r\n            : { color: \"#EC547A\", fontSize: \"14px\", fontFamily: \"Lato\" }\r\n        }\r\n      >\r\n        *{p_name_error}\r\n      </p>\r\n      <label htmlFor=\"project_description\" className={styles.label}>\r\n        Project Description <span className={styles.span}>(optional)</span>\r\n      </label>\r\n      <TextArea\r\n        id=\"project_description\"\r\n        className={styles.input_desc}\r\n        placeholder=\"Write something about project...\"\r\n        autoSize={{ minRows: 7, maxRows: 10 }}\r\n        showCount\r\n        maxLength=\"300\"\r\n        value={p_desc}\r\n        onChange={(e) => setp_desc(e.target.value)}\r\n      ></TextArea>\r\n      <div style={{}}>\r\n        <a\r\n          className={styles.btn_cancel}\r\n          onClick={() => {\r\n            props.history.push({\r\n              pathname: \"/automl/projects/\",\r\n              state: { detail: \"I am from Create New Project page\" },\r\n            });\r\n          }}\r\n        >\r\n          Cancel\r\n        </a>\r\n        {/* <Button\r\n          className={styles.btn_cancel}\r\n          onClick={() => {\r\n            props.history.push({\r\n              pathname: \"/automl/projects/\",\r\n              state: { detail: \"I am from Create New Project page\" },\r\n            });\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button> */}\r\n        <Button\r\n          type=\"primary\"\r\n          className={styles.btn_create}\r\n          disabled={enable === false ? true : false}\r\n          onClick={() => createProject()}\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport React from \"react\";\r\nimport \"./AutoMLNewModelButton.css\";\r\n\r\nexport default function AutoMLNewModelButton(props) {\r\n  return (\r\n    <div className=\"AutoMLNewModelButton\">\r\n      <Button\r\n        style={{\r\n          width: \"62px\",\r\n          height: \"46px\",\r\n          borderColor: \"#085FAB\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n        onClick={() => props.createModel()}\r\n        type=\"dashed\"\r\n        icon={\r\n          <PlusOutlined\r\n            style={{\r\n              fontSize: \"30px\",\r\n              fontWeight: \"700\",\r\n              color: \"#085FAB\",\r\n              paddingTop: \"5px\",\r\n            }}\r\n          />\r\n        }\r\n      ></Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function AutoMLProjectsModelsList(props) {\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          paddingLeft: \"18px\",\r\n          paddingTop: \"0px\",\r\n          paddingBottom: \"0px\",\r\n          marginRight: \"15px\",\r\n        }}\r\n      >\r\n        <p style={{ width: \"40%\", marginBottom: \"0px\" }}></p>\r\n        <p\r\n          style={{\r\n            width: \"30%\",\r\n            fontFamily: \"Lato\",\r\n            fontSize: \"14px\",\r\n            marginBottom: \"0px\",\r\n          }}\r\n        >\r\n          Model Type\r\n        </p>\r\n        <p\r\n          style={{\r\n            width: \"30%\",\r\n            fontFamily: \"Lato\",\r\n            fontSize: \"14px\",\r\n            marginBottom: \"0px\",\r\n          }}\r\n        >\r\n          Last Updated\r\n        </p>\r\n      </div>\r\n      {props.data.map((item, index) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              background: \"#F5FAFF\",\r\n              borderRadius: \"8px\",\r\n              padding: \"13px\",\r\n              paddingLeft: \"18px\",\r\n              marginBottom: \"10px\",\r\n              height: \"50px\",\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                width: \"40%\",\r\n                fontFamily: \"Lato\",\r\n                fontWeight: \"700\",\r\n                fontSize: \"14px\",\r\n                color: \"#707070\",\r\n              }}\r\n            >\r\n              {item.name}\r\n            </p>\r\n            <p\r\n              style={{\r\n                width: \"30%\",\r\n                fontFamily: \"Lato\",\r\n                fontWeight: \"500\",\r\n                fontSize: \"13px\",\r\n                color: \"#707070\",\r\n              }}\r\n            >\r\n              {item.type}\r\n            </p>\r\n            <p\r\n              style={{\r\n                width: \"30%\",\r\n                fontFamily: \"Lato\",\r\n                fontWeight: \"500\",\r\n                fontSize: \"13px\",\r\n                color: \"#707070\",\r\n              }}\r\n            >\r\n              {item.last_updated}\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/edit.1d3c5cb7.svg\";","export default __webpack_public_path__ + \"static/media/save.48893498.svg\";","export default __webpack_public_path__ + \"static/media/classification_model.41a4d664.svg\";","export default __webpack_public_path__ + \"static/media/fileicon.e3b70db6.svg\";","export default __webpack_public_path__ + \"static/media/forecasting_model.9c1ff69c.svg\";","export default __webpack_public_path__ + \"static/media/timeseries_model.ce9408d1.svg\";","export default __webpack_public_path__ + \"static/media/regression_model.518e0b43.svg\";","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-unused-vars */\r\nimport { Button, Drawer } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport \"./AutoMLModelsDrawer.css\";\r\nimport { Input } from \"antd\";\r\nimport AutoMLProjectsModelsList from \"../../List/AutoMLProjectsModelsList/AutoMLProjectsModelsList\";\r\nimport editIcon from \"../../Icons/AutoML/edit.svg\";\r\nimport saveIcon from \"../../Icons/AutoML/save.svg\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ClassificationImage from \"../../Images/AutoML/Models/classification_model.svg\";\r\nimport forecastingImage from \"../../Images/AutoML/Models/forecasting_model.svg\";\r\nimport timeseriesImage from \"../../Images/AutoML/Models/timeseries_model.svg\";\r\nimport regressionImage from \"../../Images/AutoML/Models/regression_model.svg\";\r\nimport fileIcon from \"../../Icons/AutoML/fileicon.svg\";\r\n\r\nexport default function AutoMLModelsDrawer(props) {\r\n  let { project_id } = useParams();\r\n\r\n  const { TextArea } = Input;\r\n  const [description, setdescription] = useState(\r\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore Lorem ipsum dolor sit amet,consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore Lorem ipsum dolor sit amet, consectetur adipiscing elit, seddo eiusmod tempor incididunt ut l abore.\"\r\n  );\r\n  const [title, settitle] = useState(\"Stock Prediction\");\r\n  const [editable, seteditable] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      id=\"AutoMLModelsDrawer\"\r\n      // style={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\" }}\r\n    >\r\n      <Drawer\r\n        className=\"drawer\"\r\n        placement=\"right\"\r\n        closable={false}\r\n        width={\"39%\"}\r\n        onClose={() => {\r\n          seteditable(false);\r\n          props.onClose();\r\n        }}\r\n        visible={props.drawervisible}\r\n      >\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}\r\n        >\r\n          <p\r\n            style={{\r\n              marginTop: \"10px\",\r\n              marginBottom: \"0px\",\r\n              fontSize: \"12px\",\r\n              color: \"#085FAB\",\r\n            }}\r\n          >\r\n            {project_id}\r\n          </p>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              fontFamily: \"Lato\",\r\n              height: \"30px\",\r\n            }}\r\n          >\r\n            {editable === false ? (\r\n              <h2\r\n                style={{\r\n                  flexGrow: \"1\",\r\n                  fontSize: \"20px\",\r\n                  fontWeight: \"bold\",\r\n                  lineHeight: \"24px\",\r\n                  fontFamily: \"Lato\",\r\n                }}\r\n              >\r\n                {title}\r\n              </h2>\r\n            ) : (\r\n              <div style={{ flexGrow: \"1\" }}>\r\n                <Input\r\n                  value={title}\r\n                  style={{\r\n                    height: \"30px\",\r\n                    fontSize: \"20px\",\r\n                    fontWeight: \"bold\",\r\n                    lineHeight: \"24px\",\r\n                    fontFamily: \"Lato\",\r\n                    width: \"50%\",\r\n                    // borderRadius: \"10px\",\r\n                    // padding: \"10px\",\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n            <a\r\n              style={\r\n                editable === true\r\n                  ? {\r\n                      textDecoration: \"none\",\r\n                      color: \"#6d6d6d\",\r\n                      marginRight: \"23px\",\r\n                      fontSize: \"14px\",\r\n                    }\r\n                  : { display: \"none\" }\r\n              }\r\n              onClick={() => seteditable(!editable)}\r\n            >\r\n              Discard\r\n            </a>\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => seteditable(!editable)}\r\n            >\r\n              <img\r\n                src={editable === true ? saveIcon : editIcon}\r\n                alt=\"edit icon\"\r\n                style={{ width: \"16px\", marginBottom: \"2px\" }}\r\n              ></img>\r\n              <span\r\n                style={{\r\n                  fontWeight: \"700\",\r\n                  fontSize: \"14px\",\r\n                  marginLeft: \"4px\",\r\n                  color: \"#6D6D6D\",\r\n                  fontFamily: \"Lato\",\r\n                }}\r\n              >\r\n                {editable === true ? \"Save\" : \" Edit\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{ fontFamily: \"Lato\", fontSize: \"12px\", color: \"#6D6D6D\" }}\r\n          >\r\n            Created by:{\" \"}\r\n            <span style={{ color: \"#085FAB\", fontWeight: \"700\" }}>\r\n              -Author-\r\n            </span>\r\n          </div>\r\n          <div\r\n            style={{\r\n              fontWeight: \"700\",\r\n              fontFamily: \"Lato\",\r\n              fontSize: \"14px\",\r\n              marginTop: \"15px\",\r\n            }}\r\n          >\r\n            Model Description\r\n          </div>\r\n          <div\r\n            style={{ marginTop: \"15px\", height: \"100px\", overflowY: \"hidden\" }}\r\n          >\r\n            <p\r\n              style={\r\n                editable === false\r\n                  ? { fontFamily: \"Lato\", fontSize: \"14px\", color: \"#6D6D6D\" }\r\n                  : { display: \"none\" }\r\n              }\r\n            >\r\n              {description}\r\n            </p>\r\n            <TextArea\r\n              style={\r\n                editable === true\r\n                  ? { fontFamily: \"Lato\", fontSize: \"14px\", color: \"#6D6D6D\" }\r\n                  : { display: \"none\" }\r\n              }\r\n              value={description}\r\n              onChange={(e) => setdescription(e.target.value)}\r\n              placeholder=\"Controlled autosize\"\r\n              autoSize={{ minRows: 3, maxRows: 5 }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <div\r\n              style={{\r\n                fontWeight: \"700\",\r\n                fontFamily: \"Lato\",\r\n                fontSize: \"14px\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              Model Performance\r\n            </div>\r\n            <p\r\n              style={{\r\n                fontFamily: \"Lato\",\r\n                fontSize: \"12px\",\r\n                fontStyle: \"italic\",\r\n                color: \"#6d6d6d\",\r\n              }}\r\n            >\r\n              Accuracy (in percentage):{\" \"}\r\n              <span\r\n                style={{\r\n                  fontFamily: \"Lato\",\r\n                  fontSize: \"12px\",\r\n                  fontStyle: \"normal\",\r\n                  fontWeight: \"bold\",\r\n                  color: \"#085FAB\",\r\n                }}\r\n              >\r\n                94\r\n              </span>{\" \"}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <div\r\n              style={{\r\n                fontWeight: \"700\",\r\n                fontFamily: \"Lato\",\r\n                fontSize: \"14px\",\r\n                marginTop: \"30px\",\r\n              }}\r\n            >\r\n              Model Type\r\n            </div>\r\n            <img\r\n              src={ClassificationImage}\r\n              width={140}\r\n              style={{ marginLeft: \"-20px\" }}\r\n            />\r\n          </div>\r\n          <div style={{ flexGrow: \"1\" }}>\r\n            <div\r\n              style={{\r\n                fontWeight: \"700\",\r\n                fontFamily: \"Lato\",\r\n                fontSize: \"14px\",\r\n                marginTop: \"0px\",\r\n              }}\r\n            >\r\n              Dataset Used\r\n            </div>\r\n            <div>\r\n              <div\r\n                style={{\r\n                  height: \"40px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  backgroundColor: \"#F5FAFF\",\r\n                  borderRadius: \"10px\",\r\n                  padding: \"9px\",\r\n                }}\r\n              >\r\n                <img src={fileIcon} width={12} style={{ marginLeft: \"10px\" }} />\r\n                <p\r\n                  style={{\r\n                    flexGrow: \"1\",\r\n                    margin: \"auto\",\r\n                    display: \"block\",\r\n                    paddingLeft: \"7px\",\r\n                    fontFamily: \"Lato\",\r\n                    color: \"#6d6d6d\",\r\n                    fontStyle: \"normal\",\r\n                  }}\r\n                >\r\n                  Lorem Ipsum\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    margin: \"auto\",\r\n                    display: \"block\",\r\n                    fontFamily: \"Lato\",\r\n                    color: \"#6d6d6d\",\r\n                    fontStyle: \"normal\",\r\n                    marginRight: \"20px\",\r\n                  }}\r\n                >\r\n                  Path\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div style={{ flexGrow: \"1\" }}></div>\r\n          <Button\r\n            style={{\r\n              width: \"140px\",\r\n              height: \"40px\",\r\n              background: \"#085FAB\",\r\n              borderRadius: \"64px\",\r\n              fontFamily: \"Lato\",\r\n              fontSize: \"16px\",\r\n              fontWeight: \"700\",\r\n              color: \"white\",\r\n              letterSpacing: \"0.5px\",\r\n              marginTop: \"30px\",\r\n              border: \"none\",\r\n              paddingBottom: \"5px\",\r\n            }}\r\n          >\r\n            Predict\r\n          </Button>\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/info.0879e1b1.svg\";","export default __webpack_public_path__ + \"static/media/delete.f7e1d5fc.svg\";","/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Table, Space, Empty, Button, Tag } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport styles from \"./AutoMLExistingModelsTable.module.scss\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport infoIcon from \"../../Icons/AutoML/info.svg\";\r\nimport deleteIcon from \"../../Icons/AutoML/delete.svg\";\r\nimport { List } from \"antd/lib/form/Form\";\r\n\r\nexport default function AutoMLExistingModelTable(props) {\r\n  let history = useHistory();\r\n  let { project_id } = useParams();\r\n\r\n  // var tds = document.getElementsByTagName(\"td\");\r\n  // for (var i = 0; i < tds.length; i++) {\r\n  //   tds[i].onmouseover = function () {\r\n  //     this.parentNode.style.background = \"#ff0000\";\r\n  //   };\r\n  //   tds[i].onmouseout = function () {\r\n  //     this.parentNode.style.backgroundColor = \"#fff\";\r\n  //   };\r\n  // }\r\n\r\n  const data = [\r\n    {\r\n      key: \"1\",\r\n      name: \"Stock Prediction\",\r\n      accuracy: 12,\r\n      state: \"In Progress\",\r\n      description: \"I am a Model\",\r\n      status: \"New\",\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      name: \"Stock Prediction\",\r\n      accuracy: 72,\r\n      state: \"Training\",\r\n      description: \"I am a Model\",\r\n      status: \"Updated\",\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      name: \"Stock Prediction\",\r\n      accuracy: 52,\r\n      state: \"Training\",\r\n      description: \"I am a Model\",\r\n      status: \"Update Available\",\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n    },\r\n    {\r\n      key: \"4\",\r\n      name: \"Stock Prediction\",\r\n      rma: 12,\r\n      accuracy: 72,\r\n      state: \"Deployed\",\r\n      description: \"I am a Model\",\r\n      status: \"New\",\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n    },\r\n    {\r\n      key: \"5\",\r\n      name: \"Stock Prediction\",\r\n      accuracy: 72,\r\n      state: \"In Progress\",\r\n      description: \"I am a Model\",\r\n      status: \"New\",\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n    },\r\n  ];\r\n\r\n  const rowclick = (id) => {\r\n    let trs = document.getElementsByTagName(\"tr\");\r\n    for (var x of trs) {\r\n      x.style.backgroundColor = \"#f5faff\";\r\n      // var css = \"tbody tr:hover { background: red;}\";\r\n      // var s = document.createElement(\"style\");\r\n\r\n      // if (s.styleSheet) {\r\n      //   s.styleSheet.cssText = css;\r\n      // } else {\r\n      //   s.appendChild(document.createTextNode(css));\r\n      // }\r\n      // x.appendChild(s);\r\n      x.className = \"\";\r\n    }\r\n    let tds = document.getElementsByTagName(\"td\");\r\n    for (var y of tds) {\r\n      y.style.fontWeight = \"normal\";\r\n      y.style.color = \"#6D6d6d\";\r\n    }\r\n    document.getElementById(id).className = \"selected\";\r\n    document.getElementById(id).style.backgroundColor = \"#e1eeff\";\r\n    let list = document.getElementById(id).children;\r\n    for (var i = 0; i < list.length; i++) {\r\n      list[i].style.fontWeight = \"700\";\r\n    }\r\n\r\n    props.selected(id);\r\n  };\r\n\r\n  const Hoverover = (index) => {\r\n    // console.log(document.getElementById(index));\r\n    if (document.getElementsByClassName(\"selected\")[0]) {\r\n      if (document.getElementsByClassName(\"selected\")[0].id !== index) {\r\n        document.getElementById(index).style.backgroundColor = \"#e1eeff\";\r\n      }\r\n    }\r\n  };\r\n  const Hovercancel = (index) => {\r\n    // console.log(document.getElementById(index));\r\n    if (document.getElementsByClassName(\"selected\")[0]) {\r\n      if (document.getElementsByClassName(\"selected\")[0].id !== index) {\r\n        document.getElementById(index).style.backgroundColor = \"#f5faff\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const getrows = () => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <tr\r\n          id={item.key}\r\n          key={index}\r\n          onClick={() => {\r\n            rowclick(item.key);\r\n            // props.selected(item.key);\r\n          }}\r\n          onMouseOver={() => Hoverover(item.key)}\r\n          onMouseLeave={() => Hovercancel(item.key)}\r\n        >\r\n          <td>\r\n            <p className={styles.titlebold}>{item.name}</p>\r\n            <span className={styles.subtitle}>\r\n              Created by:{\" \"}\r\n              <span\r\n                className={styles.author}\r\n                style={{\r\n                  backgroundColor: \"#B8F2FF\",\r\n                  color: \"#38B7D3\",\r\n                  fontWeight: \"normal\",\r\n                  borderRadius: \"50%\",\r\n                  border: \"1px solid #38B7D3\",\r\n                  height: \"25px\",\r\n                  fontSize: \"10px\",\r\n                  padding: \"3px\",\r\n                }}\r\n              >\r\n                JD\r\n              </span>\r\n            </span>\r\n          </td>\r\n          <td\r\n            className={styles.description}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              textOverflow: \"ellipsis\",\r\n              paddingRight: \"70px\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {item.description}{\" \"}\r\n          </td>\r\n          <td>\r\n            <div\r\n              style={{\r\n                fontSize: \"14px\",\r\n                fontWeight: \"normal\",\r\n                color: \"#6d6d6d\",\r\n                fontFamily: \"Lato\",\r\n              }}\r\n            >\r\n              Accuracy:{\" \"}\r\n              {<span style={{ fontWeight: \"700\" }}>{item.accuracy}</span>}\r\n            </div>\r\n            <div\r\n              style={\r\n                item.state === \"In Progress\"\r\n                  ? { fontSize: \"14px\", color: \"#A3A3A3\" }\r\n                  : item.state === \"Training\"\r\n                  ? { fontSize: \"14px\", color: \"#E15100 \" }\r\n                  : { color: \"#1DDFA9\", fontSize: \"14px\" }\r\n              }\r\n            >\r\n              {item.state}\r\n            </div>\r\n          </td>\r\n          <td className={styles.last_updated}>\r\n            <p className={styles.desc}>{item.last_updated}</p>\r\n          </td>\r\n          <td>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                marginRight: \"40px\",\r\n              }}\r\n            >\r\n              <a\r\n                style={{\r\n                  textDecoration: \" none\",\r\n                  fontStyle: \"normal\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"14px\",\r\n                  color: \"#6d6d6d\",\r\n                }}\r\n                onClick={() => props.showinfo(item.key)}\r\n              >\r\n                <img\r\n                  src={infoIcon}\r\n                  alt=\"delete icon\"\r\n                  style={{ width: \"16px\" }}\r\n                ></img>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"700\",\r\n                    fontSize: \"12px\",\r\n                    marginLeft: \"4px\",\r\n                  }}\r\n                >\r\n                  Info\r\n                </span>\r\n              </a>\r\n              <a\r\n                style={{\r\n                  textDecoration: \" none\",\r\n                  fontStyle: \"normal\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"14px\",\r\n                  color: \"#6d6d6d\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={deleteIcon}\r\n                  alt=\"delete icon\"\r\n                  style={{ width: \"16px\" }}\r\n                ></img>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"700\",\r\n                    fontSize: \"12px\",\r\n                    marginLeft: \"4px\",\r\n                  }}\r\n                >\r\n                  Delete\r\n                </span>\r\n              </a>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Container}>\r\n      {data ? (\r\n        <table className={styles.datatable}>\r\n          <thead>\r\n            <tr>\r\n              <th> </th>\r\n              <th>Description</th>\r\n              <th>Status</th>\r\n              <th>Last Updated</th>\r\n              <th> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{getrows()}</tbody>\r\n        </table>\r\n      ) : (\r\n        <Empty />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Skeleton } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport AutoMLNewModelButton from \"../../../Components/Button/AutoMLNewModelButton/AutoMLNewModelButton\";\r\nimport AutoMLModelsDrawer from \"../../../Components/Drawers/AutoMLModelsDrawer/AutoMLModelsDrawer\";\r\nimport AutoMLExistingModelsTable from \"../../../Components/Tables/AutoMLExistingModels/AutoMLExistingModelsTable\";\r\nimport \"./styles.css\";\r\n\r\nexport default function ExistingModels(props) {\r\n  const { project_id } = useParams();\r\n  const [selected_model, setselected_model] = useState(null);\r\n  const [loading, setloading] = useState(false);\r\n  const [drawervisible, setdrawervisible] = useState(false);\r\n\r\n  const createModel = () => {\r\n    props.history.push({\r\n      pathname: `/automl/projects/${project_id}/models/newmodel`,\r\n      state: { detail: \"I am from Models page\" },\r\n    });\r\n  };\r\n\r\n  const showinfo = (row) => {\r\n    setdrawervisible(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"ExistingModels\"\r\n      style={{\r\n        textAlign: \"left\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          fontStyle: \"normal\",\r\n          fontWeight: \"normal\",\r\n          fontSize: \"12px\",\r\n          lineHeight: \"13px\",\r\n          color: \"#085FAB\",\r\n        }}\r\n      >\r\n        {project_id}\r\n      </div>\r\n      <h3 style={{ fontWeight: \"700\", marginTop: \"2px\", fontSize: \"18px\" }}>\r\n        New Model\r\n      </h3>\r\n      <hr\r\n        style={{\r\n          backgroundColor: \"#E1EEFF\",\r\n          marginTop: \"0px\",\r\n          marginBottom: \"20px\",\r\n          border: \"none\",\r\n          height: \"1px\",\r\n          width: \"100%\",\r\n        }}\r\n      />\r\n      <AutoMLNewModelButton createModel={() => createModel()} />\r\n      <h3\r\n        style={{\r\n          display: \"inline-block\",\r\n          fontWeight: \"600\",\r\n          fontSize: \"18px\",\r\n          marginTop: \"20px\",\r\n          width: \"20%\",\r\n        }}\r\n      >\r\n        Models\r\n      </h3>\r\n\r\n      <hr\r\n        style={{\r\n          backgroundColor: \"#E1EEFF\",\r\n          marginTop: \"2px\",\r\n          border: \"none\",\r\n          height: \"1px\",\r\n          marginBottom: \"0px\",\r\n          width: \"100%\",\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          flexGrow: \"1\",\r\n          overflowY: \"scroll\",\r\n          paddingRight: \"10px\",\r\n          marginTop: \"10px\",\r\n        }}\r\n      >\r\n        {loading === true ? (\r\n          <Skeleton active loading={loading} />\r\n        ) : (\r\n          <AutoMLExistingModelsTable\r\n            selected={(id) => setselected_model(id)}\r\n            showinfo={showinfo}\r\n          />\r\n        )}\r\n      </div>\r\n      <AutoMLModelsDrawer\r\n        onClose={() => setdrawervisible(false)}\r\n        drawervisible={drawervisible}\r\n      />\r\n\r\n      <hr\r\n        style={{\r\n          backgroundColor: \"#E1EEFF\",\r\n          border: \"none\",\r\n          height: \"1px\",\r\n          marginTop: \"0px\",\r\n        }}\r\n      />\r\n      {loading === true ? null : (\r\n        <div\r\n          className=\"ExistingModelsButtons\"\r\n          style={selected_model === null ? { display: \"none\" } : null}\r\n        >\r\n          <Button\r\n            style={{\r\n              borderRadius: \"64px\",\r\n              marginRight: \"10px\",\r\n              width: \"161px\",\r\n              height: \"40px\",\r\n              // color: selected_model === null ? \"grey\" : \"#085FAB\",\r\n              borderColor: selected_model === null ? \"grey\" : \"#085FAB\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"16px\",\r\n            }}\r\n            disabled={selected_model === null ? true : false}\r\n            onClick={() => {\r\n              console.log(selected_model);\r\n            }}\r\n          >\r\n            Predict\r\n          </Button>\r\n          <Button\r\n            style={{\r\n              borderRadius: \"64px\",\r\n              marginRight: \"10px\",\r\n              width: \"161px\",\r\n              height: \"40px\",\r\n              // color: selected_model === null ? \"grey\" : \"#085FAB\",\r\n              borderColor: selected_model === null ? \"grey\" : \"#085FAB\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"16px\",\r\n            }}\r\n            disabled={selected_model === null ? true : false}\r\n          >\r\n            Retrain Model\r\n          </Button>\r\n          <Button\r\n            style={{\r\n              borderRadius: \"64px\",\r\n              marginRight: \"10px\",\r\n              width: \"161px\",\r\n              height: \"40px\",\r\n              // color: selected_model === null ? \"grey\" : \"#085FAB\",\r\n              borderColor: selected_model === null ? \"grey\" : \"#085FAB\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"16px\",\r\n            }}\r\n            disabled={selected_model === null ? true : false}\r\n          >\r\n            Modify Model\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport React from \"react\";\r\nimport \"./AutoMLNewProjectButton.css\";\r\n\r\nexport default function AutoMLNewProjectButton(props) {\r\n  return (\r\n    <div className=\"AutoMLNewProjectButton\">\r\n      <Button\r\n        style={{\r\n          width: \"62px\",\r\n          height: \"46px\",\r\n          borderColor: \"#085FAB\",\r\n          borderRadius: \"10px\",\r\n          // backgroundImage:\r\n          //   \"url(data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='%23333' stroke-width='4' stroke-dasharray='6%2c 14' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e)\",\r\n        }}\r\n        onClick={() => props.createProject()}\r\n        type=\"dashed\"\r\n        icon={\r\n          <PlusOutlined\r\n            style={{\r\n              fontSize: \"30px\",\r\n              fontWeight: \"700\",\r\n              color: \"#085FAB\",\r\n              paddingTop: \"5px\",\r\n            }}\r\n          />\r\n        }\r\n      ></Button>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/download.49cc4d7c.svg\";","export default __webpack_public_path__ + \"static/media/share.bfabba03.svg\";","/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Space, Empty } from \"antd\";\r\nimport styles from \"./AutoMLExistingProjectsTable.module.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport deleteIcon from \"../../Icons/AutoML/delete.svg\";\r\nimport infoIcon from \"../../Icons/AutoML/info.svg\";\r\nimport downloadIcon from \"../../Icons/AutoML/download.svg\";\r\nimport shareIcon from \"../../Icons/AutoML/share.svg\";\r\nimport \"../tables.css\";\r\n\r\nexport default function AutoMLExistingProjectsTable(props) {\r\n  let history = useHistory();\r\n\r\n  const data = [\r\n    {\r\n      key: \"1\",\r\n      name: \"Trade Prediction\",\r\n      no_of_models: 12,\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n      description:\r\n        \"I am a new project,I am a new project,I am a new ,I am a new project,I am a new projectI am a new project,,I am a new project,\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      name: \"Trade Prediction\",\r\n      no_of_models: 12,\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n      description: \"I am a new project\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      name: \"Trade Prediction\",\r\n      no_of_models: 12,\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n      description: \"I am a new project\",\r\n    },\r\n    {\r\n      key: \"4\",\r\n      name: \"Trade Prediction\",\r\n      no_of_models: 12,\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n      description: \"I am a new project\",\r\n    },\r\n    {\r\n      key: \"5\",\r\n      name: \"Trade Prediction\",\r\n      no_of_models: 12,\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n      description: \"I am a new project\",\r\n    },\r\n  ];\r\n\r\n  const getrows = () => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <tr id={item.key} key={index}>\r\n          <td\r\n            style={{\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => {\r\n              history.push({\r\n                pathname: `/automl/projects/${item.name}/models`,\r\n                state: { detail: `I am ${item.name}` },\r\n              });\r\n            }}\r\n          >\r\n            <a\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: \"#38B7D3\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                history.push({\r\n                  pathname: `/automl/projects/${item.name}/models`,\r\n                  state: { detail: `I am ${item.name}` },\r\n                });\r\n              }}\r\n            >\r\n              <p className={styles.titlebold}>{item.name}</p>\r\n            </a>\r\n            <span className={styles.subtitle}>\r\n              Created by:{\" \"}\r\n              <span\r\n                className={styles.author}\r\n                style={{\r\n                  backgroundColor: \"#B8F2FF\",\r\n                  color: \"#38B7D3\",\r\n                  fontWeight: \"normal\",\r\n                  borderRadius: \"50%\",\r\n                  border: \"1px solid #38B7D3\",\r\n                  height: \"25px\",\r\n                  fontSize: \"10px\",\r\n                  padding: \"3px\",\r\n                }}\r\n              >\r\n                BD\r\n              </span>\r\n            </span>\r\n          </td>\r\n          <td\r\n            onClick={() => {\r\n              history.push({\r\n                pathname: `/automl/projects/${item.name}/models`,\r\n                state: { detail: `I am ${item.name}` },\r\n              });\r\n            }}\r\n            className={styles.description}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              textOverflow: \"ellipsis\",\r\n              paddingRight: \"70px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {item.description}{\" \"}\r\n          </td>\r\n          {/* <td className={styles.status}> {item.no_of_models} </td> */}\r\n          <td\r\n            className={styles.last_updated}\r\n            style={{\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => {\r\n              history.push({\r\n                pathname: `/automl/projects/${item.name}/models`,\r\n                state: { detail: `I am ${item.name}` },\r\n              });\r\n            }}\r\n          >\r\n            <p className={styles.desc}>{item.last_updated}</p>\r\n          </td>\r\n          <td>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                marginRight: \"20px\",\r\n              }}\r\n            >\r\n              <a\r\n                style={{\r\n                  textDecoration: \" none\",\r\n                  fontStyle: \"normal\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"14px\",\r\n                  color: \"#6d6d6d\",\r\n                }}\r\n                onClick={() => props.showinfo(item.key)}\r\n              >\r\n                <img\r\n                  src={infoIcon}\r\n                  alt=\"delete icon\"\r\n                  style={{ width: \"16px\" }}\r\n                ></img>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"700\",\r\n                    fontSize: \"12px\",\r\n                    marginLeft: \"4px\",\r\n                  }}\r\n                >\r\n                  Info\r\n                </span>\r\n              </a>\r\n              <a\r\n                style={\r\n                  props.type === \"downloaded_projects\"\r\n                    ? {\r\n                        textDecoration: \" none\",\r\n\r\n                        fontStyle: \"normal\",\r\n                        cursor: \"not-allowed\",\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"14px\",\r\n                        color: \"grey\",\r\n                        opacity: \"0.4\",\r\n                      }\r\n                    : {\r\n                        textDecoration: \" none\",\r\n                        fontStyle: \"normal\",\r\n\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"14px\",\r\n                        color: \"#6d6d6d\",\r\n                      }\r\n                }\r\n                onClick={() => props.showModal(item.key)}\r\n              >\r\n                <img\r\n                  src={\r\n                    props.type === \"global_projects\" ? downloadIcon : shareIcon\r\n                  }\r\n                  alt=\"delete icon\"\r\n                  style={{ width: \"16px\" }}\r\n                ></img>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"700\",\r\n                    fontSize: \"12px\",\r\n                    marginLeft: \"4px\",\r\n                  }}\r\n                >\r\n                  {props.type === \"global_projects\" ? \"Download\" : \"Share\"}\r\n                </span>\r\n              </a>\r\n              <a\r\n                style={{\r\n                  textDecoration: \" none\",\r\n                  fontStyle: \"normal\",\r\n\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"14px\",\r\n                  color: \"#6d6d6d\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={deleteIcon}\r\n                  alt=\"delete icon\"\r\n                  style={{ width: \"16px\" }}\r\n                ></img>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"700\",\r\n                    fontSize: \"12px\",\r\n                    marginLeft: \"4px\",\r\n                  }}\r\n                >\r\n                  Delete\r\n                </span>\r\n              </a>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Container}>\r\n      {data ? (\r\n        <table className={styles.datatable} id=\"DataTable\">\r\n          <thead>\r\n            <tr>\r\n              <th> </th>\r\n              <th>Description</th>\r\n              <th>Last Updated</th>\r\n              <th> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{getrows()}</tbody>\r\n        </table>\r\n      ) : (\r\n        <Empty />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-unused-vars */\r\nimport { Button, Drawer } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport \"./AutoMLProjectsDrawer.css\";\r\nimport { Input } from \"antd\";\r\nimport AutoMLProjectsModelsList from \"../../List/AutoMLProjectsModelsList/AutoMLProjectsModelsList\";\r\nimport editIcon from \"../../Icons/AutoML/edit.svg\";\r\nimport saveIcon from \"../../Icons/AutoML/save.svg\";\r\n\r\nexport default function AutoMLProjectsDrawer(props) {\r\n  const { TextArea } = Input;\r\n  const [description, setdescription] = useState(\r\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore Lorem ipsum dolor sit amet,consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore Lorem ipsum dolor sit amet, consectetur adipiscing elit, seddo eiusmod tempor incididunt ut l abore.\"\r\n  );\r\n  const [title, settitle] = useState(\"Stock Prediction\");\r\n  const [editable, seteditable] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      id=\"AutoMLProjectsDrawer\"\r\n      // style={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\" }}\r\n    >\r\n      <Drawer\r\n        className=\"drawer\"\r\n        placement=\"right\"\r\n        closable={false}\r\n        width={\"39%\"}\r\n        onClose={() => {\r\n          seteditable(false);\r\n          props.onClose();\r\n        }}\r\n        visible={props.drawervisible}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            fontFamily: \"Lato\",\r\n            marginTop: \"30px\",\r\n            height: \"30px\",\r\n          }}\r\n        >\r\n          {editable === false ? (\r\n            <h2\r\n              style={{\r\n                flexGrow: \"1\",\r\n                fontSize: \"20px\",\r\n                fontWeight: \"bold\",\r\n                lineHeight: \"24px\",\r\n                fontFamily: \"Lato\",\r\n              }}\r\n            >\r\n              {title}\r\n            </h2>\r\n          ) : (\r\n            <div style={{ flexGrow: \"1\" }}>\r\n              <Input\r\n                value={title}\r\n                style={{\r\n                  height: \"30px\",\r\n                  fontSize: \"20px\",\r\n                  fontWeight: \"bold\",\r\n                  lineHeight: \"24px\",\r\n                  fontFamily: \"Lato\",\r\n                  width: \"50%\",\r\n                  // borderRadius: \"10px\",\r\n                  // padding: \"10px\",\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          <a\r\n            style={\r\n              editable === true\r\n                ? {\r\n                    textDecoration: \"none\",\r\n                    color: \"#6d6d6d\",\r\n                    marginRight: \"23px\",\r\n                    fontSize: \"14px\",\r\n                  }\r\n                : { display: \"none\" }\r\n            }\r\n            onClick={() => seteditable(!editable)}\r\n          >\r\n            Discard\r\n          </a>\r\n          <div\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => seteditable(!editable)}\r\n          >\r\n            <img\r\n              src={editable === true ? saveIcon : editIcon}\r\n              alt=\"edit icon\"\r\n              style={{ width: \"16px\", marginBottom: \"2px\" }}\r\n            ></img>\r\n            <span\r\n              style={{\r\n                fontWeight: \"700\",\r\n                fontSize: \"14px\",\r\n                marginLeft: \"4px\",\r\n                color: \"#6D6D6D\",\r\n                fontFamily: \"Lato\",\r\n              }}\r\n            >\r\n              {editable === true ? \"Save\" : \" Edit\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ fontFamily: \"Lato\", fontSize: \"12px\", color: \"#6D6D6D\" }}>\r\n          Created by:{\" \"}\r\n          <span style={{ color: \"#085FAB\", fontWeight: \"700\" }}>-Author-</span>\r\n        </div>\r\n        <div\r\n          style={{\r\n            fontWeight: \"700\",\r\n            fontFamily: \"Lato\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"30px\",\r\n          }}\r\n        >\r\n          Project Description\r\n        </div>\r\n        <div style={{ marginTop: \"15px\", height: \"100px\" }}>\r\n          <p\r\n            style={\r\n              editable === false\r\n                ? { fontFamily: \"Lato\", fontSize: \"14px\", color: \"#6D6D6D\" }\r\n                : { display: \"none\" }\r\n            }\r\n          >\r\n            {description}\r\n          </p>\r\n          <TextArea\r\n            style={\r\n              editable === true\r\n                ? { fontFamily: \"Lato\", fontSize: \"14px\", color: \"#6D6D6D\" }\r\n                : { display: \"none\" }\r\n            }\r\n            value={description}\r\n            onChange={(e) => setdescription(e.target.value)}\r\n            placeholder=\"Controlled autosize\"\r\n            autoSize={{ minRows: 3, maxRows: 5 }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <div\r\n            style={{\r\n              fontWeight: \"700\",\r\n              fontFamily: \"Lato\",\r\n              fontSize: \"14px\",\r\n              marginTop: \"30px\",\r\n            }}\r\n          >\r\n            Models\r\n          </div>\r\n          <div style={{ height: \"40vh\", overflowY: \"scroll\" }}>\r\n            <AutoMLProjectsModelsList\r\n              data={[\r\n                {\r\n                  id: \"1\",\r\n                  name: \"Price Prediction Model\",\r\n                  type: \"Classification\",\r\n                  last_updated: \"21 Dec, 2020\",\r\n                },\r\n                {\r\n                  id: \"2\",\r\n                  name: \"Price Prediction Model\",\r\n                  type: \"Classification\",\r\n                  last_updated: \"21 Dec, 2020\",\r\n                },\r\n                {\r\n                  id: \"3\",\r\n                  name: \"Price Prediction Model\",\r\n                  type: \"Classification\",\r\n                  last_updated: \"21 Dec, 2020\",\r\n                },\r\n                {\r\n                  id: \"4\",\r\n                  name: \"Price Prediction Model\",\r\n                  type: \"Classification\",\r\n                  last_updated: \"21 Dec, 2020\",\r\n                },\r\n                {\r\n                  id: \"5\",\r\n                  name: \"Price Prediction Model\",\r\n                  type: \"Classification\",\r\n                  last_updated: \"21 Dec, 2020\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Button\r\n          style={{\r\n            width: \"140px\",\r\n            height: \"40px\",\r\n            background: \"#085FAB\",\r\n            borderRadius: \"64px\",\r\n            fontFamily: \"Lato\",\r\n            fontSize: \"16px\",\r\n            fontWeight: \"700\",\r\n            color: \"white\",\r\n            letterSpacing: \"0.5px\",\r\n            marginTop: \"20px\",\r\n            border: \"none\",\r\n            paddingBottom: \"5px\",\r\n          }}\r\n        >\r\n          Proceed\r\n        </Button>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/shareAvatar.102513e1.svg\";","export default __webpack_public_path__ + \"static/media/closeicon.753293d6.svg\";","/* eslint-disable jsx-a11y/alt-text */\r\nimport React from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport ShareAvatar from \"../../Images/AutoML/shareAvatar.svg\";\r\nimport \"./AutoMLProjectShareModal.css\";\r\nimport closeIcon from \"../../Icons/AutoML/closeicon.svg\";\r\n\r\nexport default function AutoMLProjectShareModal(props) {\r\n  return (\r\n    <div className=\"AutoMLProjectShareModal\">\r\n      <Modal\r\n        width={332}\r\n        wrapClassName=\"ProjectsModal\"\r\n        visible={props.isModalVisible}\r\n        onOk={props.handleOk}\r\n        onCancel={props.handleCancel}\r\n        footer={false}\r\n        closable={false}\r\n        bodyStyle={{ borderRadius: \"20px\" }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: \"50px\",\r\n            background: \"#EFF4F9\",\r\n            borderRadius: \"20px 20px 0px 0px\",\r\n          }}\r\n        >\r\n          <div style={{ display: \"flex\", padding: \"12px\", marginLeft: \"35px\" }}>\r\n            <h2\r\n              style={{\r\n                flexGrow: \"1\",\r\n                fontWeight: \"500\",\r\n                color: \"#90A8BE\",\r\n                fontSize: \"18px\",\r\n                fontStyle: \"Lato\",\r\n              }}\r\n            >\r\n              Are you Sure?\r\n            </h2>\r\n            <img\r\n              onClick={props.handleCancel}\r\n              src={closeIcon}\r\n              style={{\r\n                paddingBottom: \"10px\",\r\n                paddingRight: \"15px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            marginTop: \"30px\",\r\n            flexDirection: \"column\",\r\n            textAlign: \"center\",\r\n            paddingBottom: \"19px\",\r\n          }}\r\n        >\r\n          <img\r\n            src={ShareAvatar}\r\n            style={{\r\n              width: \"73px\",\r\n              height: \"107px\",\r\n              display: \"block\",\r\n              margin: \"auto\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          />\r\n          <h2\r\n            style={{ fontFamily: \"Lato\", fontWeight: \"bold\", fontSize: \"18px\" }}\r\n          >\r\n            Make Global Public?\r\n          </h2>\r\n          <p\r\n            style={{\r\n              padding: \"25px\",\r\n              paddingTop: \"10px\",\r\n              fontFamily: \"Lato\",\r\n              fontSize: \"13px\",\r\n              fontStyle: \"normal\",\r\n              color: \"#A1A1A1\",\r\n            }}\r\n          >\r\n            Making this project ‘Global Public’ would in turn make all the\r\n            models inside this project, Public as well. Are you sure you want to\r\n            proceed?\r\n          </p>\r\n          <hr\r\n            style={{\r\n              backgroundColor: \"#E2E9EF\",\r\n              border: \"none\",\r\n              height: \"1px\",\r\n              marginBottom: \"20px\",\r\n              width: \"100%\",\r\n            }}\r\n          />\r\n          <div style={{ marginBottom: \"19px\" }}>\r\n            <Button\r\n              style={{\r\n                width: \"120px\",\r\n                height: \"35px\",\r\n                backgroundColor: \"white\",\r\n                fontFamily: \"Lato\",\r\n                fontSize: \"16px\",\r\n                fontWeight: \"700\",\r\n                color: \"#085FAB\",\r\n                border: \"none\",\r\n                borderRadius: \"65px\",\r\n              }}\r\n              onClick={props.handleCancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              style={{\r\n                width: \"130px\",\r\n                height: \"35px\",\r\n                backgroundColor: \"#085FAB\",\r\n                fontFamily: \"Lato\",\r\n                fontSize: \"14px\",\r\n                fontWeight: \"normal\",\r\n                letterSpacing: \"0.5px\",\r\n                color: \"white\",\r\n                border: \"none\",\r\n                borderRadius: \"65px\",\r\n                borderColor: \"none\",\r\n              }}\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst AntTabs = withStyles({\r\n  root: {\r\n    borderBottom: \"1px solid #e8e8e8\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"#085FAB\",\r\n  },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    minWidth: 72,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginRight: theme.spacing(4),\r\n    letterSpacing: \"0px\",\r\n    fontSize: \"14px\",\r\n    paddingBottom: \"0px\",\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:hover\": {\r\n      color: \"grey\",\r\n      opacity: 1,\r\n    },\r\n    \"&$selected\": {\r\n      color: \"black\",\r\n      fontWeight: \"700\",\r\n      fontFamily: \"Lato\",\r\n    },\r\n    \"&:focus\": {\r\n      color: \"black\",\r\n    },\r\n  },\r\n  selected: {},\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"60px\",\r\n  },\r\n  padding: {\r\n    padding: \"5px\",\r\n  },\r\n  demo1: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  demo2: {\r\n    backgroundColor: \"#2e1534\",\r\n  },\r\n}));\r\n\r\nexport default function AutoMLProjectsTypeTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n\r\n    switch (newValue) {\r\n      case 0:\r\n        props.setTab(\"my_projects\");\r\n        break;\r\n      case 1:\r\n        props.setTab(\"downloaded_projects\");\r\n        break;\r\n      case 2:\r\n        props.setTab(\"global_projects\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.demo1}>\r\n        <AntTabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"ant example\"\r\n          scrollButtons=\"on\"\r\n        >\r\n          <AntTab label=\"My Projects\" />\r\n          <AntTab label=\"Downloaded Projects\" />\r\n          <AntTab label=\"Global Projects\" />\r\n        </AntTabs>\r\n      </div>\r\n      {/* <div className={classes.demo2}>\r\n        <StyledTabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"styled tabs example\"\r\n        >\r\n          <StyledTab label=\"Workflows\" />\r\n          <StyledTab label=\"Datasets\" />\r\n          <StyledTab label=\"Connections\" />\r\n        </StyledTabs>\r\n        <Typography className={classes.padding} />\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { Drawer, Skeleton } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport AutoMLNewProjectButton from \"../../../Components/Button/AutoMLNewProjectButton/AutoMLNewProjectButton\";\r\nimport AutoMLExistingProjectsTable from \"../../../Components/Tables/AutoMLExistingProjects/AutoMLExistingProjectsTable\";\r\nimport { Tabs } from \"antd\";\r\nimport AutoMLProjectsDrawer from \"../../../Components/Drawers/AutoMLProjectsDrawer/AutoMLProjectsDrawer\";\r\nimport \"./NewProject.css\";\r\nimport AutoMLProjectShareModal from \"../../../Components/Modals/AutoMLProjectShareModal/AutoMLProjectShareModal\";\r\nimport AutoMLProjectsTypeTabs from \"../../../Components/Tabs/AutoMLProjectsTypeTabs.js\";\r\n\r\nexport default function NewProject(props) {\r\n  const { TabPane } = Tabs;\r\n\r\n  const [loading, setloading] = useState(false);\r\n  const [drawervisible, setdrawervisible] = useState(false);\r\n  const [modalvisible, setmodalvisible] = useState(false);\r\n  const [tab, settab] = useState(\"my_projects\");\r\n\r\n  const createProject = () => {\r\n    props.history.push({\r\n      pathname: \"/automl/projects/newproject/\",\r\n      state: {\r\n        detail: \"I am from Projects page\",\r\n        page_name: \"automl_newproject\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const callback = (id) => {\r\n    settab(id);\r\n  };\r\n\r\n  const showinfo = (row) => {\r\n    console.log(row);\r\n    setdrawervisible(true);\r\n  };\r\n  const onClose = () => {\r\n    setdrawervisible(false);\r\n  };\r\n\r\n  const showModal = (row) => {\r\n    setmodalvisible(true);\r\n  };\r\n\r\n  const handleModalOk = () => {\r\n    setmodalvisible(false);\r\n  };\r\n\r\n  const handleModalCancel = () => {\r\n    setmodalvisible(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"NewProject\"\r\n      style={{\r\n        textAlign: \"left\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <h3\r\n        style={{\r\n          fontWeight: \"700\",\r\n          marginBottom: \"0px\",\r\n          marginTop: \"11px\",\r\n          fontSize: \"18px\",\r\n        }}\r\n      >\r\n        New Project\r\n      </h3>\r\n      <hr\r\n        style={{\r\n          backgroundColor: \"#E1EEFF\",\r\n          border: \"none\",\r\n          height: \"1px\",\r\n          marginBottom: \"20px\",\r\n          width: \"100%\",\r\n        }}\r\n      />\r\n      <AutoMLNewProjectButton createProject={() => createProject()} />\r\n      {/* <h3 style={{ fontWeight: \"700\", marginTop: \"20px\", fontSize: \"18px\" }}>\r\n        Projects\r\n      </h3> */}\r\n      {/* <Tabs\r\n        defaultActiveKey=\"my_projects\"\r\n        onChange={callback}\r\n        style={{ marginTop: \"15px\", color: \"grey\" }}\r\n      >\r\n        <TabPane tab=\"My Projects\" key=\"my_projects\"></TabPane>\r\n        <TabPane tab=\"Downloaded Projects\" key=\"downloaded_projects\"></TabPane>\r\n        <TabPane tab=\"Global Projects\" key=\"global_projects\"></TabPane>\r\n      </Tabs> */}\r\n      <AutoMLProjectsTypeTabs setTab={(val) => settab(val)} />\r\n      <div\r\n        style={{\r\n          flex: \"1\",\r\n          overflowY: \"scroll\",\r\n          marginTop: \"-11px\",\r\n          paddingRight: \"10px\",\r\n        }}\r\n      >\r\n        {loading === true ? (\r\n          <Skeleton active loading={loading} />\r\n        ) : (\r\n          <AutoMLExistingProjectsTable\r\n            type={tab}\r\n            showinfo={showinfo}\r\n            showModal={showModal}\r\n          />\r\n        )}\r\n      </div>\r\n      <AutoMLProjectsDrawer onClose={onClose} drawervisible={drawervisible} />\r\n      <AutoMLProjectShareModal\r\n        isModalVisible={modalvisible}\r\n        handleOK={() => handleModalOk()}\r\n        handleCancel={() => handleModalCancel()}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/selectedTick.b8154e88.svg\";","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from \"react\";\r\nimport { Empty } from \"antd\";\r\nimport styles from \"./AutoMLExistingDatasetsTable.module.scss\";\r\nimport selectedTick from \"../../Icons/AutoML/selectedTick.svg\";\r\nexport default function AutoMLExistingDatasetsTable(props) {\r\n  const [rowID, setrowID] = useState(null);\r\n\r\n  const [data, setdata] = useState([\r\n    {\r\n      key: \"1\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"4\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\",\r\n      selected: \"yes\",\r\n    },\r\n    {\r\n      key: \"5\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\",\r\n      selected: \"yes\",\r\n    },\r\n    {\r\n      key: \"6\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"7\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\",\r\n      selected: \"\",\r\n    },\r\n  ]);\r\n\r\n  const rowclick = (id) => {\r\n    let trs = document.getElementsByTagName(\"tr\");\r\n    for (var x of trs) {\r\n      if (x.firstChild.firstChild.style) {\r\n        if (x.firstChild.firstChild.style.cssText === \"display: none;\") {\r\n          x.style.backgroundColor = \"#f5faff\";\r\n        } else {\r\n          x.style.backgroundColor = \"#e1eeff\";\r\n        }\r\n      }\r\n      x.className = \"\";\r\n    }\r\n    let tds = document.getElementsByTagName(\"td\");\r\n    for (var y of tds) {\r\n      y.style.fontWeight = \"normal\";\r\n      y.style.border = \"none\";\r\n    }\r\n    document.getElementById(id).className = \"selected\";\r\n    document.getElementById(id).style.backgroundColor = \"#e1eeff\";\r\n    document.getElementById(id).style.borderRight = \"2px solid #085FAB\";\r\n    let list = document.getElementById(id).children;\r\n    for (var i = 0; i < list.length; i++) {\r\n      list[i].style.fontWeight = \"700\";\r\n      if (i === 0) {\r\n        list[i].style.border = \"2px solid #085FAB\";\r\n        list[i].style.borderRight = \"none\";\r\n      } else if (i === list.length - 1) {\r\n        list[i].style.border = \"2px solid #085FAB\";\r\n        list[i].style.borderLeft = \"none\";\r\n      } else {\r\n        list[i].style.borderTop = \"2px solid #085FAB\";\r\n        list[i].style.borderBottom = \"2px solid #085FAB\";\r\n      }\r\n      // list[i].style.color = \"#085FAB\";\r\n    }\r\n    props.selected(id);\r\n  };\r\n\r\n  const Hoverover = (index) => {\r\n    // console.log(document.getElementById(index));\r\n    if (document.getElementsByClassName(\"selected\")[0]) {\r\n      if (document.getElementsByClassName(\"selected\")[0].id !== index) {\r\n        document.getElementById(index).style.backgroundColor = \"#e1eeff\";\r\n      }\r\n    }\r\n  };\r\n  const Hovercancel = (index) => {\r\n    // console.log(document.getElementById(index));\r\n    if (document.getElementsByClassName(\"selected\")[0]) {\r\n      if (document.getElementsByClassName(\"selected\")[0].id !== index) {\r\n        if (\r\n          document.getElementById(index).firstChild.firstChild.style.cssText !==\r\n          \"display: none;\"\r\n        ) {\r\n        } else {\r\n          document.getElementById(index).style.backgroundColor = \"#f5faff\";\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const RenderRow = (index) => {\r\n    if (\r\n      document.getElementById(index).firstChild.firstChild.style.cssText !==\r\n      \"display: none;\"\r\n    ) {\r\n      document.getElementById(index).style.backgroundColor = \"#e1eeff\";\r\n    }\r\n  };\r\n\r\n  const getrows = () => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <tr\r\n          id={item.key}\r\n          key={index}\r\n          onClick={() => {\r\n            rowclick(item.key);\r\n            // props.selected(item.key);\r\n          }}\r\n          onMouseOver={() => Hoverover(item.key)}\r\n          onMouseLeave={() => Hovercancel(item.key)}\r\n          onLoad={() => RenderRow(item.key)}\r\n        >\r\n          <td className={styles.description}>\r\n            <img\r\n              src={selectedTick}\r\n              alt=\"Selected\"\r\n              style={item.selected !== \"yes\" ? { display: \"none\" } : null}\r\n            />{\" \"}\r\n          </td>\r\n          <td className={styles.description}> {item.name} </td>\r\n          <td className={styles.status}> {item.description} </td>\r\n\r\n          <td className={styles.description}> {item.rows} </td>\r\n          <td className={styles.status}> {item.cols} </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Container}>\r\n      {data ? (\r\n        <table className={styles.datatable}>\r\n          <thead>\r\n            <tr>\r\n              <th> </th>\r\n              <th> </th>\r\n              <th>Description</th>\r\n              <th>Rows</th>\r\n              <th>Cols</th>\r\n              <th> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{getrows()}</tbody>\r\n        </table>\r\n      ) : (\r\n        <Empty />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Tag } from \"antd\";\r\nimport \"./CompaniesGroup.scss\";\r\n\r\nconst { CheckableTag } = Tag;\r\n\r\nexport default class CompaniesGroup extends Component {\r\n  state = {\r\n    selectedTags: this.props.data,\r\n  };\r\n\r\n  handleChange(tag, checked) {\r\n    const { selectedTags } = this.state;\r\n    const nextSelectedTags = checked\r\n      ? [...selectedTags, tag]\r\n      : selectedTags.filter((t) => t !== tag);\r\n    console.log(\"You are interested in: \", nextSelectedTags);\r\n    this.setState({ selectedTags: nextSelectedTags });\r\n  }\r\n\r\n  render() {\r\n    const { selectedTags } = this.state;\r\n\r\n    return (\r\n      <div className=\"CompaniesGroup\">\r\n        {this.props.data.map((tag) => (\r\n          <CheckableTag\r\n            key={tag}\r\n            checked={selectedTags.indexOf(tag) > -1}\r\n            onChange={(checked) => this.handleChange(tag, checked)}\r\n          >\r\n            {tag}\r\n          </CheckableTag>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport \"./AutoMLSelectDatasetsDropdown.scss\";\r\n\r\nexport default function AutoMLSelectDatasetsDropdown(props) {\r\n  const { Option } = Select;\r\n\r\n  function onChange(value) {\r\n    props.selected(value);\r\n  }\r\n\r\n  function onBlur() {}\r\n\r\n  function onFocus() {}\r\n\r\n  function onSearch(val) {}\r\n  return (\r\n    <div className=\"SelectDatasetsDropdown\">\r\n      <Select\r\n        showSearch\r\n        style={{\r\n          width: \"350px\",\r\n          fontSize: \"11px\",\r\n          height: \"30px\",\r\n        }}\r\n        placeholder={`Select ${props.type}`}\r\n        optionFilterProp=\"children\"\r\n        disabled={!props.data}\r\n        value={props.value}\r\n        onChange={onChange}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        onSearch={onSearch}\r\n        size=\"large\"\r\n        filterOption={(input, option) =>\r\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n        }\r\n      >\r\n        {props.data ? (\r\n          props.data.map((item, index) => (\r\n            <Option value={`${item}`} key={index}>\r\n              {item}\r\n            </Option>\r\n          ))\r\n        ) : (\r\n          <Option value=\"Nothing\">Nothing to Show</Option>\r\n        )}\r\n        {/* <Option value=\"Oil and Gas\">Oil and Gas</Option>\r\n                <Option value=\"Banking\">Banking</Option>\r\n                <Option value=\"Oil and Gas Exploration\">Oil and Gas Exploration</Option>\r\n                <Option value=\"Oil and Gas Refinery\">Oil and Gas Refinery</Option>\r\n                <Option value=\"Oil and Gas Marketing\">Oil and Gas Marketing</Option> */}\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst AntTabs = withStyles({\r\n  root: {\r\n    borderBottom: \"1px solid #e8e8e8\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"#085FAB\",\r\n  },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    minWidth: 72,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginRight: theme.spacing(2),\r\n    letterSpacing: \"0px\",\r\n    fontSize: \"12px\",\r\n    color: \"#6d6d6d\",\r\n    opacity: \"1\",\r\n    paddingBottom: \"0px\",\r\n    paddingTop: \"0px\",\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:hover\": {\r\n      color: \"#6d6d6d\",\r\n      opacity: 1,\r\n    },\r\n    \"&$selected\": {\r\n      color: \"black\",\r\n      fontWeight: \"700\",\r\n      fontFamily: \"Lato\",\r\n    },\r\n    \"&:focus\": {\r\n      color: \"black\",\r\n    },\r\n  },\r\n  selected: {},\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"60px\",\r\n  },\r\n  padding: {\r\n    padding: \"5px\",\r\n  },\r\n  demo1: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  demo2: {\r\n    backgroundColor: \"#2e1534\",\r\n  },\r\n}));\r\n\r\nexport default function AutoMLSelectDatasetsTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n\r\n    switch (newValue) {\r\n      case 0:\r\n        props.setTab(\"my_projects\");\r\n        break;\r\n      case 1:\r\n        props.setTab(\"downloaded_projects\");\r\n        break;\r\n      case 2:\r\n        props.setTab(\"global_projects\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.demo1}>\r\n        <AntTabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"ant example\"\r\n          scrollButtons=\"auto\"\r\n          variant=\"scrollable\"\r\n        >\r\n          <AntTab label=\"Financial Data\" />\r\n          <AntTab label=\"Trading Data\" />\r\n          <AntTab label=\"Economical Data\" />\r\n          <AntTab label=\"Industrial Data\" />\r\n          <AntTab label=\"My Datasets\" />\r\n        </AntTabs>\r\n      </div>\r\n      {/* <div className={classes.demo2}>\r\n        <StyledTabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"styled tabs example\"\r\n        >\r\n          <StyledTab label=\"Workflows\" />\r\n          <StyledTab label=\"Datasets\" />\r\n          <StyledTab label=\"Connections\" />\r\n        </StyledTabs>\r\n        <Typography className={classes.padding} />\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Col, DatePicker, Row, Skeleton } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styles from \"./SelectDatasets.module.scss\";\r\nimport { Tabs } from \"antd\";\r\nimport \"./tabstyles.css\";\r\nimport AutoMLExistingDatasetsTable from \"../../../Components/Tables/AutoMLExistingDatasets/AutoMLExistingDatasetsTable\";\r\nimport CompaniesGroup from \"../../../Components/Containers/CompaniesGroup/CompaniesGroup\";\r\nimport AutoMLSelectDatasetsDropdown from \"../../../Components/Dropdowns/AutoMLSelectDatasetsDropdown/AutoMLSelectDatasetsDropdown\";\r\nimport AutoMLSelectDatasetsTabs from \"../../../Components/Tabs/AutoMLSelectDatasetsTabs/AutoMLSelectDatasetsTabs\";\r\n\r\nexport default function SelectDatasets(props) {\r\n  const { TabPane } = Tabs;\r\n  let { project_id, model_id } = useParams();\r\n  const [selectedrow, setselectedrow] = useState(null);\r\n  const [Sector, setSector] = useState(null);\r\n  const [loading, setloading] = useState(false);\r\n  const [Tab, setTab] = useState(false);\r\n\r\n  function callback(key) {}\r\n\r\n  const nextPage = () => {\r\n    console.log(\"Save Data in Cart and Next page\");\r\n    props.history.push({\r\n      pathname: `/automl/projects/${project_id}/models/${model_id}/selected_datasets/`,\r\n      state: { detail: \"I am from Select Datasets page\" },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row justify=\"space-between\" className={styles.container}>\r\n      <Col span={17} className={styles.column1} id=\"Column1\">\r\n        <h3 className={styles.titleBold}>\r\n          {project_id} | <span className={styles.subtitle}>{model_id}</span>\r\n        </h3>\r\n        <h3\r\n          style={{\r\n            textAlign: \"left\",\r\n            fontSize: \"20px\",\r\n            fontWeight: \"bold\",\r\n            marginBottom: \"0px\",\r\n          }}\r\n        >\r\n          Dataset Collection\r\n        </h3>\r\n        <hr\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#E1EEFF\",\r\n            border: \"none\",\r\n            height: \"1px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        />\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }} className=\"tabs\">\r\n          {/* <Tabs\r\n            defaultActiveKey=\"1\"\r\n            onChange={callback}\r\n            size=\"small\"\r\n            style={{ flexGrow: \"1\" }}\r\n          >\r\n            <TabPane tab=\"Financial Data\" key=\"1\"></TabPane>\r\n            <TabPane tab=\"Trading Data\" key=\"2\"></TabPane>\r\n            <TabPane tab=\"Economical Data\" key=\"3\"></TabPane>\r\n            <TabPane tab=\"Industrial Data\" key=\"4\"></TabPane>\r\n            <TabPane tab=\"My Datasets\" key=\"5\"></TabPane>\r\n          </Tabs> */}\r\n          <div style={{ width: \"85%\", marginRight: \"25px\" }}>\r\n            <AutoMLSelectDatasetsTabs setTab={(val) => setTab(val)} />\r\n          </div>\r\n          <Button\r\n            className={styles.importbutton}\r\n            style={loading === true ? { display: \"none\" } : null}\r\n          >\r\n            Import{\" \"}\r\n          </Button>\r\n        </div>\r\n        <div\r\n          style={{\r\n            flexGrow: \"1\",\r\n            overflowY: \"scroll\",\r\n            marginTop: \"10px\",\r\n            paddingRight: \"10px\",\r\n          }}\r\n        >\r\n          <div style={{ textAlign: \"left\" }}>\r\n            <AutoMLSelectDatasetsDropdown\r\n              data={[\"Oil and Gas\", \"Banks\"]}\r\n              selected={(sector) => setSector(sector)}\r\n              type=\"Sector\"\r\n            />\r\n          </div>\r\n          {loading === true ? (\r\n            <Skeleton active loading={loading} />\r\n          ) : (\r\n            <AutoMLExistingDatasetsTable\r\n              selected={(id) => {\r\n                setselectedrow(id);\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        <div\r\n          style={\r\n            loading === true\r\n              ? { display: \"none\" }\r\n              : { textAlign: \"left\", marginTop: \"10px\" }\r\n          }\r\n        >\r\n          <Button\r\n            className={styles.continuebutton}\r\n            onClick={() => {\r\n              nextPage();\r\n            }}\r\n          >\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </Col>\r\n      <Col span={7} className={styles.column2} id=\"Column2\">\r\n        <h3 className={styles.titleBold}>Companies</h3>\r\n        <div style={{ minHeight: \"15vh\", overflowY: \"scroll\", flexGrow: \"1\" }}>\r\n          <CompaniesGroup\r\n            data={[\r\n              \"Abc\",\r\n              \"defedededde\",\r\n              \"eyg\",\r\n              \"AbcD\",\r\n              \"defD\",\r\n              \"eygD\",\r\n              \"AbcE\",\r\n              \"defE\",\r\n              \"eygE\",\r\n            ]}\r\n          />\r\n        </div>\r\n        <hr\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#E1EEFF\",\r\n            marginTop: \"20px\",\r\n            border: \"none\",\r\n            marginBottom: \"10px\",\r\n            height: \"1px\",\r\n          }}\r\n        />\r\n        <h3 className={styles.titleBold}>Date Range</h3>\r\n        <div style={{ marginBottom: \"40px\" }}>\r\n          {/* <p className={styles.datetitle}>Starting Date</p> */}\r\n          <DatePicker\r\n            picker=\"year\"\r\n            placeholder=\"Starting Date\"\r\n            className={styles.dateinput}\r\n          />\r\n          {/* <p className={styles.datetitle}>Ending Date</p> */}\r\n          <DatePicker\r\n            picker=\"year\"\r\n            placeholder=\"Ending Date\"\r\n            className={styles.dateinput}\r\n          />\r\n        </div>\r\n        <Button\r\n          onClick={() => {\r\n            console.log(\"Add Selected Dataset in Cart\");\r\n          }}\r\n          className={styles.addcartbutton}\r\n        >\r\n          Add to Data Cart\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/deleteDatasetIcon.cb698a28.svg\";","import { CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport \"./SelectedDataList.scss\";\r\nimport DeleteIcon from \"../Icons/AutoML/deleteDatasetIcon.svg\";\r\n\r\nexport default function SelectedDataList(props) {\r\n  return (\r\n    <>\r\n      {props.data.map((item, index) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              backgroundColor: \"blue\",\r\n              width: \"100%\",\r\n              padding: \"17px\",\r\n              paddingTop: \"12px\",\r\n              paddingLeft: \"27px\",\r\n              height: \"40px\",\r\n              marginBottom: \"15px\",\r\n              background: \"#FFFFFF\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n            className=\"SelectedDataList\"\r\n          >\r\n            <div\r\n              style={{\r\n                fontStyle: \" normal\",\r\n                fontWeight: \"normal\",\r\n                fontSize: \"14px\",\r\n                lineHeight: \"14px\",\r\n                color: \"#6D6D6D\",\r\n              }}\r\n            >\r\n              {item}\r\n            </div>\r\n            <div\r\n              style={{\r\n                flexGrow: \"1\",\r\n                textAlign: \"right\",\r\n                fontSize: \"20px\",\r\n                lineHeight: \"14px\",\r\n                color: \"#EC547A\",\r\n              }}\r\n            >\r\n              <img\r\n                src={DeleteIcon}\r\n                alt={\"Delete\"}\r\n                style={{ cursor: \"pointer\", marginTop: \"-4px\", width: \"18px\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function AutoMLSelectedDatasetsPreviewRowsTable(props) {\r\n  const getrows = () => {\r\n    return props.rows.map((item, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          {item.map((element, i) => {\r\n            return <td key={index + \"_\" + i}>{element}</td>;\r\n          })}\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"AutoMLSelectedDatasetsPreviewRowsTable\">\r\n      <table>\r\n        <thead></thead>\r\n        <tbody>{getrows()}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/eyeicon.71e7a1be.svg\";","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from \"react\";\r\nimport { Empty } from \"antd\";\r\nimport styles from \"./AutoMLSelectedDatasetsTable.module.scss\";\r\nimport eyeIcon from \"../../Icons/AutoML/eyeicon.svg\";\r\n\r\nexport default function AutoMLSelectedDatasetsTable(props) {\r\n  const [rowID, setrowID] = useState(null);\r\n\r\n  const [data, setdata] = useState([\r\n    {\r\n      key: \"1\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"4\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"5\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"6\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"7\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n  ]);\r\n\r\n  const getrows = () => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <tr id={item.key} key={index}>\r\n          <td className={styles.description}> {item.name} </td>\r\n          <td className={styles.status}> {item.description} </td>\r\n\r\n          <td className={styles.description}> {item.rows} </td>\r\n          <td className={styles.status}> {item.cols} </td>\r\n          <td\r\n            style={{\r\n              fontFamily: \"Lato\",\r\n              fontWeight: \"normal\",\r\n              fontSize: \"14px\",\r\n              color: \"#6d6d6d\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => props.previewDataset(item.key)}\r\n          >\r\n            <img\r\n              src={eyeIcon}\r\n              alt={\"Eye\"}\r\n              width={18}\r\n              style={{ marginRight: \"4px\" }}\r\n            />{\" \"}\r\n            Preview{\" \"}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Container}>\r\n      {data ? (\r\n        <table className={styles.datatable}>\r\n          <thead>\r\n            <tr>\r\n              <th> </th>\r\n              <th>Description</th>\r\n              <th>Rows</th>\r\n              <th>Cols</th>\r\n              <th> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{getrows()}</tbody>\r\n        </table>\r\n      ) : (\r\n        <Empty />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function AutoMLSelectedDatasetsMetaTable(props) {\r\n  const getrows = () => {\r\n    return props.rows.map((item, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>\r\n            {index === 0\r\n              ? \" \"\r\n              : index === 1\r\n              ? \"Data Type\"\r\n              : index === 2\r\n              ? \"Column Scope\"\r\n              : index === 3\r\n              ? \"Formula\"\r\n              : null}\r\n          </td>\r\n          {item.map((element, i) => {\r\n            return <td key={index + \"_\" + i}>{element}</td>;\r\n          })}\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"AutoMLSelectedDatasetsMetaTable\">\r\n      <table>\r\n        <thead></thead>\r\n        <tbody>{getrows()}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { Button, Col, Row, Skeleton } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SelectedDataList from \"../../../Components/List/SelectedDataList\";\r\nimport AutoMLSelectedDatasetsPreviewRowsTable from \"../../../Components/Tables/AutoMLSelectedDataPopupTables/AutoMLSelectedDatasetsPreviewRowsTable\";\r\nimport AutoMLSelectedDatasetsTable from \"../../../Components/Tables/AutoMLSelectedDatasets/AutoMLSelectedDatasetsTable\";\r\nimport AutoMLSelectedDatasetsMetaTable from \"../../../Components/Tables/AutoMLSelectedDatasetsMetaTable/AutoMLSelectedDatasetsMetaTable\";\r\nimport styles from \"./SelectedDatasets.module.scss\";\r\nimport \"./styles.css\";\r\n\r\nexport default function SelectedDatasets(props) {\r\n  let { project_id, model_id } = useParams();\r\n  const [loading, setloading] = useState(false);\r\n  const [showpopup, setshowpopup] = useState(false);\r\n\r\n  let rows = [\r\n    [\r\n      \"Customer ID\",\r\n      \"Product ID\",\r\n      \"Dept Name\",\r\n      \"Quantity\",\r\n      \"Lorem Ipsum\",\r\n      \"Price\",\r\n    ],\r\n    [\"1234\", \"AB567\", \"QIB231\", \"Lorem Ipsum\", \"Oil Barrel\", \"131\"],\r\n    [\"1234\", \"AB567\", \"QIB231\", \"Lorem Ipsum\", \"Oil Barrel\", \"131\"],\r\n    [\"1234\", \"AB567\", \"QIB231\", \"Lorem Ipsum\", \"Oil Barrel\", \"131\"],\r\n  ];\r\n  let meta = [\r\n    [\"Product ID\", \"Dept Name\", \"Quantity\", \"Lorem Ipsum\", \"Price\"],\r\n    [\"Integer\", \"String\", \"Integer\", \"String\", \"Integer\"],\r\n    [\"-\", \"-\", \"In Hundreds\", \"Percentage\", \"In Millions\"],\r\n    [\"-\", \"-\", \"-\", \"(a+b)/2\", \"-\"],\r\n  ];\r\n\r\n  const nextPage = () => {\r\n    props.history.push({\r\n      pathname: `/automl/projects/${project_id}/models/${model_id}/dataset_processing/`,\r\n      state: {\r\n        detail: \"I am from Selected page\",\r\n        page_name: \"automl_link_Column\",\r\n      },\r\n    });\r\n  };\r\n  const previewDataset = (id) => {\r\n    console.log(id);\r\n    setshowpopup(true);\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      justify=\"space-between\"\r\n      className={styles.container}\r\n      id=\"SelectedDatasets\"\r\n    >\r\n      <Col span={17} className={styles.column1}>\r\n        <h3 className={styles.titleBold}>\r\n          {project_id} | <span className={styles.subtitle}>{model_id}</span>\r\n        </h3>\r\n        <h3\r\n          style={{\r\n            textAlign: \"left\",\r\n            fontSize: \"20px\",\r\n            fontWeight: \"bold\",\r\n            marginBottom: \"0px\",\r\n          }}\r\n        >\r\n          Selected Dataset\r\n        </h3>\r\n        <hr\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#E1EEFF\",\r\n            border: \"none\",\r\n            height: \"1px\",\r\n            marginBottom: \"0px\",\r\n          }}\r\n        />\r\n        <div\r\n          style={{ flexGrow: \"1\", overflow: \"scroll\", paddingRight: \"10px\" }}\r\n        >\r\n          {loading === true ? (\r\n            <Skeleton active loading={loading} />\r\n          ) : (\r\n            <AutoMLSelectedDatasetsTable\r\n              previewDataset={(id) => previewDataset(id)}\r\n            />\r\n          )}\r\n        </div>\r\n        <div style={{ textAlign: \"left\", marginTop: \"10px\" }}>\r\n          <Button className={styles.linkcolbutton} onClick={() => nextPage()}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </Col>\r\n      <Col span={7} className={styles.column2}>\r\n        <h3 className={styles.titleBold}>Data Cart</h3>\r\n        <div\r\n          style={{ flexGrow: \"1\", overflowY: \"scroll\", paddingRight: \"10px\" }}\r\n        >\r\n          {loading === true ? (\r\n            <Skeleton active loading={loading} />\r\n          ) : (\r\n            <SelectedDataList\r\n              data={[\r\n                \"Oil and Gas Refinery\",\r\n                \"Oil and Gas Refinery\",\r\n                \"Oil and Gas Refinery\",\r\n                \"Oil and Gas Refinery\",\r\n                \"Oil and Gas Refinery\",\r\n              ]}\r\n            />\r\n          )}\r\n        </div>\r\n        <hr\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#E1EEFF\",\r\n            border: \"none\",\r\n            height: \"1px\",\r\n            marginBottom: \"20px\",\r\n          }}\r\n        />\r\n        <h3 className={styles.titleBold}>Required Training Parameters</h3>\r\n        <div className={styles.info}>\r\n          Required No. of Rows:\r\n          <span style={{ float: \"right\" }}>96</span>\r\n        </div>\r\n        <div className={styles.info}>\r\n          Suggested No. of Rows:\r\n          <span style={{ float: \"right\" }}>255</span>\r\n        </div>\r\n        <div className={styles.info}>\r\n          Required Col to Row Ratio:\r\n          <span style={{ float: \"right\" }}>300</span>\r\n        </div>\r\n        <div className={styles.info}>\r\n          Suggested Col to Row Ratio:\r\n          <span style={{ float: \"right\" }}>25:1</span>\r\n        </div>\r\n      </Col>\r\n      <Modal\r\n        title={\"Selected Dataset Name...\"}\r\n        visible={showpopup}\r\n        footer={false}\r\n        centered\r\n        onCancel={() => setshowpopup(false)}\r\n        wrapClassName=\"PreviewPopup\"\r\n        width={\"80%\"}\r\n      >\r\n        <p className=\"sublink\">default dataset</p>\r\n        <p className=\"subtitle\" style={{ marginBottom: \"7px\" }}>\r\n          Dataset Description\r\n        </p>\r\n        <p className=\"desc\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore Lorem ipsum dolor sit amet,\r\n          consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\r\n          labore Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut l abore.\r\n        </p>\r\n        <div\r\n          style={{\r\n            width: \"inherit\",\r\n            overflowX: \"scroll\",\r\n            paddingBottom: \"10px\",\r\n          }}\r\n        >\r\n          <AutoMLSelectedDatasetsPreviewRowsTable rows={rows} />\r\n        </div>\r\n        <p className=\"subtitle\" style={{ marginTop: \"10px\" }}>\r\n          Meta Data\r\n        </p>\r\n        <div\r\n          style={{\r\n            width: \"inherit\",\r\n            overflowX: \"scroll\",\r\n            paddingBottom: \"10px\",\r\n          }}\r\n        >\r\n          <AutoMLSelectedDatasetsMetaTable rows={meta} />\r\n        </div>\r\n      </Modal>\r\n    </Row>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/leftarrow.1da38da3.svg\";","export default __webpack_public_path__ + \"static/media/rightarrow.b34958e0.svg\";","import React, { Component } from \"react\";\r\nimport { Tag } from \"antd\";\r\nimport \"./ColumnsGroup.scss\";\r\n\r\nconst { CheckableTag } = Tag;\r\n\r\nexport default class ColumnsGroup extends Component {\r\n  state = {\r\n    selectedTags: this.props.data,\r\n  };\r\n\r\n  handleChange(tag, checked) {\r\n    const { selectedTags } = this.state;\r\n    const nextSelectedTags = checked\r\n      ? [...selectedTags, tag]\r\n      : selectedTags.filter((t) => t !== tag);\r\n    console.log(\"You are interested in: \", nextSelectedTags);\r\n    this.setState({ selectedTags: nextSelectedTags });\r\n  }\r\n\r\n  render() {\r\n    const { selectedTags } = this.state;\r\n\r\n    return (\r\n      <div className=\"CompaniesGroup\">\r\n        {this.props.data.map((tag) => (\r\n          <CheckableTag\r\n            key={tag}\r\n            checked={selectedTags.indexOf(tag) > -1}\r\n            onChange={(checked) => this.handleChange(tag, checked)}\r\n          >\r\n            {tag}\r\n          </CheckableTag>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/uparrow.946467fb.svg\";","export default __webpack_public_path__ + \"static/media/downarrow.7fa69a29.svg\";","export default __webpack_public_path__ + \"static/media/circle.83bba672.svg\";","export default __webpack_public_path__ + \"static/media/eye.71e7a1be.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport upArrow from \"../../Icons/AutoML/DatasetProcessing/uparrow.svg\";\r\nimport Circle from \"../../Icons/AutoML/DatasetProcessing/circle.svg\";\r\nimport downArrow from \"../../Icons/AutoML/DatasetProcessing/downarrow.svg\";\r\nimport eye from \"../../Icons/AutoML/DatasetProcessing/eye.svg\";\r\n\r\nexport default function AutoMLDatasetProcessingList(props) {\r\n  const [elements, setelements] = useState(props.data);\r\n\r\n  const itemclicked = (id) => {\r\n    let all = document.getElementsByClassName(\"array\");\r\n    for (var y of all) {\r\n      y.id = \"\";\r\n    }\r\n    all[id].id = \"selected\";\r\n  };\r\n  const clear = () => {\r\n    let all = document.getElementsByClassName(\"array\");\r\n    for (var y of all) {\r\n      y.id = \"\";\r\n    }\r\n  };\r\n\r\n  const getlist = (elements) => {\r\n    return elements.map((item, index) => {\r\n      return (\r\n        <li key={index} className=\"listitem\">\r\n          <div className=\"col1\">\r\n            <img\r\n              onClick={() => {\r\n                clear();\r\n                props.moveup(index);\r\n              }}\r\n              src={upArrow}\r\n              alt=\"uparrow\"\r\n              style={{ marginBottom: \"5px\", cursor: \"pointer\" }}\r\n            />\r\n            <img\r\n              src={downArrow}\r\n              onClick={() => {\r\n                clear();\r\n                props.movedown(index);\r\n              }}\r\n              alt=\"downarrow\"\r\n              style={{ marginBottom: \"5px\", cursor: \"pointer\" }}\r\n            />\r\n          </div>\r\n          <div className=\"col2\">\r\n            <div className=\"title\">{item.name}</div>\r\n            <div className=\"array\" onClick={() => itemclicked(index)}>\r\n              {item.cols.map((element, i) => {\r\n                return (\r\n                  <span key={i} className=\"column\">\r\n                    {element}\r\n                  </span>\r\n                );\r\n              })}\r\n              <img\r\n                onClick={() => props.preview(item.key)}\r\n                className=\"eye\"\r\n                src={eye}\r\n                alt=\"eye\"\r\n                style={{ cursor: \"pointer\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return elements ? (\r\n    <div className=\"AutoMLDatasetProcessingList\">\r\n      <ul>{getlist(elements)}</ul>\r\n    </div>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n}\r\n","import { Button, Col, Row, Skeleton } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ColumnsGroup from \"../../../Components/Containers/ColumnsGroup/ColumnsGroup\";\r\nimport AutoMLDatasetProcessingList from \"../../../Components/List/AutoMLDatasetProcessingList/AutoMLDatasetProcessingList\";\r\nimport AutoMLSelectedDatasetsPreviewRowsTable from \"../../../Components/Tables/AutoMLSelectedDataPopupTables/AutoMLSelectedDatasetsPreviewRowsTable\";\r\nimport AutoMLSelectedDatasetsMetaTable from \"../../../Components/Tables/AutoMLSelectedDatasetsMetaTable/AutoMLSelectedDatasetsMetaTable\";\r\nimport styles from \"./DatasetProcessing.module.scss\";\r\nimport \"./styles.css\";\r\n\r\nexport default function DatasetProcessing(props) {\r\n  let { project_id, model_id } = useParams();\r\n  const [loading, setloading] = useState(false);\r\n  const [showpopup, setshowpopup] = useState(false);\r\n  const [dummy, setdummy] = useState(false);\r\n\r\n  const [meta, setmeta] = useState([\r\n    {\r\n      key: \"1\",\r\n      name: \"FFC Report\",\r\n      cols: [\"ID\", \"Name\", \"Department\", \"Lorem Ipsum\", \"Dolar Sit\"],\r\n    },\r\n    {\r\n      key: \"2\",\r\n      name: \"FFC\",\r\n      cols: [\r\n        \"ID\",\r\n        \"Name\",\r\n        \"Department\",\r\n        \"Lorem Ipsum\",\r\n        \"Dolar Sit\",\r\n        \"etc\",\r\n        \"etc1\",\r\n      ],\r\n    },\r\n    {\r\n      key: \"3\",\r\n      name: \"OIL and Gas\",\r\n      cols: [\"ID\", \"Name\", \"Department\", \"Lorem Ipsum\", \"Dolar Sit\"],\r\n    },\r\n    {\r\n      key: \"4\",\r\n      name: \"Fertilizer\",\r\n      cols: [\"ID\", \"Name\", \"Department\", \"Lorem Ipsum\", \"Dolar Sit\"],\r\n    },\r\n  ]);\r\n  let rows = [\r\n    [\r\n      \"Customer ID\",\r\n      \"Product ID\",\r\n      \"Dept Name\",\r\n      \"Quantity\",\r\n      \"Lorem Ipsum\",\r\n      \"Price\",\r\n    ],\r\n    [\"1234\", \"AB567\", \"QIB231\", \"Lorem Ipsum\", \"Oil Barrel\", \"131\"],\r\n    [\"1234\", \"AB567\", \"QIB231\", \"Lorem Ipsum\", \"Oil Barrel\", \"131\"],\r\n    [\"1234\", \"AB567\", \"QIB231\", \"Lorem Ipsum\", \"Oil Barrel\", \"131\"],\r\n  ];\r\n  let metaData = [\r\n    [\"Product ID\", \"Dept Name\", \"Quantity\", \"Lorem Ipsum\", \"Price\"],\r\n    [\"Integer\", \"String\", \"Integer\", \"String\", \"Integer\"],\r\n    [\"-\", \"-\", \"In Hundreds\", \"Percentage\", \"In Millions\"],\r\n    [\"-\", \"-\", \"-\", \"(a+b)/2\", \"-\"],\r\n  ];\r\n\r\n  const nextPage = () => {\r\n    props.history.push({\r\n      pathname: `/automl/projects/${project_id}/models/${model_id}/link_columns/`,\r\n      state: {\r\n        detail: \"I am from Selected page\",\r\n        page_name: \"automl_link_Column\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const previewDataset = (id) => {\r\n    console.log(id);\r\n    setshowpopup(true);\r\n  };\r\n\r\n  function array_move(arr, old_index, new_index) {\r\n    if (new_index >= arr.length) {\r\n      var k = new_index - arr.length + 1;\r\n      while (k--) {\r\n        arr.push(undefined);\r\n      }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n    return arr; // for testing\r\n  }\r\n\r\n  const moveup = (id) => {\r\n    let temp = meta;\r\n    if (id !== 0) {\r\n      array_move(temp, id, id - 1);\r\n      setmeta(temp);\r\n      setdummy(!dummy);\r\n    }\r\n  };\r\n  const movedown = (id) => {\r\n    let temp = meta;\r\n    if (id !== meta.length - 1) {\r\n      array_move(temp, id, id + 1);\r\n      setmeta(temp);\r\n      setdummy(!dummy);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      justify=\"space-between\"\r\n      className={styles.container}\r\n      id=\"SelectedDatasets\"\r\n    >\r\n      <Col span={17} className={styles.column1}>\r\n        <h3 className={styles.titleBold}>\r\n          {project_id} | <span className={styles.subtitle}>{model_id}</span>\r\n        </h3>\r\n        <h3\r\n          style={{\r\n            textAlign: \"left\",\r\n            fontSize: \"20px\",\r\n            fontWeight: \"bold\",\r\n            marginBottom: \"0px\",\r\n          }}\r\n        >\r\n          Dataset Processing\r\n        </h3>\r\n        <hr\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#E1EEFF\",\r\n            border: \"none\",\r\n            height: \"1px\",\r\n            marginBottom: \"0px\",\r\n          }}\r\n        />\r\n        <div\r\n          style={{\r\n            flexGrow: \"1\",\r\n            overflow: \"scroll\",\r\n            paddingRight: \"10px\",\r\n          }}\r\n        >\r\n          {loading === true ? (\r\n            <Skeleton active loading={loading} />\r\n          ) : (\r\n            <AutoMLDatasetProcessingList\r\n              data={meta}\r\n              moveup={(id) => moveup(id)}\r\n              movedown={(id) => movedown(id)}\r\n              dummy={dummy}\r\n              preview={(id) => previewDataset(id)}\r\n            />\r\n          )}\r\n        </div>\r\n        <div style={{ textAlign: \"left\", marginTop: \"10px\" }}>\r\n          <Button className={styles.linkcolbutton} onClick={() => nextPage()}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </Col>\r\n      <Col span={7} className={styles.column2}>\r\n        <h3 className={styles.titleBold}>/Dataset Name/</h3>\r\n        <div\r\n          style={{ flexGrow: \"1\", overflowY: \"scroll\", paddingRight: \"10px\" }}\r\n        >\r\n          {loading === true ? (\r\n            <Skeleton active loading={loading} />\r\n          ) : (\r\n            <ColumnsGroup\r\n              data={[\r\n                \"Abc\",\r\n                \"defedededde\",\r\n                \"eyg\",\r\n                \"AbcD\",\r\n                \"defD\",\r\n                \"eygD\",\r\n                \"AbcE\",\r\n                \"defE\",\r\n                \"eygE\",\r\n              ]}\r\n            />\r\n          )}\r\n        </div>\r\n        <Button\r\n          onClick={() => {\r\n            console.log(\"Update Columns\");\r\n          }}\r\n          className={styles.addcartbutton}\r\n        >\r\n          Update Columns\r\n        </Button>\r\n        <hr\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#E1EEFF\",\r\n            border: \"none\",\r\n            height: \"1px\",\r\n            marginBottom: \"20px\",\r\n          }}\r\n        />\r\n        <h3 className={styles.titleBold}>Required Training Parameters</h3>\r\n        <div className={styles.info}>\r\n          Required No. of Rows:\r\n          <span style={{ float: \"right\" }}>96</span>\r\n        </div>\r\n        <div className={styles.info}>\r\n          Suggested No. of Rows:\r\n          <span style={{ float: \"right\" }}>255</span>\r\n        </div>\r\n        <div className={styles.info}>\r\n          Required Col to Row Ratio:\r\n          <span style={{ float: \"right\" }}>300</span>\r\n        </div>\r\n        <div className={styles.info}>\r\n          Suggested Col to Row Ratio:\r\n          <span style={{ float: \"right\" }}>25:1</span>\r\n        </div>\r\n      </Col>\r\n      <Modal\r\n        title={\"Selected Dataset Name...\"}\r\n        visible={showpopup}\r\n        footer={false}\r\n        centered\r\n        onCancel={() => setshowpopup(false)}\r\n        wrapClassName=\"PreviewPopup\"\r\n        width={\"80%\"}\r\n      >\r\n        <p className=\"sublink\">default dataset</p>\r\n        <p className=\"subtitle\" style={{ marginBottom: \"7px\" }}>\r\n          Dataset Description\r\n        </p>\r\n        <p className=\"desc\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore Lorem ipsum dolor sit amet,\r\n          consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\r\n          labore Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut l abore.\r\n        </p>\r\n        <div\r\n          style={{\r\n            width: \"inherit\",\r\n            overflowX: \"scroll\",\r\n            paddingBottom: \"10px\",\r\n          }}\r\n        >\r\n          <AutoMLSelectedDatasetsPreviewRowsTable rows={rows} />\r\n        </div>\r\n        <p className=\"subtitle\" style={{ marginTop: \"10px\" }}>\r\n          Meta Data\r\n        </p>\r\n        <div\r\n          style={{\r\n            width: \"inherit\",\r\n            overflowX: \"scroll\",\r\n            paddingBottom: \"10px\",\r\n          }}\r\n        >\r\n          <AutoMLSelectedDatasetsMetaTable rows={metaData} />\r\n        </div>\r\n      </Modal>\r\n    </Row>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/databucket.cd573261.svg\";","import React from \"react\";\r\nimport dataBucket from \"../../Icons/AutoML/SaveDatabucket/databucket.svg\";\r\nimport \"./styles.css\";\r\n\r\nexport default function AutoMLExistingDatabucketCard(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"AutoMLExistingDatabucketCard\" key={props.key}>\r\n      <div\r\n        className={props.highlight === props.id ? \"highlight\" : \"box\"}\r\n        onClick={() => props.selected(props.id)}\r\n      >\r\n        <img src={dataBucket} alt={\"Data-bucket\"} />\r\n        <div className=\"text\">{props.name}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/fileicon.f2dcf874.svg\";","/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useState } from \"react\";\r\nimport { Modal, Button, Row, Col } from \"antd\";\r\nimport ShareAvatar from \"../../Images/AutoML/shareAvatar.svg\";\r\nimport \"./styles.css\";\r\nimport closeIcon from \"../../Icons/AutoML/closeicon.svg\";\r\nimport AutoMLExistingDatabucketCard from \"../../Cards/AutoMLExistingDatabucketCard/AutoMLExistingDatabucketCard\";\r\nimport fileIcon from \"../../Icons/AutoML/SaveDatabucket/fileicon.svg\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nexport default function AutoMLSaveDatasetModal(props) {\r\n  const [selected, setselected] = useState(null);\r\n  let { project_id, model_id } = useParams();\r\n  let history = useHistory();\r\n\r\n  const savedataset = () => {\r\n    history.push({\r\n      pathname: `/automl/projects/${project_id}/models/${model_id}/customised_dataset/`,\r\n      state: {\r\n        detail: \"I am from New link page\",\r\n        page_name: \"automl_customised_datasets\",\r\n      },\r\n    });\r\n  };\r\n\r\n  let databuckets = [\r\n    {\r\n      name: \"Oil and Gas\",\r\n      datasets: [\r\n        \"Oil and Gas Refinery\",\r\n        \"Oil and Gas Exploration\",\r\n        \"Oil and Gas Exploration\",\r\n      ],\r\n    },\r\n    {\r\n      name: \"Cement\",\r\n      datasets: [\"Cement Refinery\", \"Cement Exploration\", \"Cement Exploration\"],\r\n    },\r\n    {\r\n      name: \"Banks\",\r\n      datasets: [\"HBL\", \"AL-Falah\", \"Habib Bank\", \"Summit Bank\", \"UBL\"],\r\n    },\r\n    {\r\n      name: \"Fertilizer\",\r\n      datasets: [\"ETC\", \"BCD\", \"ABC\", \"PPL\", \"FFC\"],\r\n    },\r\n    {\r\n      name: \"Automobile\",\r\n      datasets: [\"Indus Motors\", \"Toyota\", \"Kia\", \"Hyundai\", \"Suzuki\"],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"AutoMLSaveDatasetModal\">\r\n      <Modal\r\n        width={\"80%\"}\r\n        style={{ top: 20 }}\r\n        wrapClassName=\"DatasetsModal\"\r\n        visible={props.isModalVisible}\r\n        onOk={props.handleOk}\r\n        onCancel={props.handleCancel}\r\n        footer={false}\r\n        closable={false}\r\n        destroyOnClose\r\n        bodyStyle={{ borderRadius: \"20px\" }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: \"50px\",\r\n            background: \"white\",\r\n            borderRadius: \"20px 20px 0px 0px\",\r\n          }}\r\n        >\r\n          <div style={{ display: \"flex\", padding: \"12px\", marginLeft: \"0px\" }}>\r\n            <h2\r\n              style={{\r\n                flexGrow: \"1\",\r\n                fontWeight: \"bold\",\r\n                color: \"black\",\r\n                fontSize: \"18px\",\r\n              }}\r\n            >\r\n              Save Dataset\r\n            </h2>\r\n            <img\r\n              onClick={props.handleCancel}\r\n              src={closeIcon}\r\n              style={{\r\n                paddingBottom: \"10px\",\r\n                paddingRight: \"15px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            height: \"100%\",\r\n            marginTop: \"30px\",\r\n            flexDirection: \"column\",\r\n            textAlign: \"left\",\r\n            paddingBottom: \"19px\",\r\n          }}\r\n        >\r\n          <Row\r\n            justify=\"space-between\"\r\n            style={{\r\n              flexGrow: \"1\",\r\n              marginBottom: \"20px\",\r\n              height: \"40vh\",\r\n            }}\r\n          >\r\n            <Col\r\n              style={{\r\n                backgroundColor: \"#F5FAFF\",\r\n                padding: \"20px\",\r\n                borderRadius: \"18px\",\r\n                width: \"49%\",\r\n              }}\r\n            >\r\n              <h3 className=\"ModalHeading\">Data Buckets</h3>\r\n\r\n              {databuckets.map((item, index) => (\r\n                <AutoMLExistingDatabucketCard\r\n                  key={index}\r\n                  name={item.name}\r\n                  id={index}\r\n                  highlight={selected}\r\n                  selected={(id) => setselected(id)}\r\n                />\r\n              ))}\r\n              <div\r\n                className=\"newdatasetbutton\"\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  marginRight: \"10px\",\r\n                  marginBottom: \"10px\",\r\n                }}\r\n              >\r\n                <Button\r\n                  style={{\r\n                    width: \"100px\",\r\n                    height: \"60px\",\r\n                    top: \"10px\",\r\n                    borderColor: \"#085FAB\",\r\n                    borderRadius: \"10px\",\r\n                    backgroundColor: \"inherit\",\r\n                  }}\r\n                  type=\"dashed\"\r\n                  icon={\r\n                    <PlusOutlined\r\n                      style={{\r\n                        fontSize: \"30px\",\r\n                        fontWeight: \"700\",\r\n                        color: \"#085FAB\",\r\n                        paddingTop: \"5px\",\r\n                      }}\r\n                    />\r\n                  }\r\n                ></Button>\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              style={{\r\n                backgroundColor: \"#F5FAFF\",\r\n                padding: \"20px\",\r\n                borderRadius: \"18px\",\r\n                width: \"49%\",\r\n              }}\r\n            >\r\n              <h3 className=\"ModalHeading\" style={{ marginBottom: \"10px\" }}>\r\n                {selected !== null\r\n                  ? databuckets[selected].name\r\n                  : \"Choose Dataset\"}\r\n              </h3>\r\n              {selected !== null\r\n                ? databuckets[selected].datasets.map((item, index) => (\r\n                    <div style={{ marginBottom: \"12px\" }}>\r\n                      <img\r\n                        src={fileIcon}\r\n                        alt=\"FileIcon\"\r\n                        style={{ marginRight: \"10px\" }}\r\n                      />\r\n                      <div\r\n                        style={{\r\n                          fontWeight: \"normal\",\r\n                          display: \"inline-block\",\r\n                        }}\r\n                      >\r\n                        {item}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                : null}\r\n\r\n              <div></div>\r\n            </Col>\r\n          </Row>\r\n          <label for=\"dname\">Dataset Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"dname\"\r\n            name=\"dname\"\r\n            placeholder=\"Enter dataset name...\"\r\n          ></input>\r\n          <label for=\"ddesc\">\r\n            Dataset Description\r\n            <span\r\n              style={{\r\n                fontSize: \"14px\",\r\n                fontWeight: \"normal\",\r\n                color: \"#90A8BE\",\r\n                fontStyle: \"italic\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              (optional)\r\n            </span>{\" \"}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"ddesc\"\r\n            name=\"ddesc\"\r\n            placeholder=\"Enter dataset description...\"\r\n          ></input>\r\n          <br />\r\n          <div style={{ marginBottom: \"5px\" }}>\r\n            <Button\r\n              style={{\r\n                width: \"130px\",\r\n                height: \"40px\",\r\n                backgroundColor: \"#085FAB\",\r\n                fontFamily: \"Lato\",\r\n                fontSize: \"16px\",\r\n                fontWeight: \"bold\",\r\n                letterSpacing: \"1.5px\",\r\n                color: \"white\",\r\n                border: \"none\",\r\n                borderRadius: \"65px\",\r\n                borderColor: \"none\",\r\n              }}\r\n              onClick={() => savedataset()}\r\n            >\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import { Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport ReactFlow, {\r\n  Controls,\r\n  updateEdge,\r\n  addEdge,\r\n  isNode,\r\n  getConnectedEdges,\r\n  isEdge,\r\n  removeElements,\r\n  Background,\r\n} from \"react-flow-renderer\";\r\nimport \"./styles.css\";\r\nimport upArrow from \"../../Icons/AutoML/DatasetProcessing/uparrow.svg\";\r\nimport downArrow from \"../../Icons/AutoML/DatasetProcessing/downarrow.svg\";\r\n\r\nexport default function LinkColumnsReactFlow(props) {\r\n  let initialElements = [];\r\n  const [CustomTable, setCustomTable] = useState(null);\r\n  const [showresultanttable, setshowresultanttable] = useState(true);\r\n\r\n  let data = [\r\n    {\r\n      name: \"Customer\",\r\n      cols: [\r\n        { name: \"Customer Name\", type: \"int\" },\r\n        { name: \"Customer Id\", type: \"str\" },\r\n        { name: \"Address\", type: \"str\" },\r\n        { name: \"Phone\", type: \"int\" },\r\n        { name: \"Date\", type: \"str\" },\r\n      ],\r\n    },\r\n    {\r\n      name: \"Product\",\r\n      cols: [\r\n        { name: \"Product Name\", type: \"str\" },\r\n        { name: \"Product Id\", type: \"int\" },\r\n        { name: \"Date\", type: \"str\" },\r\n      ],\r\n    },\r\n    {\r\n      name: \"Branch\",\r\n      cols: [\r\n        { name: \"Branch Name\", type: \"str\" },\r\n        { name: \"Branch Id\", type: \"int\" },\r\n        { name: \"Date\", type: \"int\" },\r\n      ],\r\n    },\r\n  ];\r\n  const rendernew = () => {\r\n    let temp = [];\r\n    let initialheight = 0;\r\n    data.map((item, i) => {\r\n      let initialwidth = 0;\r\n      temp.push({\r\n        id: item.name,\r\n        data: {\r\n          label: (\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  marginRight: \"8px\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={upArrow}\r\n                  alt=\"uparrow\"\r\n                  onClick={() => onMoveUp(i)}\r\n                  width={12}\r\n                  style={{\r\n                    marginBottom: \"5px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                />\r\n                <img\r\n                  src={downArrow}\r\n                  alt=\"uparrow\"\r\n                  width={12}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </div>\r\n              <span>{item.name}</span>\r\n            </div>\r\n          ),\r\n        },\r\n        type: \"default\",\r\n        connectable: false,\r\n        selectable: false,\r\n        position: { x: initialwidth, y: initialheight },\r\n        style: {\r\n          background: \"white\",\r\n          border: \"none\",\r\n          fontSize: \"12px\",\r\n          cursor: \"default\",\r\n          fontWeight: \"bold\",\r\n          color: \"black\",\r\n          paddingTop: \"2px\",\r\n          paddingBottom: \"2px\",\r\n        },\r\n      });\r\n      initialwidth = initialwidth + 100;\r\n      item.cols.map((element, index) => {\r\n        let obj = {\r\n          id: item.name + \"_\" + index + \"%\" + i,\r\n          data: { label: element.name },\r\n          type: i === 0 ? \"input\" : i === 1 ? \"output\" : \"default\",\r\n          connectable: i > 1 ? false : true,\r\n          position: { x: initialwidth, y: initialheight },\r\n          style: {\r\n            background: \"#F5FAFF\",\r\n            border: \"none\",\r\n            borderRadius:\r\n              index === 0\r\n                ? \"10px 0 0 10px\"\r\n                : index === item.cols.length - 1\r\n                ? \"0px 10px 10px 0px\"\r\n                : null,\r\n            fontSize: \"12px\",\r\n            color: \"#6D6D6D\",\r\n            paddingTop: \"2px\",\r\n            paddingBottom: \"2px\",\r\n          },\r\n        };\r\n        temp.push(obj);\r\n        initialwidth = initialwidth + 150;\r\n      });\r\n      initialheight = initialheight + 100;\r\n    });\r\n    setElements({ data: temp, changed: !elements.changed });\r\n  };\r\n\r\n  const [processed, setprocessed] = useState(null);\r\n\r\n  if (processed === null) {\r\n    let temp = [];\r\n    let initialheight = 0;\r\n    data.map((item, i) => {\r\n      let initialwidth = 0;\r\n      temp.push({\r\n        id: item.name,\r\n        data: {\r\n          label: (\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  marginRight: \"8px\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={upArrow}\r\n                  className=\"arrowIcon\"\r\n                  alt=\"uparrow\"\r\n                  onClick={() => onMoveUp(i)}\r\n                  width={12}\r\n                  style={{\r\n                    marginBottom: \"2px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                />\r\n                <img\r\n                  src={downArrow}\r\n                  className=\"arrowIcon\"\r\n                  onClick={() => onMoveDown(i)}\r\n                  alt=\"downarrow\"\r\n                  width={12}\r\n                  style={{ cursor: \"pointer\", marginTop: \"2px\" }}\r\n                />\r\n              </div>\r\n              <span>{item.name}</span>\r\n            </div>\r\n          ),\r\n        },\r\n        type: \"default\",\r\n        connectable: false,\r\n        selectable: false,\r\n        position: { x: initialwidth, y: initialheight },\r\n        style: {\r\n          background: \"white\",\r\n          border: \"none\",\r\n          fontSize: \"12px\",\r\n          cursor: \"default\",\r\n          fontWeight: \"bold\",\r\n          color: \"black\",\r\n          paddingTop: \"2px\",\r\n          paddingBottom: \"2px\",\r\n        },\r\n      });\r\n      initialwidth = initialwidth + 100;\r\n      item.cols.map((element, index) => {\r\n        let obj = {\r\n          id: item.name + \"_\" + index + \"%\" + i,\r\n          data: { label: element.name },\r\n          type: i === 0 ? \"input\" : i === 1 ? \"output\" : \"default\",\r\n          connectable: i > 1 ? false : true,\r\n          position: { x: initialwidth, y: initialheight },\r\n          style: {\r\n            background: \"#F5FAFF\",\r\n            border: \"none\",\r\n            borderRadius:\r\n              index === 0\r\n                ? \"10px 0 0 10px\"\r\n                : index === item.cols.length - 1\r\n                ? \"0px 10px 10px 0px\"\r\n                : null,\r\n            fontSize: \"12px\",\r\n            color: \"#6D6D6D\",\r\n            paddingTop: \"2px\",\r\n            paddingBottom: \"2px\",\r\n          },\r\n        };\r\n        temp.push(obj);\r\n        initialwidth = initialwidth + 150;\r\n      });\r\n      initialheight = initialheight + 100;\r\n    });\r\n    initialElements = temp;\r\n  }\r\n\r\n  const onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.project({ x: 40, y: 10 });\r\n    reactFlowInstance.fitView({ padding: 0.05, includeHiddenNodes: false });\r\n  };\r\n\r\n  // gets called after end of edge gets dragged to another source or target\r\n  const onEdgeUpdate = (oldEdge, newConnection) =>\r\n    setElements((els) => updateEdge(oldEdge, newConnection, els));\r\n\r\n  const onConnect = (params) => {\r\n    console.log(params);\r\n    let temp = elements.data;\r\n    let found = false;\r\n    temp.forEach((element) => {\r\n      if (isEdge(element) && params.target === element.target) {\r\n        found = true;\r\n      }\r\n    });\r\n    if (found === false) {\r\n      let source_row = params.source.split(\"%\")[1];\r\n      let source_col = params.source.split(\"_\")[1][0];\r\n      let target_row = params.target.split(\"%\")[1];\r\n      let target_col = params.target.split(\"_\")[1][0];\r\n      if (\r\n        data[source_row].cols[source_col].type ===\r\n        data[target_row].cols[target_col].type\r\n      ) {\r\n        let edge = params;\r\n        edge[\"animated\"] = false;\r\n        edge[\"label\"] = \"\";\r\n        edge[\"style\"] = { stroke: \"#085fab\", strokeWidth: \"3px\" };\r\n        edge[\"arrowHeadType\"] = \"arrow\";\r\n        // edge[\"type\"] = \"step\";\r\n        let temp = addEdge(edge, elements.data);\r\n        setshowresultanttable(false);\r\n        setElements({ data: temp, changed: !elements.changed });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onConnectStart = (event, { nodeId, handleType }) => {\r\n    let source_row = nodeId.split(\"%\")[1];\r\n    let source_col = nodeId.split(\"_\")[1][0];\r\n    let temp = elements.data;\r\n    temp.forEach((item) => {\r\n      if (item.id.split(\"%\")[1] === \"1\") {\r\n        if (\r\n          data[source_row].cols[source_col].type ===\r\n          data[1].cols[item.id.split(\"_\")[1][0]].type\r\n        ) {\r\n          item.style.background = \"#e1eeff\";\r\n        }\r\n      }\r\n    });\r\n\r\n    setElements({ data: temp, changed: !elements.changed });\r\n  };\r\n  const onConnectEnd = (event) => {\r\n    let temp = elements.data;\r\n    temp.forEach((item) => {\r\n      if (item.id.split(\"%\")[1] === \"1\") {\r\n        item.style.background = \"#F5FAFF\";\r\n      }\r\n    });\r\n    setElements({ data: temp, changed: !elements.changed });\r\n  };\r\n\r\n  const onElementClick = (event, element) => {\r\n    if (isEdge(element)) {\r\n      console.log(element);\r\n      let temp = elements.data;\r\n      temp = temp.filter((item, index) => {\r\n        return item.source !== element.source && item.target !== element.target;\r\n      });\r\n      setElements({ data: temp, changed: !elements.changed });\r\n      temp.forEach((i) => {\r\n        if (isEdge(i)) {\r\n          console.log(\"true\");\r\n          setshowresultanttable(false);\r\n        } else {\r\n          setshowresultanttable(true);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  function array_move(arr, old_index, new_index) {\r\n    if (new_index >= arr.length) {\r\n      var k = new_index - arr.length + 1;\r\n      while (k--) {\r\n        arr.push(undefined);\r\n      }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n    return arr; // for testing\r\n  }\r\n\r\n  const onMoveUp = (row_id) => {\r\n    let temp = data;\r\n    if (row_id !== 0) {\r\n      array_move(temp, row_id, row_id - 1);\r\n      data = temp;\r\n      setshowresultanttable(true);\r\n      rendernew();\r\n    }\r\n  };\r\n\r\n  const onMoveDown = (row_id) => {\r\n    let temp = data;\r\n    console.log(row_id);\r\n    if (row_id !== data.length - 1) {\r\n      array_move(temp, row_id, row_id + 1);\r\n      data = temp;\r\n      setshowresultanttable(true);\r\n      rendernew();\r\n    }\r\n  };\r\n\r\n  const getElements = () => {\r\n    let temp = elements.data;\r\n    let arr = [];\r\n    temp.forEach((item) => {\r\n      if (item.id.split(\"%\")[1] === \"0\" || item.id.split(\"%\")[1] === \"1\") {\r\n        arr.push(item);\r\n      }\r\n      if (isEdge(item)) {\r\n        arr.push(item);\r\n      }\r\n    });\r\n    console.log(arr);\r\n  };\r\n\r\n  const mergeElements = () => {\r\n    let temp = elements.data;\r\n    let arr = [];\r\n    temp.forEach((item) => {\r\n      if (item.id.split(\"%\")[1] === \"0\" || item.id.split(\"%\")[1] === \"1\") {\r\n        arr.push(item);\r\n      }\r\n      if (isEdge(item)) {\r\n        arr.push(item);\r\n      }\r\n      if (!item.id.includes(\"%\")) {\r\n        arr.push(item);\r\n      }\r\n    });\r\n\r\n    let links = { source: [], target: [], sourcetable: \"\", targettable: \"\" };\r\n    arr.forEach((element) => {\r\n      if (isEdge(element)) {\r\n        links.source.push(parseInt(element.source.split(\"_\")[1].split(\"%\")[0]));\r\n        links.sourcetable = element.source.split(\"_\")[0];\r\n        links.target.push(parseInt(element.target.split(\"_\")[1].split(\"%\")[0]));\r\n        links.targettable = element.target.split(\"_\")[0];\r\n      }\r\n    });\r\n    // console.log(arr);\r\n    console.log(links);\r\n    let sourcearr = [];\r\n    let targetarr = [];\r\n    arr.forEach((element) => {\r\n      if (isNode(element)) {\r\n        if (element.id.includes(\"%\")) {\r\n          if (\r\n            element.id.includes(links.sourcetable) &&\r\n            links.sourcetable !== \"\"\r\n          ) {\r\n            sourcearr.push(element.data.label);\r\n          }\r\n          if (\r\n            element.id.includes(links.targettable) &&\r\n            links.sourcetable !== \"\"\r\n          ) {\r\n            targetarr.push(element.data.label);\r\n          }\r\n        }\r\n      }\r\n    });\r\n    //Same Name Detection and not linked\r\n    sourcearr.forEach((element, index) => {\r\n      if (targetarr.includes(element)) {\r\n        if (!links.source.includes(index)) {\r\n          sourcearr[sourcearr.indexOf(element)] =\r\n            sourcearr[sourcearr.indexOf(element)] + \"_1\";\r\n          targetarr[targetarr.indexOf(element)] =\r\n            targetarr[targetarr.indexOf(element)] + \"_2\";\r\n        }\r\n      }\r\n    });\r\n    console.log(sourcearr);\r\n    console.log(targetarr);\r\n\r\n    //Make Custom table\r\n    let custom = sourcearr;\r\n    targetarr.forEach((element, index) => {\r\n      if (!sourcearr.includes(element)) {\r\n        custom.push(element);\r\n      }\r\n    });\r\n    console.log(custom);\r\n    setshowresultanttable(true);\r\n  };\r\n\r\n  const [elements, setElements] = useState({\r\n    data: initialElements,\r\n    changed: false,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"ReactFlowContainer\"\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"inherit\",\r\n          padding: \"0px\",\r\n          borderRadius: \"10px\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <ReactFlow\r\n          nodesDraggable={false}\r\n          elements={elements.data}\r\n          onLoad={onLoad}\r\n          snapToGrid\r\n          onConnect={onConnect}\r\n          onConnectStart={onConnectStart}\r\n          onConnectStop={onConnectEnd}\r\n          onElementClick={onElementClick}\r\n        >\r\n          <Controls showInteractive={false} style={{ left: \"95%\" }} />\r\n          <Background color=\"#aaa\" gap={16} />\r\n        </ReactFlow>\r\n        <hr\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#E1EEFF\",\r\n            border: \"none\",\r\n            height: \"1px\",\r\n            marginBottom: \"0px\",\r\n          }}\r\n        />\r\n        <div\r\n          style={\r\n            showresultanttable\r\n              ? { display: \"none\" }\r\n              : { textAlign: \"left\", marginTop: \"10px\" }\r\n          }\r\n        >\r\n          <h3 className=\"anchor\">Unmerge</h3>\r\n          <Button onClick={() => mergeElements()}>Merge</Button>\r\n          {/* <Button onClick={() => getElements()}>Download</Button> */}\r\n        </div>\r\n        <div\r\n          className=\"buttongroup\"\r\n          style={\r\n            showresultanttable\r\n              ? { textAlign: \"left\", marginTop: \"10px\" }\r\n              : { display: \"none\" }\r\n          }\r\n        >\r\n          <Button onClick={() => props.showresulttable()}>\r\n            View Resultant Table\r\n          </Button>\r\n          <Button type=\"primary\" onClick={() => props.generateTable()}>\r\n            Generate Table\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Button } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AutoMLSaveDatasetModal from \"../../../Components/Modals/AutoMLSaveDatasetModal/AutoMLSaveDatasetModal\";\r\nimport LinkColumnsReactFlow from \"../../../Components/ReactFlow/LinkColumnsReactFlow/LinkColumnsReactFlow\";\r\nimport \"./styles.css\";\r\n\r\nexport default function LinkColumns(props) {\r\n  let { project_id, model_id } = useParams();\r\n  const [showresultantmodal, setshowresultantmodal] = useState(false);\r\n  const [saveDataset, setsaveDataset] = useState(false);\r\n\r\n  const [customtable, setcustomtable] = useState([\r\n    {\r\n      name: \"Customer ID\",\r\n      id: 1,\r\n      data_type: \"Integer\",\r\n    },\r\n    {\r\n      name: \"Customer Name\",\r\n      id: 2,\r\n      data_type: \"String\",\r\n    },\r\n    {\r\n      name: \"Customer Address\",\r\n      id: 3,\r\n      data_type: \"String\",\r\n    },\r\n    {\r\n      name: \"Date of Purchase\",\r\n      id: 4,\r\n      data_type: \"String\",\r\n    },\r\n    {\r\n      name: \"Quantity\",\r\n      id: 5,\r\n      data_type: \"Integer\",\r\n    },\r\n  ]);\r\n\r\n  const generateTable = () => {\r\n    props.history.push({\r\n      pathname: `/automl/projects/${project_id}/models/${model_id}/customised_dataset/`,\r\n      state: {\r\n        detail: \"I am from New link page\",\r\n        page_name: \"automl_customised_datasets\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setshowresultantmodal(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"LinkColumns\">\r\n      <h3 className={\"titleBold\"}>\r\n        {project_id} | <span className={\"subtitle\"}>{model_id}</span>\r\n      </h3>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <h3\r\n          style={{\r\n            textAlign: \"left\",\r\n            fontSize: \"20px\",\r\n            fontWeight: \"bold\",\r\n            marginBottom: \"0px\",\r\n            flexGrow: \"1\",\r\n          }}\r\n        >\r\n          Dataset Processing\r\n        </h3>\r\n        <Button>Reset</Button>\r\n      </div>\r\n      <hr\r\n        style={{\r\n          width: \"100%\",\r\n          backgroundColor: \"#E1EEFF\",\r\n          border: \"none\",\r\n          height: \"1px\",\r\n          marginBottom: \"0px\",\r\n        }}\r\n      />\r\n      <div style={{ flexGrow: \"1\", height: \"100%\" }}>\r\n        <LinkColumnsReactFlow\r\n          showresulttable={() => setshowresultantmodal(true)}\r\n          generateTable={() => setsaveDataset(true)}\r\n        />\r\n      </div>\r\n      <Modal\r\n        title=\"Custom Table\"\r\n        visible={showresultantmodal}\r\n        onCancel={handleCancel}\r\n        footer={false}\r\n        wrapClassName=\"resultantpopup\"\r\n        width={\"80%\"}\r\n      >\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <h3\r\n            style={{\r\n              textAlign: \"left\",\r\n              fontSize: \"20px\",\r\n              fontWeight: \"bold\",\r\n              marginBottom: \"0px\",\r\n            }}\r\n          >\r\n            Custom Table\r\n          </h3>\r\n          <h3 className={\"titleBold\"}>(icon) Edit Column Names</h3>\r\n          <div>\r\n            <ul className=\"custom_row\" style={{ marginTop: \"20px\" }}>\r\n              {customtable.map((d) => (\r\n                <li key={d.name} style={{ display: \"inline-block\" }}>\r\n                  {d.name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <h3\r\n              style={{\r\n                float: \"left\",\r\n                marginTop: \"10px\",\r\n                textAlign: \"center\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"18px\",\r\n                lineHeight: \"22px\",\r\n                marginTop: \"18px\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => setshowresultantmodal(false)}\r\n            >\r\n              Cancel\r\n            </h3>\r\n            <Button\r\n              style={{ float: \"left\", marginTop: \"10px\", width: \"100px\" }}\r\n              onClick={() => generateTable()}\r\n            >\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      <AutoMLSaveDatasetModal\r\n        isModalVisible={saveDataset}\r\n        handleCancel={() => setsaveDataset(false)}\r\n        handleOk={() => setsaveDataset(false)}\r\n      />\r\n      {/* <div> */}\r\n      {/* <div className=\"row\" style={{ display: \"flex\", flexDirection: \"row\" }}> */}\r\n      {/* <div className=\"box2\" style={{ flexGrow: \"1\" }}>\r\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <h3\r\n                style={{\r\n                  textAlign: \"left\",\r\n                  fontSize: \"20px\",\r\n                  fontWeight: \"bold\",\r\n                  marginBottom: \"0px\",\r\n                }}\r\n              >\r\n                Custom Table\r\n              </h3>\r\n              <h3 className={\"titleBold\"}>(icon) Edit Column Names</h3>\r\n              <div style={{ flexGrow: \"1\" }}>Custom table Row</div>\r\n              <Button style={{ float: \"left\" }} onClick={() => generateTable()}>\r\n                Generate Table\r\n              </Button>\r\n            </div>\r\n          </div> */}\r\n      {/* <div className=\"box3\">\r\n            <h3\r\n              style={{\r\n                textAlign: \"left\",\r\n                fontSize: \"20px\",\r\n                fontWeight: \"bold\",\r\n                marginBottom: \"0px\",\r\n                margin: \"0px\",\r\n              }}\r\n            >\r\n              Required Training Parameters\r\n            </h3>\r\n            <div className={\"info\"}>\r\n              Required No. of Rows:\r\n              <span style={{ float: \"right\" }}>96</span>\r\n            </div>\r\n            <div className={\"info\"}>\r\n              Suggested No. of Rows:\r\n              <span style={{ float: \"right\" }}>255</span>\r\n            </div>\r\n            <div className={\"info\"}>\r\n              Required Col to Row Ratio:\r\n              <span style={{ float: \"right\" }}>300</span>\r\n            </div>\r\n            <div className={\"info\"}>\r\n              Suggested Col to Row Ratio:\r\n              <span style={{ float: \"right\" }}>25:1</span>\r\n            </div>\r\n          </div> */}\r\n      {/* </div> */}\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst AntTabs = withStyles({\r\n  root: {\r\n    borderBottom: \"1px solid #E1EEFF\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"#085FAB\",\r\n  },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    minWidth: 72,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginRight: theme.spacing(4),\r\n    letterSpacing: \"0px\",\r\n    fontSize: \"14px\",\r\n    paddingBottom: \"0px\",\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:hover\": {\r\n      color: \"grey\",\r\n      opacity: 1,\r\n    },\r\n    \"&$selected\": {\r\n      color: \"black\",\r\n      fontWeight: \"700\",\r\n      fontFamily: \"Lato\",\r\n    },\r\n    \"&:focus\": {\r\n      color: \"black\",\r\n    },\r\n  },\r\n  selected: {},\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"60px\",\r\n    marginTop: \"-14px\",\r\n  },\r\n  padding: {\r\n    padding: \"5px\",\r\n  },\r\n  demo1: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  demo2: {\r\n    backgroundColor: \"#2e1534\",\r\n  },\r\n}));\r\n\r\nexport default function AutoMLCustomisedDatasetTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n\r\n    switch (newValue) {\r\n      case 0:\r\n        props.setTab(\"meta_data\");\r\n        break;\r\n      case 1:\r\n        props.setTab(\"table_preview\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.demo1}>\r\n        <AntTabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"ant example\"\r\n          scrollButtons=\"on\"\r\n        >\r\n          <AntTab label=\"Meta Data\" />\r\n          <AntTab label=\"Table Preview\" />\r\n        </AntTabs>\r\n      </div>\r\n      {/* <div className={classes.demo2}>\r\n        <StyledTabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"styled tabs example\"\r\n        >\r\n          <StyledTab label=\"Workflows\" />\r\n          <StyledTab label=\"Datasets\" />\r\n          <StyledTab label=\"Connections\" />\r\n        </StyledTabs>\r\n        <Typography className={classes.padding} />\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/targeticon.7b8d8cfb.svg\";","import React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport \"./styles.css\";\r\n\r\nexport default function AutoMLCustomisedDatasetDropdown(props) {\r\n  const { Option } = Select;\r\n\r\n  function onChange(value) {\r\n    props.selected(value);\r\n  }\r\n\r\n  function onBlur() {}\r\n\r\n  function onFocus() {}\r\n\r\n  function onSearch(val) {}\r\n\r\n  return (\r\n    <div className=\"AutoMLCustomisedDatasetDropdown\">\r\n      <Select\r\n        showSearch\r\n        style={{\r\n          width: \"350px\",\r\n          fontSize: \"14px\",\r\n          fontWeight: \"bold\",\r\n          color: \"#085fab\",\r\n          height: \"30px\",\r\n        }}\r\n        placeholder={`Select ${props.type}`}\r\n        optionFilterProp=\"children\"\r\n        disabled={!props.data}\r\n        value={props.value}\r\n        onChange={onChange}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        onSearch={onSearch}\r\n        size=\"large\"\r\n        filterOption={(input, option) =>\r\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n        }\r\n      >\r\n        {props.data ? (\r\n          props.data.map((item, index) => (\r\n            <Option value={`${item.name}`} key={index}>\r\n              {item.name}\r\n            </Option>\r\n          ))\r\n        ) : (\r\n          <Option value=\"Nothing\">Nothing to Show</Option>\r\n        )}\r\n        {/* <Option value=\"Oil and Gas\">Oil and Gas</Option>\r\n                <Option value=\"Banking\">Banking</Option>\r\n                <Option value=\"Oil and Gas Exploration\">Oil and Gas Exploration</Option>\r\n                <Option value=\"Oil and Gas Refinery\">Oil and Gas Refinery</Option>\r\n                <Option value=\"Oil and Gas Marketing\">Oil and Gas Marketing</Option> */}\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Switch } from \"antd\";\r\nimport \"./styles.css\";\r\n\r\nexport default function AutoMLCustomisedDatasetsMetaTable(props) {\r\n  const getrows = () => {\r\n    return props.data.map((item, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{item.name}</td>\r\n          <td>{item.data_type}</td>\r\n          <td>\r\n            <Switch defaultChecked={item.nullable === \"true\" ? true : false} />\r\n          </td>\r\n          <td\r\n            style={\r\n              item.missing_values === \"0%\"\r\n                ? { color: \"#5BCEAE\" }\r\n                : { color: \"#EC547A\" }\r\n            }\r\n          >\r\n            {item.missing_values}\r\n          </td>\r\n          <td\r\n            style={\r\n              item.invalid_values === \"0%\"\r\n                ? { color: \"#5BCEAE\" }\r\n                : { color: \"#EC547A\" }\r\n            }\r\n          >\r\n            {item.invalid_values}\r\n          </td>\r\n          <td>{item.distinct_values}</td>\r\n          <td>{item.correlation}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"AutoMLCustomisedDatasetsMetaTable\">\r\n      <table>\r\n        <thead></thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>Column</td>\r\n            <td>Data Type</td>\r\n            <td>Nullable</td>\r\n            <td>Missing Values (%)</td>\r\n            <td>Invalid Values (%)</td>\r\n            <td>Distinct Values (%)</td>\r\n            <td>Correlation with Target</td>\r\n          </tr>\r\n          {getrows()}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/targetblue.99e3d2cf.svg\";","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport targetBlue from \"../../Icons/AutoML/targetblue.svg\";\r\n\r\nexport default function AutoMLCustomisedDatasetsPreviewTable(props) {\r\n  const getrows = () => {\r\n    return props.rows.map((item, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          {item.map((element, i) => {\r\n            return (\r\n              <td key={index + \"_\" + i}>\r\n                <img\r\n                  src={targetBlue}\r\n                  alt=\"target\"\r\n                  style={\r\n                    props.target === element\r\n                      ? { marginRight: \"5px\" }\r\n                      : { display: \"none\" }\r\n                  }\r\n                />\r\n                {element}\r\n              </td>\r\n            );\r\n          })}\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"AutoMLCustomisedDatasetsPreviewTable\">\r\n      <table>\r\n        <thead></thead>\r\n        <tbody>{getrows()}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AutoMLCustomisedDatasetTabs from \"../../../Components/Tabs/AutoMLCustomisedDatasetTabs/AutoMLCustomisedDatasetTabs\";\r\nimport \"./styles.css\";\r\nimport targetIcon from \"../../../Components/Icons/AutoML/targeticon.svg\";\r\nimport AutoMLCustomisedDatasetDropdown from \"../../../Components/Dropdowns/AutoMLCustomisedDatasetDropdown/AutoMLCustomisedDatasetDropdown\";\r\nimport { Button } from \"antd\";\r\nimport AutoMLCustomisedDatasetsMetaTable from \"../../../Components/Tables/AutoMLCustomisedDatasetsMetaTable/AutoMLCustomisedDatasetsMetaTable\";\r\nimport AutoMLCustomisedDatasetsPreviewTable from \"../../../Components/Tables/AutoMLCustomisedDatasetsPreviewTable/AutoMLCustomisedDatasetsPreviewTable\";\r\n\r\nexport default function CustomisedDataset() {\r\n  let { project_id, model_id } = useParams();\r\n  const [tab, settab] = useState(\"meta_data\");\r\n  const [target, settarget] = useState({ id: \"\", name: \"\" });\r\n  const [dataset, setdataset] = useState([\r\n    {\r\n      name: \"Customer ID\",\r\n      id: 1,\r\n      data_type: \"Integer\",\r\n      nullable: \"false\",\r\n      missing_values: \"1.5%\",\r\n      invalid_values: \"1.2%\",\r\n      distinct_values: \"1022\",\r\n      correlation: \"126\",\r\n    },\r\n    {\r\n      name: \"Customer Name\",\r\n      id: 2,\r\n      data_type: \"String\",\r\n      nullable: \"true\",\r\n      missing_values: \"2.5%\",\r\n      invalid_values: \"1.4%\",\r\n      distinct_values: \"1452\",\r\n      correlation: \"056\",\r\n    },\r\n    {\r\n      name: \"Customer Address\",\r\n      id: 3,\r\n      data_type: \"String\",\r\n      nullable: \"false\",\r\n      missing_values: \"1.2%\",\r\n      invalid_values: \"2.5%\",\r\n      distinct_values: \"1342\",\r\n      correlation: \"157\",\r\n    },\r\n    {\r\n      name: \"Date of Purchase\",\r\n      id: 4,\r\n      data_type: \"String\",\r\n      nullable: \"true\",\r\n      missing_values: \"2.4%\",\r\n      invalid_values: \"3.1%\",\r\n      distinct_values: \"1410\",\r\n      correlation: \"202\",\r\n    },\r\n    {\r\n      name: \"Quantity\",\r\n      id: 5,\r\n      data_type: \"Integer\",\r\n      nullable: \"true\",\r\n      missing_values: \"2.2%\",\r\n      invalid_values: \"0%\",\r\n      distinct_values: \"1502\",\r\n      correlation: \"111\",\r\n    },\r\n  ]);\r\n  const [previewrows, setpreviewrows] = useState([\r\n    [\r\n      \"Customer ID\",\r\n      \"Product ID\",\r\n      \"Dept Name\",\r\n      \"Quantity\",\r\n      \"Lorem ipsum\",\r\n      \"Price\",\r\n    ],\r\n    [\"1234\", \"AB567\", \"QIB768\", \"Lorem Ipsum\", \"Oil Barrel\", \"1500\"],\r\n    [\"1234\", \"AB567\", \"QIB768\", \"Lorem Ipsum\", \"Oil Barrel\", \"1500\"],\r\n    [\"1234\", \"AB567\", \"QIB768\", \"Lorem Ipsum\", \"Oil Barrel\", \"1500\"],\r\n    [\"1234\", \"AB567\", \"QIB768\", \"Lorem Ipsum\", \"Oil Barrel\", \"1500\"],\r\n    [\"1234\", \"AB567\", \"QIB768\", \"Lorem Ipsum\", \"Oil Barrel\", \"1500\"],\r\n    [\"1234\", \"AB567\", \"QIB768\", \"Lorem Ipsum\", \"Oil Barrel\", \"1500\"],\r\n    [\"1234\", \"AB567\", \"QIB768\", \"Lorem Ipsum\", \"Oil Barrel\", \"1500\"],\r\n    [\"1234\", \"AB567\", \"QIB768\", \"Lorem Ipsum\", \"Oil Barrel\", \"1500\"],\r\n    [\"1234\", \"AB567\", \"QIB768\", \"Lorem Ipsum\", \"Oil Barrel\", \"1500\"],\r\n    [\"1234\", \"AB567\", \"QIB768\", \"Lorem Ipsum\", \"Oil Barrel\", \"1500\"],\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"CustomisedDataset\">\r\n      <h3 className=\"titleBold\">\r\n        {project_id} | <span className=\"subtitle\">{model_id}</span>\r\n      </h3>\r\n      <h3\r\n        style={{\r\n          textAlign: \"left\",\r\n          fontSize: \"20px\",\r\n          fontWeight: \"bold\",\r\n          marginBottom: \"0px\",\r\n        }}\r\n      >\r\n        Customised Dataset\r\n      </h3>\r\n      <hr\r\n        style={{\r\n          width: \"100%\",\r\n          backgroundColor: \"#E1EEFF\",\r\n          border: \"none\",\r\n          height: \"1px\",\r\n          marginBottom: \"0px\",\r\n        }}\r\n      />\r\n      <div>\r\n        <AutoMLCustomisedDatasetTabs setTab={(val) => settab(val)} />\r\n      </div>\r\n      <div\r\n        className=\"box1\"\r\n        style={\r\n          tab === \"meta_data\"\r\n            ? { display: \"flex\", flexDirection: \"column\", height: \"inherit\" }\r\n            : { display: \"none\" }\r\n        }\r\n      >\r\n        <div style={{ textAlign: \"left\" }}>\r\n          <h3 className=\"rowtitle\">Fatima Fertilizer</h3>\r\n          <ul className=\"custom_row\">\r\n            {dataset.map((d) => (\r\n              <li\r\n                key={d.name}\r\n                className={target.name === d.name ? \"highlighted\" : \"listitem\"}\r\n                style={{ display: \"inline-block\" }}\r\n              >\r\n                <img\r\n                  src={targetIcon}\r\n                  alt=\"targetIcon\"\r\n                  width={13}\r\n                  style={\r\n                    target.name === d.name\r\n                      ? { marginRight: \"5px\", paddingBottom: \"1px\" }\r\n                      : { display: \"none\" }\r\n                  }\r\n                />\r\n                {d.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <h3 className=\"featuretitle\">Feature Target</h3>\r\n          <div style={{ marginBottom: \"30px\" }}>\r\n            <AutoMLCustomisedDatasetDropdown\r\n              data={dataset}\r\n              selected={(target) => settarget({ id: \"id\", name: target })}\r\n              type=\"target\"\r\n            />\r\n          </div>\r\n          {/* <hr\r\n            style={{\r\n              width: \"100%\",\r\n              backgroundColor: \"#E1EEFF\",\r\n              border: \"none\",\r\n              height: \"1px\",\r\n              marginBottom: \"0px\",\r\n            }}\r\n          /> */}\r\n        </div>\r\n        <div\r\n          style={{\r\n            flexGrow: \"1\",\r\n            height: \"10vh\",\r\n            marginBottom: \"5px\",\r\n            overflowY: \"scroll\",\r\n          }}\r\n        >\r\n          <AutoMLCustomisedDatasetsMetaTable data={dataset} />\r\n        </div>\r\n        <Button className=\"generatebutton\">Generate Correlation</Button>\r\n      </div>\r\n      <div\r\n        className=\"box2\"\r\n        style={\r\n          tab === \"meta_data\"\r\n            ? { display: \"none\" }\r\n            : { display: \"flex\", flexDirection: \"column\", height: \"inherit\" }\r\n        }\r\n      >\r\n        <div style={{ flexGrow: \"1\", overflowY: \"scroll\", height: \"10vh\" }}>\r\n          <AutoMLCustomisedDatasetsPreviewTable\r\n            rows={previewrows}\r\n            target={target.name}\r\n          />\r\n        </div>\r\n        <hr\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#E1EEFF\",\r\n            border: \"none\",\r\n            height: \"1px\",\r\n            marginBottom: \"0px\",\r\n          }}\r\n        />\r\n        <Button className=\"generatebutton\">Generate Correlation</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Layout, { Content } from \"antd/lib/layout/layout\";\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport AutoMLBreadcrumbs from \"../Components/BreadCrumbs/AutoMLBreadcrumbs/AutoMLBreadcrumbs\";\r\nimport AutoMLHeader from \"../Components/Header/AutoMLHeader/AutoMLHeader\";\r\nimport AutoMLSideBar from \"../Components/SideBar/AutoMLSideBar/AutoMLSideBar\";\r\nimport CreateNewModel from \"../Pages/AutoML/CreateNewModel/CreateNewModel\";\r\nimport CreateNewProject from \"../Pages/AutoML/CreateNewProject/CreateNewProject\";\r\nimport ExistingModels from \"../Pages/AutoML/ExistingModels/ExistingModels\";\r\nimport NewProject from \"../Pages/AutoML/NewProject/NewProject\";\r\nimport SelectDatasets from \"../Pages/AutoML/SelectDatasets/SelectDatasets\";\r\nimport SelectedDatasets from \"../Pages/AutoML/SelectedDatasets/SelectedDatasets\";\r\nimport styles from \"./AutoMLRoutes.module.scss\";\r\nimport leftArrow from \"../Components/Images/AutoML/leftarrow.svg\";\r\nimport rightArrow from \"../Components/Images/AutoML/rightarrow.svg\";\r\nimport DatasetProcessing from \"../Pages/AutoML/DatasetProcessing/DatasetProcessing\";\r\nimport LinkColumns from \"../Pages/AutoML/LinkColumns/LinkColumns\";\r\nimport CustomisedDataset from \"../Pages/AutoML/CustomisedDataset/CustomisedDataset\";\r\n\r\nexport default function AutoMLRoutes() {\r\n  return (\r\n    <div>\r\n      <Layout style={{ height: \"100vh\" }}>\r\n        <AutoMLHeader />\r\n        <Layout>\r\n          <AutoMLSideBar />\r\n          <Layout style={{ backgroundColor: \"#F5FAFF\" }}>\r\n            <AutoMLBreadcrumbs />\r\n            <Content className={styles.content}>\r\n              <Route exact path=\"/automl/projects\" component={NewProject} />\r\n              <Route\r\n                exact\r\n                path=\"/automl/projects/newproject\"\r\n                component={CreateNewProject}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/automl/projects/:project_id/models\"\r\n                component={ExistingModels}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/automl/projects/:project_id/models/newmodel\"\r\n                component={CreateNewModel}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/automl/projects/:project_id/models/:model_id/select_datasets\"\r\n                component={SelectDatasets}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/automl/projects/:project_id/models/:model_id/selected_datasets\"\r\n                component={SelectedDatasets}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/automl/projects/:project_id/models/:model_id/dataset_processing\"\r\n                component={DatasetProcessing}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/automl/projects/:project_id/models/:model_id/link_columns\"\r\n                component={LinkColumns}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/automl/projects/:project_id/models/:model_id/customised_dataset/\"\r\n                component={CustomisedDataset}\r\n              />\r\n              <Route exact path=\"/\" component={NewProject} />\r\n\r\n              <div className={styles.leftArrow}>\r\n                <img\r\n                  src={leftArrow}\r\n                  style={{\r\n                    width: \"45px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  alt=\"leftArrow\"\r\n                />\r\n              </div>\r\n              <div className={styles.rightArrow}>\r\n                <img\r\n                  src={rightArrow}\r\n                  style={{ width: \"45px\", cursor: \"pointer\" }}\r\n                  alt=\"rightArrow\"\r\n                />\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n","import \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\nimport AutoMLRoutes from \"./Routes/AutoMLRoutes\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Switch>\n          <AutoMLRoutes />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DatasetProcessing_container__15sDm\",\"column1\":\"DatasetProcessing_column1__3bFsr\",\"titleBold\":\"DatasetProcessing_titleBold__1hFXq\",\"subtitle\":\"DatasetProcessing_subtitle__23iAp\",\"linkcolbutton\":\"DatasetProcessing_linkcolbutton__xl9Lp\",\"column2\":\"DatasetProcessing_column2__1F9Aj\",\"info\":\"DatasetProcessing_info__n7YMN\",\"addcartbutton\":\"DatasetProcessing_addcartbutton__AqydO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SelectDatasets_container__1vSbm\",\"column1\":\"SelectDatasets_column1__1kCbR\",\"titleBold\":\"SelectDatasets_titleBold__1qEp9\",\"subtitle\":\"SelectDatasets_subtitle__kj2Lz\",\"importbutton\":\"SelectDatasets_importbutton__qSjNH\",\"continuebutton\":\"SelectDatasets_continuebutton__3juRC\",\"column2\":\"SelectDatasets_column2__2iIF2\",\"datetitle\":\"SelectDatasets_datetitle__34VyS\",\"dateinput\":\"SelectDatasets_dateinput__3tIyv\",\"addcartbutton\":\"SelectDatasets_addcartbutton__3DktZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SelectedDatasets_container__zPNMY\",\"column1\":\"SelectedDatasets_column1__15KiB\",\"titleBold\":\"SelectedDatasets_titleBold__1XLY_\",\"subtitle\":\"SelectedDatasets_subtitle__1d-SR\",\"linkcolbutton\":\"SelectedDatasets_linkcolbutton__2U_iX\",\"column2\":\"SelectedDatasets_column2__RQugg\",\"info\":\"SelectedDatasets_info__2joR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_name\":\"CreateNewModel_input_name__iaXet\",\"input_desc\":\"CreateNewModel_input_desc__2fhav\",\"btn_cancel\":\"CreateNewModel_btn_cancel__1Go-l\",\"btn_create\":\"CreateNewModel_btn_create__366DQ\",\"label\":\"CreateNewModel_label__td3gM\",\"span\":\"CreateNewModel_span__2sIhQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"AutoMLExistingModelsTable_Container__3v-zd\",\"anchor\":\"AutoMLExistingModelsTable_anchor__187WW\",\"anchor2\":\"AutoMLExistingModelsTable_anchor2__2lfZC\",\"datatable\":\"AutoMLExistingModelsTable_datatable__2mKYY\",\"titlebold\":\"AutoMLExistingModelsTable_titlebold__39YjD\",\"desc\":\"AutoMLExistingModelsTable_desc__1ySUw\",\"selected\":\"AutoMLExistingModelsTable_selected__yZKPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"AutoMLExistingProjectsTable_Container__3t1P2\",\"anchor\":\"AutoMLExistingProjectsTable_anchor__328Wp\",\"anchor2\":\"AutoMLExistingProjectsTable_anchor2__gLweG\",\"datatable\":\"AutoMLExistingProjectsTable_datatable__9sOGN\",\"titlebold\":\"AutoMLExistingProjectsTable_titlebold__3EAaG\",\"desc\":\"AutoMLExistingProjectsTable_desc__239vo\",\"selected\":\"AutoMLExistingProjectsTable_selected__1kOLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_name\":\"CreateNewProject_input_name__LOyGj\",\"input_desc\":\"CreateNewProject_input_desc__1krJA\",\"btn_cancel\":\"CreateNewProject_btn_cancel__1Bp9B\",\"btn_create\":\"CreateNewProject_btn_create__1n-Pg\",\"label\":\"CreateNewProject_label__heypx\",\"span\":\"CreateNewProject_span__2h77b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"AutoMLExistingDatasetsTable_Container__FCh7y\",\"clickRowStyl\":\"AutoMLExistingDatasetsTable_clickRowStyl__1QJNs\",\"datatable\":\"AutoMLExistingDatasetsTable_datatable__3dlhe\",\"titlebold\":\"AutoMLExistingDatasetsTable_titlebold__1rfca\",\"selected\":\"AutoMLExistingDatasetsTable_selected__3ivOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"AutoMLSelectedDatasetsTable_Container__3BT3U\",\"datatable\":\"AutoMLSelectedDatasetsTable_datatable__3juwO\",\"titlebold\":\"AutoMLSelectedDatasetsTable_titlebold__9eh-k\",\"selected\":\"AutoMLSelectedDatasetsTable_selected__3wg4k\"};"],"sourceRoot":""}