{"version":3,"sources":["Components/Header/AutoMLHeader/AutoMLHeader.module.scss","Components/SideBar/AutoMLSideBar/AutoMLSideBar.module.scss","Routes/AutoMLRoutes.module.scss","Components/BreadCrumbs/AutoMLBreadcrumbs/AutoMLBreadcrumbs.js","Components/Header/AutoMLHeader/AutoMLHeader.js","Components/SideBar/AutoMLSideBar/AutoMLSideBar.js","Pages/AutoML/CreateNewModel/CreateNewModel.js","Pages/AutoML/CreateNewProject/CreateNewProject.js","Pages/AutoML/Demo/Demo.js","Components/Button/AutoMLNewModelButton/AutoMLNewModelButton.js","Components/Icons/AutoML/delete.svg","Components/Tables/AutoMLExistingModels/AutoMLExistingModelsTable.js","Pages/AutoML/ExistingModels/ExistingModels.js","Components/Button/AutoMLNewProjectButton/AutoMLNewProjectButton.js","Components/Icons/AutoML/info.svg","Components/Icons/AutoML/download.svg","Components/Icons/AutoML/share.svg","Components/Tables/AutoMLExistingProjects/AutoMLExistingProjectsTable.js","Components/List/AutoMLProjectsModelsList/AutoMLProjectsModelsList.js","Components/Icons/AutoML/edit.svg","Components/Drawers/AutoMLProjectsDrawer/AutoMLProjectsDrawer.js","Components/Images/AutoML/shareAvatar.svg","Components/Icons/AutoML/closeicon.svg","Components/Modals/AutoMLProjectShareModal/AutoMLProjectShareModal.js","Components/Tabs/AutoMLProjectsTypeTabs.js","Pages/AutoML/NewProject/NewProject.js","Components/Tables/AutoMLExistingDatasets/AutoMLExistingDatasetsTable.js","Components/Containers/CompaniesGroup/CompaniesGroup.js","Components/Dropdowns/AutoMLSelectDatasetsDropdown/AutoMLSelectDatasetsDropdown.js","Pages/AutoML/SelectDatasets/SelectDatasets.js","Components/List/SelectedDataList.js","Components/Tables/AutoMLSelectedDatasets/AutoMLSelectedDatasetsTable.js","Pages/AutoML/SelectedDatasets/SelectedDatasets.js","Routes/AutoMLRoutes.js","App.js","reportWebVitals.js","index.js","Pages/AutoML/SelectDatasets/SelectDatasets.module.scss","Pages/AutoML/SelectedDatasets/SelectedDatasets.module.scss","Components/Tables/AutoMLExistingModels/AutoMLExistingModelsTable.module.scss","Pages/AutoML/CreateNewModel/CreateNewModel.module.scss","Components/Tables/AutoMLExistingProjects/AutoMLExistingProjectsTable.module.scss","Pages/AutoML/CreateNewProject/CreateNewProject.module.scss","Components/Tables/AutoMLExistingDatasets/AutoMLExistingDatasetsTable.module.scss","Components/Tables/AutoMLSelectedDatasets/AutoMLSelectedDatasetsTable.module.scss"],"names":["module","exports","AutoMLBreadcrumbs","paths","useLocation","pathname","split","style","marginLeft","marginTop","textAlign","map","item","index","Item","href","AutoMLHeader","Header","Layout","className","styles","Container","header","AutoMLSideBar","Sider","width","sidebar","position","height","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","icon","SettingOutlined","CreateNewModel","props","project_id","useParams","useState","m_name","setm_name","m_desc","setm_desc","fontWeight","fontSize","title","backgroundColor","border","htmlFor","label","placeholder","id","input_name","value","onChange","e","target","span","input_desc","autoSize","minRows","maxRows","btn_cancel","onClick","history","push","state","detail","type","btn_create","page_name","disabled","CreateNewProject","p_name","setp_name","p_desc","setp_desc","marginBottom","showCount","maxLength","test","console","log","Demo","data","x","y","background","color","elements","setElements","padding","borderRadius","nodesDraggable","onLoad","reactFlowInstance","fitView","snapToGrid","onEdgeUpdate","oldEdge","newConnection","els","updateEdge","onConnect","params","edge","stroke","strokeWidth","addEdge","AutoMLNewModelButton","borderColor","createModel","PlusOutlined","AutoMLExistingModelTable","useHistory","key","name","rma","description","status","last_updated","datatable","trs","document","getElementsByTagName","tds","getElementById","list","children","i","length","selected","rowclick","onMouseOver","getElementsByClassName","Hoverover","onMouseLeave","Hovercancel","titlebold","subtitle","author","textDecoration","fontStyle","align","src","deleteIcon","alt","ExistingModels","selected_model","setselected_model","loading","display","flexDirection","lineHeight","flex","overflow","paddingRight","active","marginRight","AutoMLNewProjectButton","createProject","paddingTop","AutoMLExistingProjectsTable","no_of_models","textOverflow","justifyContent","showinfo","infoIcon","cursor","opacity","showModal","downloadIcon","shareIcon","AutoMLProjectsModelsList","paddingLeft","paddingBottom","fontFamily","AutoMLProjectsDrawer","TextArea","Input","setdescription","editable","seteditable","placement","closable","onClose","visible","drawervisible","flexGrow","editIcon","overflowY","letterSpacing","AutoMLProjectShareModal","wrapClassName","isModalVisible","onOk","handleOk","onCancel","handleCancel","footer","bodyStyle","closeIcon","ShareAvatar","margin","AntTabs","withStyles","root","borderBottom","indicator","Tabs","AntTab","theme","textTransform","minWidth","typography","fontWeightRegular","spacing","join","Tab","disableRipple","useStyles","makeStyles","demo1","palette","paper","demo2","AutoMLProjectsTypeTabs","classes","React","setValue","event","newValue","setTab","aria-label","NewProject","TabPane","setdrawervisible","modalvisible","setmodalvisible","tab","settab","val","row","handleOK","AutoMLExistingDatasetsTable","rows","cols","CheckableTag","Tag","CompaniesGroup","selectedTags","tag","checked","this","nextSelectedTags","filter","t","setState","indexOf","handleChange","Component","AutoMLSelectDatasetsDropdown","Option","Select","showSearch","optionFilterProp","onFocus","onBlur","onSearch","size","filterOption","input","option","toLowerCase","SelectDatasets","model_id","setselectedrow","setSector","justify","container","column1","titleBold","defaultActiveKey","importbutton","sector","continuebutton","column2","datetitle","picker","dateinput","addcartbutton","SelectedDataList","CloseCircleOutlined","AutoMLSelectedDatasetsTable","SelectedDatasets","linkcolbutton","info","float","AutoMLRoutes","content","exact","path","component","App","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.9ac3c372.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"AutoMLHeader_Container__3U4hw\",\"header\":\"AutoMLHeader_header__226bv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"AutoMLSideBar_sidebar__3GcR7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"AutoMLRoutes_content__3K_-F\"};","import { Breadcrumb } from \"antd\";\r\nimport React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function AutoMLBreadcrumbs() {\r\n  let location = useLocation();\r\n  let paths = location.pathname.split(\"/\");\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb\r\n        style={{ marginLeft: \"8em\", marginTop: \"10px\", textAlign: \"left\" }}\r\n      >\r\n        {paths\r\n          ? paths.map((item, index) => (\r\n              <Breadcrumb.Item href=\"#\" key={index}>\r\n                {item}\r\n              </Breadcrumb.Item>\r\n            ))\r\n          : null}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./AutoMLHeader.module.scss\";\r\nimport { Layout } from \"antd\";\r\n\r\nexport default function AutoMLHeader() {\r\n  const { Header } = Layout;\r\n\r\n  return (\r\n    <div className={styles.Container}>\r\n      <Header className={styles.header}>\r\n        <div className=\"logo\" />\r\n        <h2>\r\n          Beyond<span> Data</span>\r\n        </h2>\r\n      </Header>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./AutoMLSideBar.module.scss\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { SettingOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function AutoMLSideBar() {\r\n  const { Sider } = Layout;\r\n\r\n  return (\r\n    <Sider\r\n      width={71}\r\n      className={styles.sidebar}\r\n      style={{ position: \"absolute\", height: `100vh` }}\r\n    >\r\n      <Menu\r\n        mode=\"inline\"\r\n        defaultSelectedKeys={[\"1\"]}\r\n        defaultOpenKeys={[\"sub1\"]}\r\n        style={{ height: \"100%\", borderRight: 0 }}\r\n      >\r\n        <Menu.Item key=\"1\" icon={<SettingOutlined />}></Menu.Item>\r\n        <Menu.Item key=\"8\" icon={<SettingOutlined />}></Menu.Item>\r\n        <Menu.Item key=\"12\" icon={<SettingOutlined />}></Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Input } from \"antd\";\r\nimport styles from \"./CreateNewModel.module.scss\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function CreateNewModel(props) {\r\n  let { project_id } = useParams();\r\n  const [m_name, setm_name] = useState(\"\");\r\n  const [m_desc, setm_desc] = useState(\"\");\r\n\r\n  const checkvals = () => {\r\n    props.history.push({\r\n      pathname: `/automl/projects/${project_id}/models/${m_name}/select_datasets/`,\r\n      state: {\r\n        detail: \"I am from New Models page\",\r\n        page_name: \"automl_select_datasets\",\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"left\" }}>\r\n      <h3\r\n        style={{ fontWeight: \"700\", fontSize: \"18px\" }}\r\n        className={styles.title}\r\n      >\r\n        New Model\r\n      </h3>\r\n      <hr\r\n        style={{ backgroundColor: \"#E1EEFF\", border: \"none\", height: \"1px\" }}\r\n      />\r\n      <label htmlFor=\"project_name\" className={styles.label}>\r\n        Model Name\r\n      </label>\r\n      <Input\r\n        placeholder=\"Enter Model Name\"\r\n        id=\"project_name\"\r\n        className={styles.input_name}\r\n        value={m_name}\r\n        onChange={(e) => setm_name(e.target.value)}\r\n      />\r\n      <label htmlFor=\"project_description\" className={styles.label}>\r\n        Model Description <span className={styles.span}>(optional)</span>\r\n      </label>\r\n      <TextArea\r\n        id=\"project_description\"\r\n        className={styles.input_desc}\r\n        placeholder=\"write something about model...\"\r\n        autoSize={{ minRows: 7, maxRows: 10 }}\r\n        value={m_desc}\r\n        onChange={(e) => setm_desc(e.target.value)}\r\n      ></TextArea>\r\n      <div style={{}}>\r\n        <Button\r\n          className={styles.btn_cancel}\r\n          onClick={() => {\r\n            props.history.push({\r\n              pathname: `/automl/projects/${project_id}/models`,\r\n              state: { detail: \"I am from Create New Project page\" },\r\n            });\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          className={styles.btn_create}\r\n          onClick={() => checkvals()}\r\n          disabled={m_name === \"\" ? true : false}\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-useless-escape */\r\nimport React, { useState } from \"react\";\r\nimport { Button, Input } from \"antd\";\r\nimport styles from \"./CreateNewProject.module.scss\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport \"./styles.css\";\r\n\r\nexport default function CreateNewProject(props) {\r\n  const [p_name, setp_name] = useState(\"\");\r\n  const [p_desc, setp_desc] = useState(\"\");\r\n\r\n  const createProject = () => {\r\n    //Api call here to save project\r\n    var format = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\r\n\r\n    if (format.test(p_name)) {\r\n      // let textfield = document.getElementById(\"project_name\");\r\n      // textfield.style.backgroundColor = \"red\";\r\n      console.log(\"Contains\");\r\n    } else {\r\n      console.log(\"Doesnt Contain\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"left\" }} className=\"CreateNewProject\">\r\n      <h3 style={{ fontWeight: \"700\", fontSize: \"18px\" }}>New Project</h3>\r\n      <hr\r\n        style={{\r\n          backgroundColor: \"#E1EEFF\",\r\n          border: \"none\",\r\n          height: \"1px\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      />\r\n      <label htmlFor=\"project_name\" className={styles.label}>\r\n        Project Name\r\n      </label>\r\n      <Input\r\n        placeholder=\"Enter Project Name\"\r\n        id=\"project_name\"\r\n        className={styles.input_name}\r\n        value={p_name}\r\n        onChange={(e) => setp_name(e.target.value)}\r\n      />\r\n      <label htmlFor=\"project_description\" className={styles.label}>\r\n        Project Description <span className={styles.span}>(optional)</span>\r\n      </label>\r\n      <TextArea\r\n        id=\"project_description\"\r\n        className={styles.input_desc}\r\n        placeholder=\"Write something about project...\"\r\n        autoSize={{ minRows: 7, maxRows: 10 }}\r\n        showCount\r\n        maxLength=\"300\"\r\n        value={p_desc}\r\n        onChange={(e) => setp_desc(e.target.value)}\r\n      ></TextArea>\r\n      <div style={{}}>\r\n        <a\r\n          className={styles.btn_cancel}\r\n          onClick={() => {\r\n            props.history.push({\r\n              pathname: \"/automl/projects/\",\r\n              state: { detail: \"I am from Create New Project page\" },\r\n            });\r\n          }}\r\n        >\r\n          Cancel\r\n        </a>\r\n        {/* <Button\r\n          className={styles.btn_cancel}\r\n          onClick={() => {\r\n            props.history.push({\r\n              pathname: \"/automl/projects/\",\r\n              state: { detail: \"I am from Create New Project page\" },\r\n            });\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button> */}\r\n        <Button\r\n          type=\"primary\"\r\n          className={styles.btn_create}\r\n          disabled={p_name === \"\" ? true : false}\r\n          onClick={() => createProject()}\r\n        >\r\n          Create\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport ReactFlow, { Controls, updateEdge, addEdge } from \"react-flow-renderer\";\r\nimport \"./Demo.scss\";\r\n\r\nexport default function Demo() {\r\n  const initialElements = [\r\n    {\r\n      id: \"ffc_1\",\r\n      data: { label: \"Customer_Name\" },\r\n      position: { x: 0, y: 0 },\r\n      style: {\r\n        background: \"#F5FAFF\",\r\n        border: \"none\",\r\n        fontSize: \"12px\",\r\n        color: \"#6D6D6D\",\r\n      },\r\n    },\r\n    {\r\n      id: \"ffc_2\",\r\n      data: { label: \"Customer_id\" },\r\n      position: { x: 150, y: 0 },\r\n      style: {\r\n        background: \"#F5FAFF\",\r\n        border: \"none\",\r\n        fontSize: \"12px\",\r\n        color: \"#6D6D6D\",\r\n      },\r\n    },\r\n    {\r\n      id: \"ffc_3\",\r\n      data: { label: \"Date\" },\r\n      position: { x: 300, y: 0 },\r\n      style: {\r\n        background: \"#F5FAFF\",\r\n        border: \"none\",\r\n        fontSize: \"12px\",\r\n        color: \"#6D6D6D\",\r\n      },\r\n    },\r\n    {\r\n      id: \"abc_1\",\r\n      data: { label: \"Customer_Name\" },\r\n      position: { x: 0, y: 200 },\r\n      style: {\r\n        background: \"#F5FAFF\",\r\n        border: \"none\",\r\n        fontSize: \"12px\",\r\n        color: \"#6D6D6D\",\r\n      },\r\n    },\r\n    {\r\n      id: \"abc_2\",\r\n      data: { label: \"Customer_id\" },\r\n      position: { x: 150, y: 200 },\r\n      style: {\r\n        background: \"#F5FAFF\",\r\n        border: \"none\",\r\n        fontSize: \"12px\",\r\n        color: \"#6D6D6D\",\r\n      },\r\n    },\r\n    {\r\n      id: \"abc_3\",\r\n      data: { label: \"Date\" },\r\n      position: { x: 300, y: 200 },\r\n      style: {\r\n        background: \"#F5FAFF\",\r\n        border: \"none\",\r\n        fontSize: \"12px\",\r\n        color: \"#6D6D6D\",\r\n      },\r\n    },\r\n    {\r\n      id: \"abcd_1\",\r\n      data: { label: \"Customer_Name\" },\r\n      position: { x: 0, y: 400 },\r\n      style: {\r\n        background: \"#F5FAFF\",\r\n        border: \"none\",\r\n        fontSize: \"12px\",\r\n        color: \"#6D6D6D\",\r\n      },\r\n    },\r\n    {\r\n      id: \"abcd_2\",\r\n      data: { label: \"Customer_id\" },\r\n      position: { x: 150, y: 400 },\r\n      style: {\r\n        background: \"#F5FAFF\",\r\n        border: \"none\",\r\n        fontSize: \"12px\",\r\n        color: \"#6D6D6D\",\r\n      },\r\n    },\r\n    {\r\n      id: \"abcd_3\",\r\n      data: { label: \"Date\" },\r\n      position: { x: 300, y: 400 },\r\n      style: {\r\n        background: \"#F5FAFF\",\r\n        border: \"none\",\r\n        fontSize: \"12px\",\r\n        color: \"#6D6D6D\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [elements, setElements] = useState(initialElements);\r\n\r\n  const onLoad = (reactFlowInstance) => reactFlowInstance.fitView();\r\n\r\n  // gets called after end of edge gets dragged to another source or target\r\n  const onEdgeUpdate = (oldEdge, newConnection) =>\r\n    setElements((els) => updateEdge(oldEdge, newConnection, els));\r\n\r\n  const onConnect = (params) => {\r\n    let edge = params;\r\n    edge[\"animated\"] = false;\r\n    edge[\"label\"] = \"Connected\";\r\n    edge[\"style\"] = { stroke: \"blue\", strokeWidth: \"3px\" };\r\n    edge[\"arrowHeadType\"] = \"arrow\";\r\n    // edge[\"type\"] = \"step\";\r\n    console.log(edge);\r\n    setElements((els) => addEdge(edge, els));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\"ReactFlowContainer\"}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"70%\",\r\n          border: \"1px solid grey\",\r\n          padding: \"0px\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        <ReactFlow\r\n          nodesDraggable={false}\r\n          elements={elements}\r\n          onLoad={onLoad}\r\n          snapToGrid\r\n          onEdgeUpdate={onEdgeUpdate}\r\n          onConnect={onConnect}\r\n        >\r\n          <Controls />\r\n        </ReactFlow>\r\n      </div>\r\n      <br></br>\r\n      <Button onClick={() => console.log(elements)}>Download</Button>\r\n    </>\r\n  );\r\n}\r\n","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport default function AutoMLNewModelButton(props) {\r\n  return (\r\n    <div>\r\n      <Button\r\n        style={{\r\n          width: \"62px\",\r\n          height: \"46px\",\r\n          borderColor: \"grey\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n        onClick={() => props.createModel()}\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined style={{ fontSize: \"30px\", color: \"grey\" }} />}\r\n      ></Button>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/delete.f7e1d5fc.svg\";","/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Table, Space, Empty, Button, Tag } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport styles from \"./AutoMLExistingModelsTable.module.scss\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport deleteIcon from \"../../Icons/AutoML/delete.svg\";\r\n\r\nexport default function AutoMLExistingModelTable(props) {\r\n  let history = useHistory();\r\n  let { project_id } = useParams();\r\n\r\n  // var tds = document.getElementsByTagName(\"td\");\r\n  // for (var i = 0; i < tds.length; i++) {\r\n  //   tds[i].onmouseover = function () {\r\n  //     this.parentNode.style.background = \"#ff0000\";\r\n  //   };\r\n  //   tds[i].onmouseout = function () {\r\n  //     this.parentNode.style.backgroundColor = \"#fff\";\r\n  //   };\r\n  // }\r\n\r\n  const data = [\r\n    {\r\n      key: \"1\",\r\n      name: \"Stock Prediction\",\r\n      rma: 12,\r\n      description: \"I am a Model\",\r\n      status: \"New\",\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      name: \"Stock Prediction\",\r\n      rma: 12,\r\n      description: \"I am a Model\",\r\n      status: \"Updated\",\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      name: \"Stock Prediction\",\r\n      rma: 12,\r\n      description: \"I am a Model\",\r\n      status: \"Update Available\",\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n    },\r\n    {\r\n      key: \"4\",\r\n      name: \"Stock Prediction\",\r\n      rma: 12,\r\n      description: \"I am a Model\",\r\n      status: \"New\",\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n    },\r\n    {\r\n      key: \"5\",\r\n      name: \"Stock Prediction\",\r\n      rma: 12,\r\n      description: \"I am a Model\",\r\n      status: \"New\",\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n    },\r\n  ];\r\n\r\n  const rowclick = (id) => {\r\n    let trs = document.getElementsByTagName(\"tr\");\r\n    for (var x of trs) {\r\n      x.style.backgroundColor = \"#f5faff\";\r\n      // var css = \"tbody tr:hover { background: red;}\";\r\n      // var s = document.createElement(\"style\");\r\n\r\n      // if (s.styleSheet) {\r\n      //   s.styleSheet.cssText = css;\r\n      // } else {\r\n      //   s.appendChild(document.createTextNode(css));\r\n      // }\r\n      // x.appendChild(s);\r\n      x.className = \"\";\r\n    }\r\n    let tds = document.getElementsByTagName(\"td\");\r\n    for (var y of tds) {\r\n      y.style.fontWeight = \"normal\";\r\n    }\r\n    document.getElementById(id).className = \"selected\";\r\n    document.getElementById(id).style.backgroundColor = \"#b8d7f5\";\r\n    let list = document.getElementById(id).children;\r\n    for (var i = 0; i < list.length; i++) {\r\n      list[i].style.fontWeight = \"700\";\r\n    }\r\n    props.selected(id);\r\n  };\r\n\r\n  const Hoverover = (index) => {\r\n    // console.log(document.getElementById(index));\r\n    if (document.getElementsByClassName(\"selected\")[0]) {\r\n      if (document.getElementsByClassName(\"selected\")[0].id !== index) {\r\n        document.getElementById(index).style.backgroundColor = \"#a0cfff\";\r\n      }\r\n    }\r\n  };\r\n  const Hovercancel = (index) => {\r\n    // console.log(document.getElementById(index));\r\n    if (document.getElementsByClassName(\"selected\")[0]) {\r\n      if (document.getElementsByClassName(\"selected\")[0].id !== index) {\r\n        document.getElementById(index).style.backgroundColor = \"#f5faff\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const getrows = () => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <tr\r\n          id={item.key}\r\n          key={index}\r\n          onClick={() => {\r\n            rowclick(item.key);\r\n            // props.selected(item.key);\r\n          }}\r\n          onMouseOver={() => Hoverover(item.key)}\r\n          onMouseLeave={() => Hovercancel(item.key)}\r\n        >\r\n          <td>\r\n            <p className={styles.titlebold}>{item.name}</p>\r\n            <span className={styles.subtitle}>\r\n              Created by:{\" \"}\r\n              <span\r\n                className={styles.author}\r\n                style={{\r\n                  backgroundColor: \"#B8F2FF\",\r\n                  color: \"#38B7D3\",\r\n                  fontWeight: \"normal\",\r\n                  borderRadius: \"50%\",\r\n                  height: \"15px\",\r\n                  width: \"14px\",\r\n                }}\r\n              >\r\n                JD\r\n              </span>\r\n            </span>\r\n          </td>\r\n          <td className={styles.description}> {item.description} </td>\r\n          <td className={styles.status}>\r\n            {\" \"}\r\n            <Tag\r\n              color={\r\n                item.status === \"New\"\r\n                  ? \"blue\"\r\n                  : item.status === \"Updated\"\r\n                  ? \"gold\"\r\n                  : \"green\"\r\n              }\r\n            >\r\n              {item.status}\r\n            </Tag>{\" \"}\r\n          </td>\r\n          <td className={styles.rma}> {item.rma} </td>\r\n          <td className={styles.last_updated}>\r\n            <p className={styles.titlebold}>{item.last_updated}</p>\r\n            <span className={styles.subtitle}>\r\n              Created by:{\" \"}\r\n              <span\r\n                className={styles.author}\r\n                style={{\r\n                  backgroundColor: \"#FFE4EC\",\r\n                  color: \"#F087A3\",\r\n                  fontWeight: \"normal\",\r\n                  borderRadius: \"50%\",\r\n                  height: \"15px\",\r\n                  width: \"14px\",\r\n                }}\r\n              >\r\n                JD\r\n              </span>\r\n            </span>\r\n          </td>\r\n          <td>\r\n            <a\r\n              style={{\r\n                textDecoration: \" none\",\r\n                fontStyle: \"normal\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"14px\",\r\n                color: \"#6d6d6d\",\r\n              }}\r\n            >\r\n              <Space align=\"center\">\r\n                <img src={deleteIcon} alt=\"delete icon\"></img>\r\n                <span style={{ fontWeight: \"400\", fontSize: \"12px\" }}>\r\n                  Delete\r\n                </span>\r\n              </Space>\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Container}>\r\n      {data ? (\r\n        <table className={styles.datatable}>\r\n          <thead>\r\n            <tr>\r\n              <th> </th>\r\n              <th>Description</th>\r\n              <th>Status</th>\r\n              <th>RMA</th>\r\n              <th>Last Updated</th>\r\n              <th> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{getrows()}</tbody>\r\n        </table>\r\n      ) : (\r\n        <Empty />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Skeleton } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport AutoMLNewModelButton from \"../../../Components/Button/AutoMLNewModelButton/AutoMLNewModelButton\";\r\nimport AutoMLExistingModelsTable from \"../../../Components/Tables/AutoMLExistingModels/AutoMLExistingModelsTable\";\r\n\r\nexport default function ExistingModels(props) {\r\n  const { project_id } = useParams();\r\n  const [selected_model, setselected_model] = useState(null);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const createModel = () => {\r\n    props.history.push({\r\n      pathname: `/automl/projects/${project_id}/models/newmodel`,\r\n      state: { detail: \"I am from Models page\" },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: \"left\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          fontStyle: \"normal\",\r\n          fontWeight: \"normal\",\r\n          fontSize: \"12px\",\r\n          lineHeight: \"13px\",\r\n          color: \"#085FAB\",\r\n        }}\r\n      >\r\n        {project_id}\r\n      </div>\r\n      <h3 style={{ fontWeight: \"700\", marginTop: \"2px\", fontSize: \"18px\" }}>\r\n        New Model\r\n      </h3>\r\n      <hr\r\n        style={{\r\n          backgroundColor: \"#E1EEFF\",\r\n          marginTop: \"0px\",\r\n          marginBottom: \"20px\",\r\n          border: \"none\",\r\n          height: \"1px\",\r\n        }}\r\n      />\r\n      <AutoMLNewModelButton createModel={() => createModel()} />\r\n      <h3\r\n        style={{\r\n          display: \"inline-block\",\r\n          fontWeight: \"600\",\r\n          fontSize: \"18px\",\r\n          marginTop: \"20px\",\r\n          width: \"20%\",\r\n        }}\r\n      >\r\n        Models\r\n      </h3>\r\n\r\n      <hr\r\n        style={{\r\n          backgroundColor: \"#E1EEFF\",\r\n          marginTop: \"2px\",\r\n          border: \"none\",\r\n          height: \"1px\",\r\n          marginBottom: \"0px\",\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          flex: \"1\",\r\n          overflow: \"scroll\",\r\n          paddingRight: \"10px\",\r\n        }}\r\n      >\r\n        {loading === true ? (\r\n          <Skeleton active loading={loading} />\r\n        ) : (\r\n          <AutoMLExistingModelsTable selected={(id) => setselected_model(id)} />\r\n        )}\r\n      </div>\r\n      <hr\r\n        style={{\r\n          backgroundColor: \"#E1EEFF\",\r\n          border: \"none\",\r\n          height: \"1px\",\r\n          marginTop: \"0px\",\r\n        }}\r\n      />\r\n      {loading === true ? null : (\r\n        <div>\r\n          <Button\r\n            style={{\r\n              borderRadius: \"64px\",\r\n              marginRight: \"10px\",\r\n              width: \"161px\",\r\n              height: \"40px\",\r\n              color: selected_model === null ? \"grey\" : \"#085FAB\",\r\n              borderColor: selected_model === null ? \"grey\" : \"#085FAB\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"16px\",\r\n            }}\r\n            disabled={selected_model === null ? true : false}\r\n            onClick={() => {\r\n              console.log(selected_model);\r\n            }}\r\n          >\r\n            Predict\r\n          </Button>\r\n          <Button\r\n            style={{\r\n              borderRadius: \"64px\",\r\n              marginRight: \"10px\",\r\n              width: \"161px\",\r\n              height: \"40px\",\r\n              color: selected_model === null ? \"grey\" : \"#085FAB\",\r\n              borderColor: selected_model === null ? \"grey\" : \"#085FAB\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"16px\",\r\n            }}\r\n            disabled={selected_model === null ? true : false}\r\n          >\r\n            Retrain Model\r\n          </Button>\r\n          <Button\r\n            style={{\r\n              borderRadius: \"64px\",\r\n              marginRight: \"10px\",\r\n              width: \"161px\",\r\n              height: \"40px\",\r\n              color: selected_model === null ? \"grey\" : \"#085FAB\",\r\n              borderColor: selected_model === null ? \"grey\" : \"#085FAB\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"16px\",\r\n            }}\r\n            disabled={selected_model === null ? true : false}\r\n          >\r\n            Modify Model\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport default function AutoMLNewProjectButton(props) {\r\n  return (\r\n    <div>\r\n      <Button\r\n        style={{\r\n          width: \"62px\",\r\n          height: \"46px\",\r\n          borderColor: \"#085FAB\",\r\n          borderRadius: \"10px\",\r\n          // backgroundImage:\r\n          //   \"url(data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='%23333' stroke-width='4' stroke-dasharray='6%2c 14' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e)\",\r\n        }}\r\n        onClick={() => props.createProject()}\r\n        type=\"dashed\"\r\n        icon={\r\n          <PlusOutlined\r\n            style={{\r\n              fontSize: \"30px\",\r\n              fontWeight: \"700\",\r\n              color: \"#085FAB\",\r\n              paddingTop: \"5px\",\r\n            }}\r\n          />\r\n        }\r\n      ></Button>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/info.0879e1b1.svg\";","export default __webpack_public_path__ + \"static/media/download.49cc4d7c.svg\";","export default __webpack_public_path__ + \"static/media/share.bfabba03.svg\";","/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Space, Empty } from \"antd\";\r\nimport styles from \"./AutoMLExistingProjectsTable.module.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport deleteIcon from \"../../Icons/AutoML/delete.svg\";\r\nimport infoIcon from \"../../Icons/AutoML/info.svg\";\r\nimport downloadIcon from \"../../Icons/AutoML/download.svg\";\r\nimport shareIcon from \"../../Icons/AutoML/share.svg\";\r\n\r\nexport default function AutoMLExistingProjectsTable(props) {\r\n  let history = useHistory();\r\n\r\n  const data = [\r\n    {\r\n      key: \"1\",\r\n      name: \"Trade Prediction\",\r\n      no_of_models: 12,\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n      description:\r\n        \"I am a new project,I am a new project,I am a new ,I am a new project,I am a new projectI am a new project,,I am a new project,\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      name: \"Trade Prediction\",\r\n      no_of_models: 12,\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n      description: \"I am a new project\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      name: \"Trade Prediction\",\r\n      no_of_models: 12,\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n      description: \"I am a new project\",\r\n    },\r\n    {\r\n      key: \"4\",\r\n      name: \"Trade Prediction\",\r\n      no_of_models: 12,\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n      description: \"I am a new project\",\r\n    },\r\n    {\r\n      key: \"5\",\r\n      name: \"Trade Prediction\",\r\n      no_of_models: 12,\r\n      last_updated: \"Monday 21 Dec, 2020\",\r\n      description: \"I am a new project\",\r\n    },\r\n  ];\r\n\r\n  const getrows = () => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <tr id={item.key} key={index}>\r\n          <td>\r\n            <a\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: \"#38B7D3\",\r\n              }}\r\n              onClick={() => {\r\n                history.push({\r\n                  pathname: `/automl/projects/${item.name}/models`,\r\n                  state: { detail: `I am ${item.name}` },\r\n                });\r\n              }}\r\n            >\r\n              <p className={styles.titlebold}>{item.name}</p>\r\n            </a>\r\n            <span className={styles.subtitle}>\r\n              Created by:{\" \"}\r\n              <span\r\n                className={styles.author}\r\n                style={{\r\n                  backgroundColor: \"#B8F2FF\",\r\n                  color: \"#38B7D3\",\r\n                  fontWeight: \"normal\",\r\n                  borderRadius: \"50%\",\r\n                  border: \"1px solid #38B7D3\",\r\n                  height: \"25px\",\r\n                  fontSize: \"10px\",\r\n                  padding: \"3px\",\r\n                }}\r\n              >\r\n                JD\r\n              </span>\r\n            </span>\r\n          </td>\r\n          <td\r\n            className={styles.description}\r\n            style={{\r\n              overflow: \"hidden\",\r\n              textOverflow: \"ellipsis\",\r\n              paddingRight: \"70px\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {item.description}{\" \"}\r\n          </td>\r\n          {/* <td className={styles.status}> {item.no_of_models} </td> */}\r\n          <td className={styles.last_updated}>\r\n            <p className={styles.titlebold}>{item.last_updated}</p>\r\n          </td>\r\n          <td>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                marginRight: \"20px\",\r\n              }}\r\n            >\r\n              <a\r\n                style={{\r\n                  textDecoration: \" none\",\r\n                  fontStyle: \"normal\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"14px\",\r\n                  color: \"#6d6d6d\",\r\n                }}\r\n                onClick={() => props.showinfo(item.key)}\r\n              >\r\n                <img\r\n                  src={infoIcon}\r\n                  alt=\"delete icon\"\r\n                  style={{ width: \"16px\" }}\r\n                ></img>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"700\",\r\n                    fontSize: \"12px\",\r\n                    marginLeft: \"4px\",\r\n                  }}\r\n                >\r\n                  Info\r\n                </span>\r\n              </a>\r\n              <a\r\n                style={\r\n                  props.type === \"downloaded_projects\"\r\n                    ? {\r\n                        textDecoration: \" none\",\r\n\r\n                        fontStyle: \"normal\",\r\n                        cursor: \"not-allowed\",\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"14px\",\r\n                        color: \"grey\",\r\n                        opacity: \"0.4\",\r\n                      }\r\n                    : {\r\n                        textDecoration: \" none\",\r\n                        fontStyle: \"normal\",\r\n\r\n                        fontWeight: \"bold\",\r\n                        fontSize: \"14px\",\r\n                        color: \"#6d6d6d\",\r\n                      }\r\n                }\r\n                onClick={() => props.showModal(item.key)}\r\n              >\r\n                <img\r\n                  src={\r\n                    props.type === \"global_projects\" ? downloadIcon : shareIcon\r\n                  }\r\n                  alt=\"delete icon\"\r\n                  style={{ width: \"16px\" }}\r\n                ></img>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"700\",\r\n                    fontSize: \"12px\",\r\n                    marginLeft: \"4px\",\r\n                  }}\r\n                >\r\n                  {props.type === \"global_projects\" ? \"Download\" : \"Share\"}\r\n                </span>\r\n              </a>\r\n              <a\r\n                style={{\r\n                  textDecoration: \" none\",\r\n                  fontStyle: \"normal\",\r\n\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"14px\",\r\n                  color: \"#6d6d6d\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={deleteIcon}\r\n                  alt=\"delete icon\"\r\n                  style={{ width: \"16px\" }}\r\n                ></img>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"700\",\r\n                    fontSize: \"12px\",\r\n                    marginLeft: \"4px\",\r\n                  }}\r\n                >\r\n                  Delete\r\n                </span>\r\n              </a>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Container}>\r\n      {data ? (\r\n        <table className={styles.datatable}>\r\n          <thead>\r\n            <tr>\r\n              <th> </th>\r\n              <th>Description</th>\r\n              <th>Last Updated</th>\r\n              <th> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{getrows()}</tbody>\r\n        </table>\r\n      ) : (\r\n        <Empty />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function AutoMLProjectsModelsList(props) {\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          paddingLeft: \"18px\",\r\n          paddingTop: \"0px\",\r\n          paddingBottom: \"0px\",\r\n          marginRight: \"15px\",\r\n        }}\r\n      >\r\n        <p style={{ width: \"40%\", marginBottom: \"0px\" }}></p>\r\n        <p\r\n          style={{\r\n            width: \"30%\",\r\n            fontFamily: \"Lato\",\r\n            fontSize: \"14px\",\r\n            marginBottom: \"0px\",\r\n          }}\r\n        >\r\n          Model Type\r\n        </p>\r\n        <p\r\n          style={{\r\n            width: \"30%\",\r\n            fontFamily: \"Lato\",\r\n            fontSize: \"14px\",\r\n            marginBottom: \"0px\",\r\n          }}\r\n        >\r\n          Last Updated\r\n        </p>\r\n      </div>\r\n      {props.data.map((item, index) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              background: \"#F5FAFF\",\r\n              borderRadius: \"8px\",\r\n              padding: \"13px\",\r\n              paddingLeft: \"18px\",\r\n              marginBottom: \"10px\",\r\n              height: \"50px\",\r\n            }}\r\n          >\r\n            <p\r\n              style={{\r\n                width: \"40%\",\r\n                fontFamily: \"Lato\",\r\n                fontWeight: \"700\",\r\n                fontSize: \"14px\",\r\n                color: \"#707070\",\r\n              }}\r\n            >\r\n              {item.name}\r\n            </p>\r\n            <p\r\n              style={{\r\n                width: \"30%\",\r\n                fontFamily: \"Lato\",\r\n                fontWeight: \"500\",\r\n                fontSize: \"13px\",\r\n                color: \"#707070\",\r\n              }}\r\n            >\r\n              {item.type}\r\n            </p>\r\n            <p\r\n              style={{\r\n                width: \"30%\",\r\n                fontFamily: \"Lato\",\r\n                fontWeight: \"500\",\r\n                fontSize: \"13px\",\r\n                color: \"#707070\",\r\n              }}\r\n            >\r\n              {item.last_updated}\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/edit.1d3c5cb7.svg\";","/* eslint-disable no-unused-vars */\r\nimport { Button, Drawer } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport \"./AutoMLProjectsDrawer.css\";\r\nimport { Input } from \"antd\";\r\nimport AutoMLProjectsModelsList from \"../../List/AutoMLProjectsModelsList/AutoMLProjectsModelsList\";\r\nimport editIcon from \"../../Icons/AutoML/edit.svg\";\r\n\r\nexport default function AutoMLProjectsDrawer(props) {\r\n  const { TextArea } = Input;\r\n  const [description, setdescription] = useState(\r\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed doeiusmod tempor incididunt ut labore Lorem ipsum dolor sit amet,consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore Lorem ipsum dolor sit amet, consectetur adipiscing elit, seddo eiusmod tempor incididunt ut l abore.\"\r\n  );\r\n  const [title, settitle] = useState(\"Stock Prediction\");\r\n  const [editable, seteditable] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      id=\"AutoMLProjectsDrawer\"\r\n      // style={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\" }}\r\n    >\r\n      <Drawer\r\n        className=\"drawer\"\r\n        placement=\"right\"\r\n        closable={false}\r\n        width={\"39%\"}\r\n        onClose={() => {\r\n          seteditable(false);\r\n          props.onClose();\r\n        }}\r\n        visible={props.drawervisible}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            fontFamily: \"Lato\",\r\n            marginTop: \"30px\",\r\n            height: \"30px\",\r\n          }}\r\n        >\r\n          {editable === false ? (\r\n            <h2\r\n              style={{\r\n                flexGrow: \"1\",\r\n                fontSize: \"20px\",\r\n                fontWeight: \"bold\",\r\n                lineHeight: \"24px\",\r\n                fontFamily: \"Lato\",\r\n              }}\r\n            >\r\n              {title}\r\n            </h2>\r\n          ) : (\r\n            <div style={{ flexGrow: \"1\" }}>\r\n              <Input\r\n                value={title}\r\n                style={{\r\n                  height: \"30px\",\r\n                  fontSize: \"20px\",\r\n                  fontWeight: \"bold\",\r\n                  lineHeight: \"24px\",\r\n                  fontFamily: \"Lato\",\r\n                  width: \"50%\",\r\n                  // borderRadius: \"10px\",\r\n                  // padding: \"10px\",\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => seteditable(!editable)}\r\n          >\r\n            <img\r\n              src={editIcon}\r\n              alt=\"edit icon\"\r\n              style={{ width: \"16px\", marginBottom: \"2px\" }}\r\n            ></img>\r\n            <span\r\n              style={{\r\n                fontWeight: \"700\",\r\n                fontSize: \"14px\",\r\n                marginLeft: \"4px\",\r\n                color: \"#6D6D6D\",\r\n                fontFamily: \"Lato\",\r\n              }}\r\n            >\r\n              {editable === true ? \"Save\" : \" Edit\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ fontFamily: \"Lato\", fontSize: \"12px\", color: \"#6D6D6D\" }}>\r\n          Created by:{\" \"}\r\n          <span style={{ color: \"#085FAB\", fontWeight: \"700\" }}>-Author-</span>\r\n        </div>\r\n        <div\r\n          style={{\r\n            fontWeight: \"700\",\r\n            fontFamily: \"Lato\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"30px\",\r\n          }}\r\n        >\r\n          Project Description\r\n        </div>\r\n        <div style={{ marginTop: \"15px\", height: \"100px\" }}>\r\n          <p\r\n            style={\r\n              editable === false\r\n                ? { fontFamily: \"Lato\", fontSize: \"14px\", color: \"#6D6D6D\" }\r\n                : { display: \"none\" }\r\n            }\r\n          >\r\n            {description}\r\n          </p>\r\n          <TextArea\r\n            style={\r\n              editable === true\r\n                ? { fontFamily: \"Lato\", fontSize: \"14px\", color: \"#6D6D6D\" }\r\n                : { display: \"none\" }\r\n            }\r\n            value={description}\r\n            onChange={(e) => setdescription(e.target.value)}\r\n            placeholder=\"Controlled autosize\"\r\n            autoSize={{ minRows: 3, maxRows: 5 }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <div\r\n            style={{\r\n              fontWeight: \"700\",\r\n              fontFamily: \"Lato\",\r\n              fontSize: \"14px\",\r\n              marginTop: \"30px\",\r\n            }}\r\n          >\r\n            Models\r\n          </div>\r\n          <div style={{ height: \"40vh\", overflowY: \"scroll\" }}>\r\n            <AutoMLProjectsModelsList\r\n              data={[\r\n                {\r\n                  id: \"1\",\r\n                  name: \"Price Prediction Model\",\r\n                  type: \"Classification\",\r\n                  last_updated: \"21 Dec, 2020\",\r\n                },\r\n                {\r\n                  id: \"2\",\r\n                  name: \"Price Prediction Model\",\r\n                  type: \"Classification\",\r\n                  last_updated: \"21 Dec, 2020\",\r\n                },\r\n                {\r\n                  id: \"3\",\r\n                  name: \"Price Prediction Model\",\r\n                  type: \"Classification\",\r\n                  last_updated: \"21 Dec, 2020\",\r\n                },\r\n                {\r\n                  id: \"4\",\r\n                  name: \"Price Prediction Model\",\r\n                  type: \"Classification\",\r\n                  last_updated: \"21 Dec, 2020\",\r\n                },\r\n                {\r\n                  id: \"5\",\r\n                  name: \"Price Prediction Model\",\r\n                  type: \"Classification\",\r\n                  last_updated: \"21 Dec, 2020\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Button\r\n          style={{\r\n            width: \"140px\",\r\n            height: \"40px\",\r\n            background: \"#085FAB\",\r\n            borderRadius: \"64px\",\r\n            fontFamily: \"Lato\",\r\n            fontSize: \"16px\",\r\n            fontWeight: \"700\",\r\n            color: \"white\",\r\n            letterSpacing: \"0.5px\",\r\n            marginTop: \"20px\",\r\n            border: \"none\",\r\n            paddingBottom: \"5px\",\r\n          }}\r\n        >\r\n          Proceed\r\n        </Button>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/shareAvatar.102513e1.svg\";","export default __webpack_public_path__ + \"static/media/closeicon.753293d6.svg\";","/* eslint-disable jsx-a11y/alt-text */\r\nimport React from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport ShareAvatar from \"../../Images/AutoML/shareAvatar.svg\";\r\nimport \"./AutoMLProjectShareModal.css\";\r\nimport closeIcon from \"../../Icons/AutoML/closeicon.svg\";\r\n\r\nexport default function AutoMLProjectShareModal(props) {\r\n  return (\r\n    <div className=\"AutoMLProjectShareModal\">\r\n      <Modal\r\n        width={332}\r\n        wrapClassName=\"ProjectsModal\"\r\n        visible={props.isModalVisible}\r\n        onOk={props.handleOk}\r\n        onCancel={props.handleCancel}\r\n        footer={false}\r\n        closable={false}\r\n        bodyStyle={{ borderRadius: \"20px\" }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: \"50px\",\r\n            background: \"#EFF4F9\",\r\n            borderRadius: \"20px 20px 0px 0px\",\r\n          }}\r\n        >\r\n          <div style={{ display: \"flex\", padding: \"12px\", marginLeft: \"35px\" }}>\r\n            <h2\r\n              style={{\r\n                flexGrow: \"1\",\r\n                fontWeight: \"500\",\r\n                color: \"#90A8BE\",\r\n                fontSize: \"18px\",\r\n                fontStyle: \"Lato\",\r\n              }}\r\n            >\r\n              Are you Sure?\r\n            </h2>\r\n            <img\r\n              onClick={props.handleCancel}\r\n              src={closeIcon}\r\n              style={{\r\n                paddingBottom: \"10px\",\r\n                paddingRight: \"15px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            marginTop: \"30px\",\r\n            flexDirection: \"column\",\r\n            textAlign: \"center\",\r\n            paddingBottom: \"19px\",\r\n          }}\r\n        >\r\n          <img\r\n            src={ShareAvatar}\r\n            style={{\r\n              width: \"73px\",\r\n              height: \"107px\",\r\n              display: \"block\",\r\n              margin: \"auto\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          />\r\n          <h2\r\n            style={{ fontFamily: \"Lato\", fontWeight: \"bold\", fontSize: \"18px\" }}\r\n          >\r\n            Make Global Public?\r\n          </h2>\r\n          <p\r\n            style={{\r\n              padding: \"25px\",\r\n              paddingTop: \"10px\",\r\n              fontFamily: \"Lato\",\r\n              fontSize: \"13px\",\r\n              fontStyle: \"normal\",\r\n              color: \"#A1A1A1\",\r\n            }}\r\n          >\r\n            Making this project ‘Global Public’ would in turn make all the\r\n            models inside this project, Public as well. Are you sure you want to\r\n            proceed?\r\n          </p>\r\n          <hr\r\n            style={{\r\n              backgroundColor: \"#E2E9EF\",\r\n              border: \"none\",\r\n              height: \"1px\",\r\n              marginBottom: \"20px\",\r\n              width: \"100%\",\r\n            }}\r\n          />\r\n          <div style={{ marginBottom: \"19px\" }}>\r\n            <Button\r\n              style={{\r\n                width: \"120px\",\r\n                height: \"35px\",\r\n                backgroundColor: \"white\",\r\n                fontFamily: \"Lato\",\r\n                fontSize: \"16px\",\r\n                fontWeight: \"700\",\r\n                color: \"#085FAB\",\r\n                border: \"none\",\r\n                borderRadius: \"65px\",\r\n              }}\r\n              onClick={props.handleCancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              style={{\r\n                width: \"130px\",\r\n                height: \"35px\",\r\n                backgroundColor: \"#085FAB\",\r\n                fontFamily: \"Lato\",\r\n                fontSize: \"14px\",\r\n                fontWeight: \"normal\",\r\n                letterSpacing: \"0.5px\",\r\n                color: \"white\",\r\n                border: \"none\",\r\n                borderRadius: \"65px\",\r\n                borderColor: \"none\",\r\n              }}\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst AntTabs = withStyles({\r\n  root: {\r\n    borderBottom: \"1px solid #e8e8e8\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"#085FAB\",\r\n  },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    minWidth: 72,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginRight: theme.spacing(4),\r\n    letterSpacing: \"0px\",\r\n    fontSize: \"14px\",\r\n    paddingBottom: \"0px\",\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:hover\": {\r\n      color: \"grey\",\r\n      opacity: 1,\r\n    },\r\n    \"&$selected\": {\r\n      color: \"black\",\r\n      fontWeight: \"700\",\r\n      fontFamily: \"Lato\",\r\n    },\r\n    \"&:focus\": {\r\n      color: \"black\",\r\n    },\r\n  },\r\n  selected: {},\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"60px\",\r\n  },\r\n  padding: {\r\n    padding: \"5px\",\r\n  },\r\n  demo1: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  demo2: {\r\n    backgroundColor: \"#2e1534\",\r\n  },\r\n}));\r\n\r\nexport default function AutoMLProjectsTypeTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n\r\n    switch (newValue) {\r\n      case 0:\r\n        props.setTab(\"my_projects\");\r\n        break;\r\n      case 1:\r\n        props.setTab(\"downloaded_projects\");\r\n        break;\r\n      case 2:\r\n        props.setTab(\"global_projects\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.demo1}>\r\n        <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\r\n          <AntTab label=\"My Projects\" />\r\n          <AntTab label=\"Downloaded Projects\" />\r\n          <AntTab label=\"Global Projects\" />\r\n        </AntTabs>\r\n      </div>\r\n      {/* <div className={classes.demo2}>\r\n        <StyledTabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"styled tabs example\"\r\n        >\r\n          <StyledTab label=\"Workflows\" />\r\n          <StyledTab label=\"Datasets\" />\r\n          <StyledTab label=\"Connections\" />\r\n        </StyledTabs>\r\n        <Typography className={classes.padding} />\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { Drawer, Skeleton } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport AutoMLNewProjectButton from \"../../../Components/Button/AutoMLNewProjectButton/AutoMLNewProjectButton\";\r\nimport AutoMLExistingProjectsTable from \"../../../Components/Tables/AutoMLExistingProjects/AutoMLExistingProjectsTable\";\r\nimport { Tabs } from \"antd\";\r\nimport AutoMLProjectsDrawer from \"../../../Components/Drawers/AutoMLProjectsDrawer/AutoMLProjectsDrawer\";\r\nimport \"./NewProject.css\";\r\nimport AutoMLProjectShareModal from \"../../../Components/Modals/AutoMLProjectShareModal/AutoMLProjectShareModal\";\r\nimport AutoMLProjectsTypeTabs from \"../../../Components/Tabs/AutoMLProjectsTypeTabs.js\";\r\n\r\nexport default function NewProject(props) {\r\n  const { TabPane } = Tabs;\r\n\r\n  const [loading, setloading] = useState(false);\r\n  const [drawervisible, setdrawervisible] = useState(false);\r\n  const [modalvisible, setmodalvisible] = useState(false);\r\n  const [tab, settab] = useState(\"my_projects\");\r\n\r\n  const createProject = () => {\r\n    props.history.push({\r\n      pathname: \"/automl/projects/newproject/\",\r\n      state: {\r\n        detail: \"I am from Projects page\",\r\n        page_name: \"automl_newproject\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const callback = (id) => {\r\n    settab(id);\r\n  };\r\n\r\n  const showinfo = (row) => {\r\n    console.log(row);\r\n    setdrawervisible(true);\r\n  };\r\n  const onClose = () => {\r\n    setdrawervisible(false);\r\n  };\r\n\r\n  const showModal = (row) => {\r\n    setmodalvisible(true);\r\n  };\r\n\r\n  const handleModalOk = () => {\r\n    setmodalvisible(false);\r\n  };\r\n\r\n  const handleModalCancel = () => {\r\n    setmodalvisible(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"NewProject\"\r\n      style={{\r\n        textAlign: \"left\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <h3\r\n        style={{\r\n          fontWeight: \"700\",\r\n          marginBottom: \"0px\",\r\n          marginTop: \"11px\",\r\n          fontSize: \"18px\",\r\n        }}\r\n      >\r\n        New Project\r\n      </h3>\r\n      <hr\r\n        style={{\r\n          backgroundColor: \"#E1EEFF\",\r\n          border: \"none\",\r\n          height: \"1px\",\r\n          marginBottom: \"20px\",\r\n          width: \"100%\",\r\n        }}\r\n      />\r\n      <AutoMLNewProjectButton createProject={() => createProject()} />\r\n      {/* <h3 style={{ fontWeight: \"700\", marginTop: \"20px\", fontSize: \"18px\" }}>\r\n        Projects\r\n      </h3> */}\r\n      {/* <Tabs\r\n        defaultActiveKey=\"my_projects\"\r\n        onChange={callback}\r\n        style={{ marginTop: \"15px\", color: \"grey\" }}\r\n      >\r\n        <TabPane tab=\"My Projects\" key=\"my_projects\"></TabPane>\r\n        <TabPane tab=\"Downloaded Projects\" key=\"downloaded_projects\"></TabPane>\r\n        <TabPane tab=\"Global Projects\" key=\"global_projects\"></TabPane>\r\n      </Tabs> */}\r\n      <AutoMLProjectsTypeTabs setTab={(val) => settab(val)} />\r\n      <div\r\n        style={{\r\n          flex: \"1\",\r\n          overflow: \"scroll\",\r\n          marginTop: \"-11px\",\r\n          paddingRight: \"10px\",\r\n        }}\r\n      >\r\n        {loading === true ? (\r\n          <Skeleton active loading={loading} />\r\n        ) : (\r\n          <AutoMLExistingProjectsTable\r\n            type={tab}\r\n            showinfo={showinfo}\r\n            showModal={showModal}\r\n          />\r\n        )}\r\n      </div>\r\n      <AutoMLProjectsDrawer onClose={onClose} drawervisible={drawervisible} />\r\n      <AutoMLProjectShareModal\r\n        isModalVisible={modalvisible}\r\n        handleOK={() => handleModalOk()}\r\n        handleCancel={() => handleModalCancel()}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from \"react\";\r\nimport { Empty } from \"antd\";\r\nimport styles from \"./AutoMLExistingDatasetsTable.module.scss\";\r\n\r\nexport default function AutoMLExistingDatasetsTable(props) {\r\n  const [rowID, setrowID] = useState(null);\r\n\r\n  const [data, setdata] = useState([\r\n    {\r\n      key: \"1\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"4\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"5\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"6\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"7\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n  ]);\r\n\r\n  const rowclick = (id) => {\r\n    let trs = document.getElementsByTagName(\"tr\");\r\n    for (var x of trs) {\r\n      x.style.backgroundColor = \"#f5faff\";\r\n      x.className = \"\";\r\n    }\r\n    let tds = document.getElementsByTagName(\"td\");\r\n    for (var y of tds) {\r\n      y.style.fontWeight = \"normal\";\r\n    }\r\n    document.getElementById(id).className = \"selected\";\r\n    document.getElementById(id).style.backgroundColor = \"#b8d7f5\";\r\n    let list = document.getElementById(id).children;\r\n    for (var i = 0; i < list.length; i++) {\r\n      list[i].style.fontWeight = \"700\";\r\n    }\r\n    props.selected(id);\r\n  };\r\n\r\n  const Hoverover = (index) => {\r\n    // console.log(document.getElementById(index));\r\n    if (document.getElementsByClassName(\"selected\")[0]) {\r\n      if (document.getElementsByClassName(\"selected\")[0].id !== index) {\r\n        document.getElementById(index).style.backgroundColor = \"#a0cfff\";\r\n      }\r\n    }\r\n  };\r\n  const Hovercancel = (index) => {\r\n    // console.log(document.getElementById(index));\r\n    if (document.getElementsByClassName(\"selected\")[0]) {\r\n      if (document.getElementsByClassName(\"selected\")[0].id !== index) {\r\n        document.getElementById(index).style.backgroundColor = \"#f5faff\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const getrows = () => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <tr\r\n          id={item.key}\r\n          key={index}\r\n          onClick={() => {\r\n            rowclick(item.key);\r\n            // props.selected(item.key);\r\n          }}\r\n          onMouseOver={() => Hoverover(item.key)}\r\n          onMouseLeave={() => Hovercancel(item.key)}\r\n        >\r\n          <td className={styles.description}> {item.name} </td>\r\n          <td className={styles.status}> {item.description} </td>\r\n\r\n          <td className={styles.description}> {item.rows} </td>\r\n          <td className={styles.status}> {item.cols} </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Container}>\r\n      {data ? (\r\n        <table className={styles.datatable}>\r\n          <thead>\r\n            <tr>\r\n              <th> </th>\r\n              <th>Description</th>\r\n              <th>Rows</th>\r\n              <th>Cols</th>\r\n              <th> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{getrows()}</tbody>\r\n        </table>\r\n      ) : (\r\n        <Empty />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Tag } from \"antd\";\r\nimport \"./CompaniesGroup.scss\";\r\n\r\nconst { CheckableTag } = Tag;\r\n\r\nexport default class CompaniesGroup extends Component {\r\n  state = {\r\n    selectedTags: this.props.data,\r\n  };\r\n\r\n  handleChange(tag, checked) {\r\n    const { selectedTags } = this.state;\r\n    const nextSelectedTags = checked\r\n      ? [...selectedTags, tag]\r\n      : selectedTags.filter((t) => t !== tag);\r\n    console.log(\"You are interested in: \", nextSelectedTags);\r\n    this.setState({ selectedTags: nextSelectedTags });\r\n  }\r\n\r\n  render() {\r\n    const { selectedTags } = this.state;\r\n\r\n    return (\r\n      <div className=\"CompaniesGroup\">\r\n        {this.props.data.map((tag) => (\r\n          <CheckableTag\r\n            key={tag}\r\n            checked={selectedTags.indexOf(tag) > -1}\r\n            onChange={(checked) => this.handleChange(tag, checked)}\r\n          >\r\n            {tag}\r\n          </CheckableTag>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport \"./AutoMLSelectDatasetsDropdown.scss\";\r\n\r\nexport default function AutoMLSelectDatasetsDropdown(props) {\r\n  const { Option } = Select;\r\n\r\n  function onChange(value) {\r\n    props.selected(value);\r\n  }\r\n\r\n  function onBlur() {}\r\n\r\n  function onFocus() {}\r\n\r\n  function onSearch(val) {}\r\n  return (\r\n    <div className=\"SelectDatasetsDropdown\">\r\n      <Select\r\n        showSearch\r\n        style={{\r\n          width: \"350px\",\r\n          fontSize: \"11px\",\r\n          height: \"30px\",\r\n        }}\r\n        placeholder={`Select ${props.type}`}\r\n        optionFilterProp=\"children\"\r\n        disabled={!props.data}\r\n        value={props.value}\r\n        onChange={onChange}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        onSearch={onSearch}\r\n        size=\"large\"\r\n        filterOption={(input, option) =>\r\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n        }\r\n      >\r\n        {props.data ? (\r\n          props.data.map((item, index) => (\r\n            <Option value={`${item}`} key={index}>\r\n              {item}\r\n            </Option>\r\n          ))\r\n        ) : (\r\n          <Option value=\"Nothing\">Nothing to Show</Option>\r\n        )}\r\n        {/* <Option value=\"Oil and Gas\">Oil and Gas</Option>\r\n                <Option value=\"Banking\">Banking</Option>\r\n                <Option value=\"Oil and Gas Exploration\">Oil and Gas Exploration</Option>\r\n                <Option value=\"Oil and Gas Refinery\">Oil and Gas Refinery</Option>\r\n                <Option value=\"Oil and Gas Marketing\">Oil and Gas Marketing</Option> */}\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Col, DatePicker, Row, Skeleton } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styles from \"./SelectDatasets.module.scss\";\r\nimport { Tabs } from \"antd\";\r\nimport \"./tabstyles.scss\";\r\nimport AutoMLExistingDatasetsTable from \"../../../Components/Tables/AutoMLExistingDatasets/AutoMLExistingDatasetsTable\";\r\nimport CompaniesGroup from \"../../../Components/Containers/CompaniesGroup/CompaniesGroup\";\r\nimport AutoMLSelectDatasetsDropdown from \"../../../Components/Dropdowns/AutoMLSelectDatasetsDropdown/AutoMLSelectDatasetsDropdown\";\r\n\r\nexport default function SelectDatasets(props) {\r\n  const { TabPane } = Tabs;\r\n  let { project_id, model_id } = useParams();\r\n  const [selectedrow, setselectedrow] = useState(null);\r\n  const [Sector, setSector] = useState(null);\r\n  const [loading, setloading] = useState(false);\r\n\r\n  function callback(key) {}\r\n\r\n  const nextPage = () => {\r\n    console.log(\"Save Data in Cart and Next page\");\r\n    props.history.push({\r\n      pathname: `/automl/projects/${project_id}/models/${model_id}/selected_datasets/`,\r\n      state: { detail: \"I am from Select Datasets page\" },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row justify=\"space-between\" className={styles.container}>\r\n      <Col span={16} className={styles.column1}>\r\n        <h3 className={styles.titleBold}>\r\n          {project_id} | <span className={styles.subtitle}>{model_id}</span>\r\n        </h3>\r\n        <h3 style={{ textAlign: \"left\", fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n          Dataset Collection\r\n        </h3>\r\n        <hr\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#E1EEFF\",\r\n            border: \"none\",\r\n            height: \"1px\",\r\n            marginBottom: \"25px\",\r\n          }}\r\n        />\r\n        <Tabs\r\n          defaultActiveKey=\"1\"\r\n          onChange={callback}\r\n          size=\"small\"\r\n          style={{ paddingBottom: \"20px\" }}\r\n        >\r\n          <TabPane tab=\"Financial Data\" key=\"1\"></TabPane>\r\n          <TabPane tab=\"Trading Data\" key=\"2\"></TabPane>\r\n          <TabPane tab=\"Economical Data\" key=\"3\"></TabPane>\r\n          <TabPane tab=\"Industrial Data\" key=\"4\"></TabPane>\r\n          <TabPane tab=\"My Datasets\" key=\"5\"></TabPane>\r\n        </Tabs>\r\n        <Button\r\n          className={styles.importbutton}\r\n          style={loading === true ? { display: \"none\" } : null}\r\n        >\r\n          Import{\" \"}\r\n        </Button>\r\n        <div style={{ flexGrow: \"1\", overflow: \"scroll\", marginTop: \"10px\" }}>\r\n          <div style={{ textAlign: \"left\" }}>\r\n            <AutoMLSelectDatasetsDropdown\r\n              data={[\"Oil and Gas\", \"Banks\"]}\r\n              selected={(sector) => setSector(sector)}\r\n              type=\"Sector\"\r\n            />\r\n          </div>\r\n          {loading === true ? (\r\n            <Skeleton active loading={loading} />\r\n          ) : (\r\n            <AutoMLExistingDatasetsTable\r\n              selected={(id) => {\r\n                setselectedrow(id);\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        <div\r\n          style={\r\n            loading === true\r\n              ? { display: \"none\" }\r\n              : { textAlign: \"left\", marginTop: \"10px\" }\r\n          }\r\n        >\r\n          <Button\r\n            className={styles.continuebutton}\r\n            onClick={() => {\r\n              nextPage();\r\n            }}\r\n          >\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </Col>\r\n      <Col span={7} className={styles.column2}>\r\n        <h3 className={styles.titleBold}>Companies</h3>\r\n        <div style={{ height: \"15vh\", overflowY: \"scroll\" }}>\r\n          <CompaniesGroup\r\n            data={[\r\n              \"Abc\",\r\n              \"defedededde\",\r\n              \"eyg\",\r\n              \"AbcD\",\r\n              \"defD\",\r\n              \"eygD\",\r\n              \"AbcE\",\r\n              \"defE\",\r\n              \"eygE\",\r\n            ]}\r\n          />\r\n        </div>\r\n        <hr\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#E1EEFF\",\r\n            marginTop: \"20px\",\r\n            border: \"none\",\r\n            marginBottom: \"42px\",\r\n            height: \"1px\",\r\n          }}\r\n        />\r\n        <h3 className={styles.titleBold}>Date Range</h3>\r\n        <div style={{ flexGrow: \"1\" }}>\r\n          <p className={styles.datetitle}>Starting Date</p>\r\n          <DatePicker picker=\"year\" className={styles.dateinput} />\r\n          <p className={styles.datetitle}>Ending Date</p>\r\n          <DatePicker picker=\"year\" className={styles.dateinput} />\r\n        </div>\r\n        <Button\r\n          onClick={() => {\r\n            console.log(\"Add Selected Dataset in Cart\");\r\n          }}\r\n          className={styles.addcartbutton}\r\n        >\r\n          Add to Data Cart\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport \"./SelectedDataList.scss\";\r\n\r\nexport default function SelectedDataList(props) {\r\n  return (\r\n    <>\r\n      {props.data.map((item, index) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              backgroundColor: \"blue\",\r\n              width: \"100%\",\r\n              padding: \"17px\",\r\n              paddingLeft: \"27px\",\r\n              height: \"49px\",\r\n              marginBottom: \"15px\",\r\n              background: \"#FFFFFF\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n            className=\"SelectedDataList\"\r\n          >\r\n            <div\r\n              style={{\r\n                fontStyle: \" normal\",\r\n                fontWeight: \"normal\",\r\n                fontSize: \"12px\",\r\n                lineHeight: \"14px\",\r\n                color: \"#6D6D6D\",\r\n              }}\r\n            >\r\n              {item}\r\n            </div>\r\n            <div\r\n              style={{\r\n                flexGrow: \"1\",\r\n                textAlign: \"right\",\r\n                fontSize: \"20px\",\r\n                lineHeight: \"14px\",\r\n                color: \"#EC547A\",\r\n              }}\r\n            >\r\n              <CloseCircleOutlined\r\n                style={{ backgroundColor: \"#FDEEF2\", borderRadius: \"50%\" }}\r\n                className=\"icon\"\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from \"react\";\r\nimport { Empty } from \"antd\";\r\nimport styles from \"./AutoMLSelectedDatasetsTable.module.scss\";\r\n\r\nexport default function AutoMLSelectedDatasetsTable(props) {\r\n  const [rowID, setrowID] = useState(null);\r\n\r\n  const [data, setdata] = useState([\r\n    {\r\n      key: \"1\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"4\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"5\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"6\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n    {\r\n      key: \"7\",\r\n      name: \"Stock Prediction\",\r\n      rows: 12,\r\n      cols: 20,\r\n      description: \"New\",\r\n      selected: \"\",\r\n    },\r\n  ]);\r\n\r\n  const getrows = () => {\r\n    return data.map((item, index) => {\r\n      return (\r\n        <tr id={item.key} key={index}>\r\n          <td className={styles.description}> {item.name} </td>\r\n          <td className={styles.status}> {item.description} </td>\r\n\r\n          <td className={styles.description}> {item.rows} </td>\r\n          <td className={styles.status}> {item.cols} </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Container}>\r\n      {data ? (\r\n        <table className={styles.datatable}>\r\n          <thead>\r\n            <tr>\r\n              <th> </th>\r\n              <th>Description</th>\r\n              <th>Rows</th>\r\n              <th>Cols</th>\r\n              <th> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{getrows()}</tbody>\r\n        </table>\r\n      ) : (\r\n        <Empty />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { Button, Col, Row, Skeleton } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SelectedDataList from \"../../../Components/List/SelectedDataList\";\r\nimport AutoMLSelectedDatasetsTable from \"../../../Components/Tables/AutoMLSelectedDatasets/AutoMLSelectedDatasetsTable\";\r\nimport styles from \"./SelectedDatasets.module.scss\";\r\n\r\nexport default function SelectedDatasets(props) {\r\n  let { project_id, model_id } = useParams();\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const nextPage = () => {\r\n    props.history.push({\r\n      pathname: `/automl/projects/${project_id}/models/${model_id}/link_columns`,\r\n      state: {\r\n        detail: \"I am from Selected page\",\r\n        page_name: \"automl_link_Column\",\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row justify=\"space-between\" className={styles.container}>\r\n      <Col span={16} className={styles.column1}>\r\n        <h3 className={styles.titleBold}>\r\n          {project_id} | <span className={styles.subtitle}>{model_id}</span>\r\n        </h3>\r\n        <h3 style={{ textAlign: \"left\", fontSize: \"20px\", fontWeight: \"bold\" }}>\r\n          Selected Dataset\r\n        </h3>\r\n        <hr\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#E1EEFF\",\r\n            border: \"none\",\r\n            height: \"1px\",\r\n          }}\r\n        />\r\n        <div style={{ flexGrow: \"1\", overflow: \"scroll\" }}>\r\n          {loading === true ? (\r\n            <Skeleton active loading={loading} />\r\n          ) : (\r\n            <AutoMLSelectedDatasetsTable />\r\n          )}\r\n        </div>\r\n        <div style={{ textAlign: \"left\", marginTop: \"10px\" }}>\r\n          <Button className={styles.linkcolbutton} onClick={() => nextPage()}>\r\n            Link Columns\r\n          </Button>\r\n        </div>\r\n      </Col>\r\n      <Col span={7} className={styles.column2}>\r\n        <h3 className={styles.titleBold}>Companies</h3>\r\n        <div\r\n          style={{ flexGrow: \"1\", overflowY: \"scroll\", paddingRight: \"10px\" }}\r\n        >\r\n          {loading === true ? (\r\n            <Skeleton active loading={loading} />\r\n          ) : (\r\n            <SelectedDataList\r\n              data={[\r\n                \"Oil and Gas Refinery\",\r\n                \"Oil and Gas Refinery\",\r\n                \"Oil and Gas Refinery\",\r\n                \"Oil and Gas Refinery\",\r\n                \"Oil and Gas Refinery\",\r\n              ]}\r\n            />\r\n          )}\r\n        </div>\r\n        <hr\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#E1EEFF\",\r\n            border: \"none\",\r\n            height: \"1px\",\r\n          }}\r\n        />\r\n        <div className={styles.info}>\r\n          Minimum Column Table:\r\n          <span style={{ float: \"right\" }}>\r\n            FFC{\" \"}\r\n            <span style={{ fontWeight: \"500\", fontStyle: \"italic\" }}>\r\n              (2 columns)\r\n            </span>\r\n          </span>\r\n        </div>\r\n        <div className={styles.info}>\r\n          Maximum Column Table:\r\n          <span style={{ float: \"right\" }}>\r\n            FFC\r\n            <span style={{ fontWeight: \"500\", fontStyle: \"italic\" }}>\r\n              (20 columns)\r\n            </span>\r\n          </span>\r\n        </div>\r\n        <div className={styles.info}>\r\n          Min No. of Rows Required:\r\n          <span style={{ float: \"right\" }}>96</span>\r\n        </div>\r\n        <div className={styles.info}>\r\n          Suggested No. of Rows Required:\r\n          <span style={{ float: \"right\" }}>255</span>\r\n        </div>\r\n        <div className={styles.info}>\r\n          Optimal No. of Rows Required:\r\n          <span style={{ float: \"right\" }}>300</span>\r\n        </div>\r\n        <div className={styles.info}>\r\n          Optimal row to column ratio:\r\n          <span style={{ float: \"right\" }}>25:1</span>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import Layout, { Content } from \"antd/lib/layout/layout\";\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport AutoMLBreadcrumbs from \"../Components/BreadCrumbs/AutoMLBreadcrumbs/AutoMLBreadcrumbs\";\r\nimport AutoMLHeader from \"../Components/Header/AutoMLHeader/AutoMLHeader\";\r\nimport AutoMLSideBar from \"../Components/SideBar/AutoMLSideBar/AutoMLSideBar\";\r\nimport CreateNewModel from \"../Pages/AutoML/CreateNewModel/CreateNewModel\";\r\nimport CreateNewProject from \"../Pages/AutoML/CreateNewProject/CreateNewProject\";\r\nimport Demo from \"../Pages/AutoML/Demo/Demo\";\r\nimport ExistingModels from \"../Pages/AutoML/ExistingModels/ExistingModels\";\r\nimport NewProject from \"../Pages/AutoML/NewProject/NewProject\";\r\nimport SelectDatasets from \"../Pages/AutoML/SelectDatasets/SelectDatasets\";\r\nimport SelectedDatasets from \"../Pages/AutoML/SelectedDatasets/SelectedDatasets\";\r\nimport styles from \"./AutoMLRoutes.module.scss\";\r\n\r\nexport default function AutoMLRoutes() {\r\n  return (\r\n    <div>\r\n      <Layout style={{ height: \"100vh\" }}>\r\n        <AutoMLHeader />\r\n        <Layout>\r\n          <AutoMLSideBar />\r\n          <Layout style={{ backgroundColor: \"#F5FAFF\" }}>\r\n            <AutoMLBreadcrumbs />\r\n            <Content className={styles.content}>\r\n              <Route exact path=\"/automl/projects\" component={NewProject} />\r\n              <Route\r\n                exact\r\n                path=\"/automl/projects/newproject\"\r\n                component={CreateNewProject}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/automl/projects/:project_id/models\"\r\n                component={ExistingModels}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/automl/projects/:project_id/models/newmodel\"\r\n                component={CreateNewModel}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/automl/projects/:project_id/models/:model_id/select_datasets\"\r\n                component={SelectDatasets}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/automl/projects/:project_id/models/:model_id/selected_datasets\"\r\n                component={SelectedDatasets}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/automl/projects/:project_id/models/:model_id/link_columns\"\r\n                component={Demo}\r\n              />\r\n              <Route exact path=\"/\" component={NewProject} />\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\nimport AutoMLRoutes from \"./Routes/AutoMLRoutes\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Switch>\n          <AutoMLRoutes />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SelectDatasets_container__1vSbm\",\"column1\":\"SelectDatasets_column1__1kCbR\",\"titleBold\":\"SelectDatasets_titleBold__1qEp9\",\"subtitle\":\"SelectDatasets_subtitle__kj2Lz\",\"importbutton\":\"SelectDatasets_importbutton__qSjNH\",\"continuebutton\":\"SelectDatasets_continuebutton__3juRC\",\"column2\":\"SelectDatasets_column2__2iIF2\",\"datetitle\":\"SelectDatasets_datetitle__34VyS\",\"dateinput\":\"SelectDatasets_dateinput__3tIyv\",\"addcartbutton\":\"SelectDatasets_addcartbutton__3DktZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SelectedDatasets_container__zPNMY\",\"column1\":\"SelectedDatasets_column1__15KiB\",\"titleBold\":\"SelectedDatasets_titleBold__1XLY_\",\"subtitle\":\"SelectedDatasets_subtitle__1d-SR\",\"linkcolbutton\":\"SelectedDatasets_linkcolbutton__2U_iX\",\"column2\":\"SelectedDatasets_column2__RQugg\",\"info\":\"SelectedDatasets_info__2joR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"AutoMLExistingModelsTable_Container__3v-zd\",\"anchor\":\"AutoMLExistingModelsTable_anchor__187WW\",\"anchor2\":\"AutoMLExistingModelsTable_anchor2__2lfZC\",\"datatable\":\"AutoMLExistingModelsTable_datatable__2mKYY\",\"titlebold\":\"AutoMLExistingModelsTable_titlebold__39YjD\",\"selected\":\"AutoMLExistingModelsTable_selected__yZKPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_name\":\"CreateNewModel_input_name__iaXet\",\"input_desc\":\"CreateNewModel_input_desc__2fhav\",\"btn_cancel\":\"CreateNewModel_btn_cancel__1Go-l\",\"btn_create\":\"CreateNewModel_btn_create__366DQ\",\"label\":\"CreateNewModel_label__td3gM\",\"span\":\"CreateNewModel_span__2sIhQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"AutoMLExistingProjectsTable_Container__3t1P2\",\"anchor\":\"AutoMLExistingProjectsTable_anchor__328Wp\",\"anchor2\":\"AutoMLExistingProjectsTable_anchor2__gLweG\",\"datatable\":\"AutoMLExistingProjectsTable_datatable__9sOGN\",\"titlebold\":\"AutoMLExistingProjectsTable_titlebold__3EAaG\",\"selected\":\"AutoMLExistingProjectsTable_selected__1kOLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_name\":\"CreateNewProject_input_name__LOyGj\",\"input_desc\":\"CreateNewProject_input_desc__1krJA\",\"btn_cancel\":\"CreateNewProject_btn_cancel__1Bp9B\",\"btn_create\":\"CreateNewProject_btn_create__1n-Pg\",\"label\":\"CreateNewProject_label__heypx\",\"span\":\"CreateNewProject_span__2h77b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"AutoMLExistingDatasetsTable_Container__FCh7y\",\"clickRowStyl\":\"AutoMLExistingDatasetsTable_clickRowStyl__1QJNs\",\"datatable\":\"AutoMLExistingDatasetsTable_datatable__3dlhe\",\"titlebold\":\"AutoMLExistingDatasetsTable_titlebold__1rfca\",\"selected\":\"AutoMLExistingDatasetsTable_selected__3ivOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"AutoMLSelectedDatasetsTable_Container__3BT3U\",\"datatable\":\"AutoMLSelectedDatasetsTable_datatable__3juwO\",\"titlebold\":\"AutoMLSelectedDatasetsTable_titlebold__9eh-k\",\"selected\":\"AutoMLSelectedDatasetsTable_selected__3wg4k\"};"],"sourceRoot":""}